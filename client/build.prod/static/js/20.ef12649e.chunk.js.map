{"version":3,"sources":["components/invoices/invoice-details.js","components/invoices/invoice-line-items.js","components/invoices/invoice-payment.js","components/invoices/invoice-payment-history.js","icons/mail.js","components/invoices/invoice-send-notification.js","containers/invoice.js","components/property-list-item.js","components/property-list.js","icons/trash.js","icons/eye.js","components/action-list.js","components/action-list-item.js","icons/duplicate.js","api/invoice.js","components/invoices/invoice-table.js","components/invoices/invoice-pdf.js"],"names":["InvoiceDetails","props","invoice","Card","variant","CardHeader","title","Divider","Grid","container","item","md","xs","label","value","customerName","id","format","issueDate","dueDate","note","InvoiceLineItems","InvoicePayment","paymentAt","paymentMethod","transactionId","numeral","totalAmount","currencySymbol","transactionFees","paymentStatus","items","type","chargeId","createdAt","subMinutes","Date","actualStatus","oldStatus","getLabel","InvoicePaymentHistory","CardContent","Timeline","sx","my","p","map","index","TimelineItem","alignItems","minHeight","display","TimelineDot","alignSelf","boxShadow","flexShrink","m","TimelineContent","pr","Typography","color","mr","component","whiteSpace","formatDistanceToNow","length","TimelineConnector","backgroundColor","height","ml","Mail","createSvgIcon","xmlns","viewBox","fill","d","notificationOptions","InvoiceSendNotification","navigate","useNavigate","useDialog","markDialogOpen","handleOpenMarkDialog","handleCloseMarkDialog","duplicateDialogOpen","handleOpenDuplicateDialog","handleCloseDuplicateDialog","deleteDialogOpen","handleOpenDeleteDialog","handleCloseDeleteDialog","useState","notification","setNotification","fullWidth","onChange","event","target","select","option","MenuItem","Button","onClick","toast","success","startIcon","mt","icon","EyeIcon","CashIcon","DuplicateIcon","document","fileName","style","textDecoration","DownloadIcon","TrashIcon","message","onCancel","onConfirm","error","open","Invoice","mounted","useMounted","isLoading","invoiceState","setInvoiceState","getInvoice","useCallback","a","invoiceApi","result","current","data","console","useEffect","catch","gtm","push","Box","flexGrow","Container","maxWidth","flexDirection","py","Skeleton","mb","RouterLink","to","size","spacing","lg","order","PropertyListItem","align","children","other","disableGutters","px","disableTypography","primary","minWidth","secondary","flex","defaultProps","PropertyList","disablePadding","Trash","fillRule","clipRule","Eye","ActionList","dense","width","ActionListItem","Icon","fontSize","Duplicate","now","invoices","subDays","status","subtotalAmount","taxAmount","lineItems","currency","discountAmount","image","name","quantity","sku","unitAmount","isTaxable","options","throttle","wait","filters","sort","sortBy","page","query","view","queriedInvoices","filter","_invoice","toLowerCase","includes","filteredInvoices","applyFilters","sortedInvoices","applySort","paginatedInvoices","applyPagination","Promise","resolve","invoicesCount","InvoiceTable","styles","StyleSheet","create","padding","h4","fontWeight","lineHeight","subtitle2","letterSpacing","body2","h6","gutterBottom","marginBottom","header","justifyContent","textTransform","details","marginTop","dates","notes","table","border","borderRadius","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","InvoicePDF","marginRight"],"mappings":"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","file":"static/js/20.ef12649e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Card, CardHeader, Divider, Grid } from '@material-ui/core';\nimport { PropertyList } from '../property-list';\nimport { PropertyListItem } from '../property-list-item';\n\nexport const InvoiceDetails = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Invoice Details\" />\n      <Divider />\n      <Grid container>\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <PropertyList>\n            <PropertyListItem\n              label=\"Customer Name\"\n              value={invoice.customerName}\n            />\n            <PropertyListItem\n              label=\"Invoice Number\"\n              value={`#${invoice.id}`}\n            />\n            <PropertyListItem\n              label=\"Invoice Date\"\n              value={format(invoice.issueDate, 'dd MMM yyyy')}\n            />\n          </PropertyList>\n        </Grid>\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <PropertyList>\n            <PropertyListItem\n              label=\"Due Date\"\n              value={format(invoice.dueDate, 'dd MMM yyyy')}\n            />\n            <PropertyListItem\n              label=\"Notes\"\n              value={`“${invoice.note}”`}\n            />\n          </PropertyList>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nInvoiceDetails.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider } from '@material-ui/core';\nimport { InvoiceTable } from './invoice-table';\n\nexport const InvoiceLineItems = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Line Items\" />\n      <Divider />\n      <InvoiceTable invoice={invoice} />\n    </Card>\n  );\n};\n\nInvoiceLineItems.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Card, CardHeader, Divider, Grid } from '@material-ui/core';\nimport { PropertyList } from '../property-list';\nimport { PropertyListItem } from '../property-list-item';\n\nexport const InvoicePayment = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Card variant=\"outlined\">\n      <CardHeader title=\"Payment\" />\n      <Divider />\n      <Grid container>\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <PropertyList>\n            <PropertyListItem\n              label=\"Date of Payment\"\n              value={format(invoice.paymentAt, 'dd MMM yyyy')}\n            />\n            <PropertyListItem\n              label=\"Payment Method\"\n              value={invoice.paymentMethod}\n            />\n            <PropertyListItem\n              label=\"Transaction ID\"\n              value={invoice.transactionId}\n            />\n          </PropertyList>\n        </Grid>\n        <Grid\n          item\n          md={6}\n          xs={12}\n        >\n          <PropertyList>\n            <PropertyListItem\n              label=\"Amount\"\n              value={numeral(invoice.totalAmount).format(`${invoice.currencySymbol}0,0.00`)}\n            />\n            <PropertyListItem\n              label=\"Transaction Fees\"\n              value={numeral(invoice.transactionFees).format(`${invoice.currencySymbol}0,0.00`)}\n            />\n            <PropertyListItem\n              label=\"Status\"\n              value={invoice.paymentStatus}\n            />\n          </PropertyList>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nInvoicePayment.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import { Fragment } from 'react';\nimport { formatDistanceToNow, subMinutes } from 'date-fns';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\nimport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem\n} from '@material-ui/lab';\n\nconst items = [\n  {\n    id: '1',\n    type: 'chargeComplete',\n    chargeId: 'th_2JCleBj4vHz',\n    createdAt: subMinutes(new Date(), 15)\n  },\n  {\n    id: '2',\n    actualStatus: 'Complete',\n    oldStatus: 'Pending',\n    type: 'orderStatus',\n    createdAt: subMinutes(new Date(), 53)\n  }\n];\n\nconst getLabel = (item) => {\n  if (item.type === 'chargeComplete') {\n    return (\n      <>\n        Stripe charge complete\n        <br />\n        Charge ID:\n        {' '}\n        {item.chargeId}\n      </>\n    );\n  }\n\n  return (\n    <>\n      Order status changed from\n      {' '}\n      <strong>{item.oldStatus}</strong>\n      {' '}\n      payment to\n      {' '}\n      <strong>{item.actualStatus}</strong>\n      .\n    </>\n  );\n};\n\nexport const InvoicePaymentHistory = () => (\n  <Card variant=\"outlined\">\n    <CardHeader title=\"Payment History\" />\n    <Divider />\n    <CardContent>\n      <Timeline\n        sx={{\n          my: 0,\n          p: 0\n        }}\n      >\n        {items.map((item, index) => (\n          <Fragment key={item.id}>\n            <TimelineItem\n              sx={{\n                alignItems: 'center',\n                minHeight: 'auto',\n                '&::before': {\n                  display: 'none'\n                }\n              }}\n            >\n              <TimelineDot\n                sx={{\n                  alignSelf: 'center',\n                  boxShadow: 'none',\n                  flexShrink: 0,\n                  m: 0\n                }}\n                variant=\"outlined\"\n              />\n              <TimelineContent sx={{ pr: 0 }}>\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ mr: 1 }}\n                  variant=\"body2\"\n                >\n                  {getLabel(item)}\n                </Typography>\n                <Typography\n                  component=\"p\"\n                  color=\"textSecondary\"\n                  sx={{ whiteSpace: 'nowrap' }}\n                  variant=\"caption\"\n                >\n                  {formatDistanceToNow(item.createdAt)}\n                  {' '}\n                  ago\n                </Typography>\n              </TimelineContent>\n            </TimelineItem>\n            {items.length > index + 1 && (\n              <TimelineConnector\n                sx={{\n                  backgroundColor: 'neutral.200',\n                  height: 22,\n                  ml: '5px',\n                  my: 1\n                }}\n              />\n            )}\n          </Fragment>\n        ))}\n      </Timeline>\n    </CardContent>\n  </Card>\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Mail = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n    <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n  </svg>, 'Mail'\n);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { Button, Card, CardContent, CardHeader, Divider, MenuItem } from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { Cash as CashIcon } from '../../icons/cash';\nimport { Download as DownloadIcon } from '../../icons/download';\nimport { Duplicate as DuplicateIcon } from '../../icons/duplicate';\nimport { Eye as EyeIcon } from '../../icons/eye';\nimport { Mail as MailIcon } from '../../icons/mail';\nimport { Trash as TrashIcon } from '../../icons/trash';\nimport { ActionList } from '../action-list';\nimport { ActionListItem } from '../action-list-item';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { InputField } from '../input-field';\nimport { InvoicePDF } from './invoice-pdf';\n\nconst notificationOptions = [\n  {\n    label: 'Invoice created',\n    value: 'invoiceCreated'\n  },\n  {\n    label: 'Payment received',\n    value: 'paymentConfirmation'\n  }\n];\n\nexport const InvoiceSendNotification = (props) => {\n  const { invoice } = props;\n  const navigate = useNavigate();\n  const [markDialogOpen, handleOpenMarkDialog, handleCloseMarkDialog] = useDialog();\n  const [duplicateDialogOpen, handleOpenDuplicateDialog, handleCloseDuplicateDialog] = useDialog();\n  const [deleteDialogOpen, handleOpenDeleteDialog, handleCloseDeleteDialog] = useDialog();\n  const [notification, setNotification] = useState(notificationOptions[0].value);\n\n  const handleStatusChange = (event) => {\n    setNotification(event.target.value);\n  };\n\n  const handleSendNotification = () => {\n    setNotification(notification);\n    toast.success('Notification sent');\n  };\n\n  const handleMark = () => {\n    handleCloseMarkDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  const handleDuplicate = () => {\n    handleCloseDuplicateDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  const handleDelete = () => {\n    handleCloseDeleteDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"outlined\"\n        {...props}\n      >\n        <CardHeader title=\"Send Notification\" />\n        <Divider />\n        <CardContent>\n          <InputField\n            fullWidth\n            onChange={handleStatusChange}\n            select\n            value={notification}\n          >\n            {notificationOptions.map((option) => (\n              <MenuItem\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </InputField>\n          <Button\n            color=\"primary\"\n            onClick={handleSendNotification}\n            startIcon={<MailIcon />}\n            sx={{ mt: 2 }}\n            variant=\"outlined\"\n          >\n            Send Email\n          </Button>\n        </CardContent>\n        <Divider />\n        <ActionList>\n          <ActionListItem\n            icon={EyeIcon}\n            label=\"Preview\"\n            onClick={() => navigate('/dashboard/invoices/1/preview')}\n          />\n          <ActionListItem\n            icon={CashIcon}\n            label=\"Mark Paid\"\n            onClick={handleOpenMarkDialog}\n          />\n          <ActionListItem\n            icon={DuplicateIcon}\n            label=\"Duplicate\"\n            onClick={handleOpenDuplicateDialog}\n          />\n          <PDFDownloadLink\n            document={<InvoicePDF invoice={invoice} />}\n            fileName=\"invoice\"\n            style={{\n              color: 'inherit',\n              textDecoration: 'none'\n            }}\n          >\n            <ActionListItem\n              icon={DownloadIcon}\n              label=\"Download (PDF)\"\n            />\n          </PDFDownloadLink>\n          <ActionListItem\n            icon={TrashIcon}\n            label=\"Delete\"\n            onClick={handleOpenDeleteDialog}\n          />\n        </ActionList>\n      </Card>\n      <ConfirmationDialog\n        message=\"Are you sure you want to mark this invoice as paid? This can't be undone.\"\n        onCancel={handleCloseMarkDialog}\n        onConfirm={handleMark}\n        open={markDialogOpen}\n        title=\"Mark Invoice as paid\"\n        variant=\"info\"\n      />\n      <ConfirmationDialog\n        message=\"Are you sure you want to duplicate this invoice? This can't be undone.\"\n        onCancel={handleCloseDuplicateDialog}\n        onConfirm={handleDuplicate}\n        open={duplicateDialogOpen}\n        title=\"Duplicate Invoice\"\n        variant=\"warning\"\n      />\n      <ConfirmationDialog\n        message=\"Are you sure you want to delete this invoice? This can't be undone.\"\n        onCancel={handleCloseDeleteDialog}\n        onConfirm={handleDelete}\n        open={deleteDialogOpen}\n        title=\"Delete Invoice\"\n        variant=\"error\"\n      />\n    </>\n  );\n};\n\nInvoiceSendNotification.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Container, Grid, Skeleton, Typography } from '@material-ui/core';\nimport { invoiceApi } from '../api/invoice';\nimport { InvoiceDetails } from '../components/invoices/invoice-details';\nimport { InvoiceLineItems } from '../components/invoices/invoice-line-items';\nimport { InvoicePayment } from '../components/invoices/invoice-payment';\nimport { InvoicePaymentHistory } from '../components/invoices/invoice-payment-history';\nimport { InvoiceSendNotification } from '../components/invoices/invoice-send-notification';\nimport { Status } from '../components/status';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { ExclamationOutlined as ExclamationOutlinedIcon } from '../icons/exclamation-outlined';\nimport { Eye as EyeIcon } from '../icons/eye';\nimport gtm from '../lib/gtm';\n\nexport const Invoice = () => {\n  const mounted = useMounted();\n  const [invoiceState, setInvoiceState] = useState({ isLoading: true });\n\n  const getInvoice = useCallback(async () => {\n    setInvoiceState(() => ({ isLoading: true }));\n\n    try {\n      const result = await invoiceApi.getInvoice();\n\n      if (mounted.current) {\n        setInvoiceState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setInvoiceState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getInvoice().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const renderContent = () => {\n    if (invoiceState.isLoading) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Skeleton height={42} />\n          <Skeleton />\n          <Skeleton />\n        </Box>\n      );\n    }\n\n    if (invoiceState.error) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              backgroundColor: 'background.default',\n              display: 'flex',\n              flexDirection: 'column',\n              p: 3\n            }}\n          >\n            <ExclamationOutlinedIcon />\n            <Typography\n              color=\"textSecondary\"\n              sx={{ mt: 2 }}\n              variant=\"body2\"\n            >\n              {invoiceState.error}\n            </Typography>\n          </Box>\n        </Box>\n      );\n    }\n\n    return (\n      <>\n        <Box sx={{ py: 4 }}>\n          <Box sx={{ mb: 2 }}>\n            <Button\n              color=\"primary\"\n              component={RouterLink}\n              startIcon={<ArrowLeftIcon />}\n              to=\"/dashboard/invoices\"\n              variant=\"text\"\n            >\n              Invoices\n            </Button>\n          </Box>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              #\n              {invoiceState.data.id}\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <Button\n              color=\"primary\"\n              component={RouterLink}\n              size=\"large\"\n              startIcon={<EyeIcon />}\n              to=\"/dashboard/invoices/1/preview\"\n              variant=\"contained\"\n            >\n              Preview\n            </Button>\n          </Box>\n          <Box sx={{ mt: 2 }}>\n            <Status\n              color=\"error.main\"\n              label=\"Unpaid\"\n            />\n          </Box>\n        </Box>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            container\n            item\n            lg={8}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <InvoiceDetails invoice={invoiceState.data} />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <InvoicePayment invoice={invoiceState.data} />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <InvoiceLineItems invoice={invoiceState.data} />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            lg={4}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <InvoiceSendNotification invoice={invoiceState.data} />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <InvoicePaymentHistory />\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Invoice: Summary | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        <Container\n          maxWidth=\"lg\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n          }}\n        >\n          {renderContent()}\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport const PropertyListItem = (props) => {\n  const { align, children, component, value, label, ...other } = props;\n\n  return (\n    <ListItem\n      component={component}\n      disableGutters\n      sx={{\n        px: 3,\n        py: 1.5\n      }}\n      {...other}\n    >\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            sx={{ minWidth: align === 'vertical' ? 'inherit' : 180 }}\n            variant=\"subtitle2\"\n          >\n            {label}\n          </Typography>\n        )}\n        secondary={(\n          <Box\n            sx={{\n              flex: 1,\n              mt: align === 'vertical' ? 0.5 : 0\n            }}\n          >\n            {children || (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {value}\n              </Typography>\n            )}\n          </Box>\n        )}\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: align === 'vertical' ? 'column' : 'row',\n          my: 0\n        }}\n      />\n    </ListItem>\n  );\n};\n\nPropertyListItem.defaultProps = {\n  align: 'vertical'\n};\n\nPropertyListItem.propTypes = {\n  align: PropTypes.string,\n  component: PropTypes.elementType,\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\n\nexport const PropertyList = (props) => {\n  const { children } = props;\n\n  return (\n    <List disablePadding>\n      {children}\n    </List>\n  );\n};\n\nPropertyList.propTypes = {\n  children: PropTypes.node\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Eye = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Eye'\n);\n","import { List } from '@material-ui/core';\n\nexport const ActionList = (props) => (\n  <List\n    dense\n    sx={{\n      backgroundColor: 'neutral.100',\n      width: '100%'\n    }}\n    {...props}\n  />\n);\n","import PropTypes from 'prop-types';\nimport { ListItemButton, ListItemIcon, ListItemText } from '@material-ui/core';\n\nexport const ActionListItem = (props) => {\n  const { icon: Icon, label, ...other } = props;\n\n  return (\n    <ListItemButton {...other}>\n      <ListItemIcon>\n        <Icon\n          fontSize=\"small\"\n          sx={{ color: 'text.secondary' }}\n        />\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItemButton>\n  );\n};\n\nActionListItem.propTypes = {\n  icon: PropTypes.elementType,\n  label: PropTypes.string.isRequired\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n","import { subDays, subMinutes } from 'date-fns';\nimport { throttle } from '../config';\nimport { applyFilters } from '../utils/apply-filters';\nimport { applyPagination } from '../utils/apply-pagination';\nimport { applySort } from '../utils/apply-sort';\nimport { wait } from '../utils/wait';\n\nconst now = new Date();\n\nconst invoices = [\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 2),\n    id: 'DEV5437',\n    issueDate: subDays(now, 9),\n    paymentMethod: 'Credit Card',\n    status: 'ongoing',\n    totalAmount: 192.5\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 1),\n    id: 'DEV5436',\n    issueDate: subDays(now, 12),\n    paymentMethod: 'Credit Card',\n    status: 'ongoing',\n    totalAmount: 192\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 14),\n    id: 'DEV54375',\n    issueDate: subDays(now, 4),\n    paymentMethod: 'PayPal',\n    status: 'ongoing',\n    totalAmount: 60\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 22),\n    id: 'DEV5434',\n    issueDate: subDays(now, 12),\n    paymentMethod: 'Credit Card',\n    status: 'draft',\n    totalAmount: 631\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 32),\n    id: 'DEV5433',\n    issueDate: subDays(now, 19),\n    paymentMethod: 'PayPal',\n    status: 'paid',\n    totalAmount: 1200\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 12),\n    id: 'DEV5432',\n    issueDate: subDays(now, 5),\n    paymentMethod: 'PayPal',\n    status: 'overdue',\n    totalAmount: 631\n  }\n];\n\nconst invoice = {\n  createdAt: subDays(now, 10),\n  currencySymbol: '$',\n  customerName: 'Natalie Rusell',\n  dueDate: subDays(subMinutes(now, 29), 2),\n  id: 'DEV5437',\n  issueDate: subDays(subMinutes(now, 45), 9),\n  note: '“Please confirm once paid.”',\n  paymentAt: subDays(subMinutes(now, 11), 5),\n  paymentMethod: 'Credit Card',\n  paymentStatus: 'Failed',\n  status: 'ongoing',\n  subtotalAmount: 160,\n  taxAmount: 32.5,\n  totalAmount: 192.5,\n  transactionFees: 0,\n  transactionId: 'tran_54febasdaoiuhqja1837hj',\n  lineItems: [\n    {\n      currency: 'USD',\n      currencySymbol: '$',\n      discountAmount: 0,\n      image: '/static/product-01.png',\n      name: 'Watch with Leather Strap',\n      quantity: 1,\n      sku: 'BBAK01-A',\n      subtotalAmount: 160,\n      taxAmount: 32.5,\n      totalAmount: 192.5,\n      unitAmount: 160,\n      isTaxable: true\n    }\n  ]\n};\n\nclass InvoiceApi {\n  async getInvoices(options) {\n    if (throttle) {\n      await wait(throttle);\n    }\n\n    const { filters, sort, sortBy, page, query, view } = options;\n\n    /*\n     NOTE: Query, filter, sort and pagination are operation meant to be executed on the server.\n     Since this does not connect to a real backend, we simulate these operations.\n     */\n\n    const queriedInvoices = invoices.filter((_invoice) => {\n      // If query exists, it looks only in customer id field\n      if (!!query && !_invoice.id?.toLowerCase().includes(query.toLowerCase())) {\n        return false;\n      }\n\n      // No need to look for any resource fields\n      if (typeof view === 'undefined' || view === 'all') {\n        return true;\n      }\n\n      // In this case, the view represents the resource status\n      return _invoice.status === view;\n    });\n    const filteredInvoices = applyFilters(queriedInvoices, filters);\n    const sortedInvoices = applySort(filteredInvoices, sort, sortBy);\n    const paginatedInvoices = applyPagination(sortedInvoices, page);\n\n    return Promise.resolve({\n      invoices: paginatedInvoices,\n      invoicesCount: filteredInvoices.length\n    });\n  }\n\n  async getInvoice() {\n    if (throttle) {\n      await wait(throttle);\n    }\n\n    return Promise.resolve(invoice);\n  }\n}\n\nexport const invoiceApi = new InvoiceApi();\n","import PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Scrollbar } from '../scrollbar';\n\nexport const InvoiceTable = (props) => {\n  const { invoice } = props;\n\n  return (\n    <div>\n      <Scrollbar>\n        <Table sx={{ minWidth: 500 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Item\n              </TableCell>\n              <TableCell>\n                Qty\n              </TableCell>\n              <TableCell>\n                Total\n              </TableCell>\n              <TableCell>\n                Tax\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {invoice.lineItems.map((item) => (\n              <TableRow key={item.name}>\n                <TableCell>\n                  <Box>\n                    <Typography\n                      color=\"inherit\"\n                      variant=\"body2\"\n                    >\n                      {item.name}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {`${item.currency}  ${numeral(item.unitAmount).format(`${item.currencySymbol}0,0.00`)}`}\n                    </Typography>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                  {item.quantity}\n                </TableCell>\n                <TableCell>\n                  {numeral(item.subtotalAmount).format(`${item.currencySymbol}0,0.00`)}\n                </TableCell>\n                <TableCell sx={{ width: 150 }}>\n                  {numeral(item.taxAmount).format(`${item.currencySymbol}0,0.00`)}\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{ mr: 1 }}\n                    variant=\"subtitle2\"\n                  >\n                    Tax\n                  </Typography>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"subtitle2\"\n                  >\n                    {numeral(invoice.taxAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                  </Typography>\n                </Box>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{ mr: 1 }}\n                    variant=\"subtitle2\"\n                  >\n                    Total\n                  </Typography>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h6\"\n                  >\n                    {numeral(invoice.totalAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                  </Typography>\n                </Box>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Scrollbar>\n    </div>\n  );\n};\n\nInvoiceTable.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\n\nconst COL1_WIDTH = 60;\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 3;\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    padding: 24\n  },\n  h4: {\n    fontSize: 24,\n    fontWeight: 600,\n    lineHeight: 1.5\n  },\n  subtitle2: {\n    fontSize: 12,\n    fontWeight: 500,\n    letterSpacing: 0,\n    lineHeight: 1.57\n  },\n  body2: {\n    fontSize: 10,\n    lineHeight: 1.47\n  },\n  h6: {\n    fontSize: 12,\n    fontWeight: 600,\n    lineHeight: 1.6\n  },\n  gutterBottom: {\n    marginBottom: 4\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  status: {\n    textTransform: 'uppercase',\n    color: 'rgba(236, 76, 71, 1)'\n  },\n  details: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 12\n  },\n  dates: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 36,\n    marginTop: 48\n  },\n  notes: {\n    marginTop: 32\n  },\n  table: {\n    display: 'flex',\n    width: 'auto',\n    border: '1px solid #e1e3ea',\n    borderRadius: 6\n  },\n  tableHeader: {\n    backgroundColor: 'rgba(243, 244, 247, 1)'\n  },\n  tableBody: {},\n  tableRow: {\n    borderBottomWidth: 1,\n    borderColor: '#EEEEEE',\n    borderStyle: 'solid',\n    flexDirection: 'row'\n  },\n  tableCell1: {\n    padding: 6,\n    width: `${COL1_WIDTH}%`,\n    justifyContent: 'center'\n  },\n  tableCellN: {\n    padding: 6,\n    width: `${COLN_WIDTH}%`,\n    justifyContent: 'center'\n\n  }\n});\n\nexport const InvoicePDF = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Document>\n      <Page\n        size=\"A4\"\n        style={styles.page}\n      >\n        <View style={styles.header}>\n          <View>\n            <Text style={styles.h4}>\n              #\n              {invoice.id}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.h4, styles.status]}>\n              {invoice.status}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.details}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice to\n            </Text>\n            <Text style={styles.body2}>\n              Acme LTD GB54423345\n            </Text>\n            <Text style={styles.body2}>\n              340 Lemon St. #5554\n            </Text>\n            <Text style={styles.body2}>\n              Spring Valley, California\n            </Text>\n            <Text style={styles.body2}>\n              United States\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice for\n            </Text>\n            <Text style={styles.body2}>\n              Natalie Rusell\n            </Text>\n            <Text style={styles.body2}>\n              3845 Salty Street\n            </Text>\n            <Text style={styles.body2}>\n              Salt Lake City\n            </Text>\n            <Text style={styles.body2}>\n              United States\n            </Text>\n          </View>\n        </View>\n        <View style={styles.dates}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice Date\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.dueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Due Date\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.issueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n        </View>\n        <View>\n          <View style={styles.table}>\n            <View style={styles.tableHeader}>\n              <View style={styles.tableRow}>\n                <View style={[styles.h6, styles.tableCell1]}>\n                  <Text>\n                    Description\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Qty\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Total\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Tax\n                  </Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.tableBody}>\n              {invoice.lineItems.map((item) => (\n                <View\n                  style={styles.tableRow}\n                  key={item.name}\n                >\n                  <View style={styles.tableCell1}>\n                    <Text style={styles.body2}>\n                      {item.name}\n                    </Text>\n                    <Text style={styles.body2}>\n                      {item.unitAmount}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {item.quantity}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {numeral(item.subtotalAmount).format(`${item.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {numeral(item.taxAmount).format(`${item.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              ))}\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <View style={{ flexDirection: 'row' }}>\n                    <Text style={[styles.body2, { marginRight: 8 }]}>\n                      Tax\n                    </Text>\n                    <Text style={styles.body2}>\n                      {numeral(invoice.taxAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <View style={{ flexDirection: 'row' }}>\n                    <Text style={[styles.body2, { marginRight: 8 }]}>\n                      Total\n                    </Text>\n                    <Text style={styles.subtitle2}>\n                      {numeral(invoice.totalAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        </View>\n        <View style={styles.notes}>\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>\n            Notes\n          </Text>\n          <Text style={styles.body2}>\n            {invoice.note}\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nInvoicePDF.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n"],"sourceRoot":""}