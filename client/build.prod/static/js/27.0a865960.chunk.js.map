{"version":3,"sources":["../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","components/customer/customer-activity-item.js","containers/customer-activity.js","icons/plus.js","icons/refresh.js","icons/question-mark-outlined.js","components/resource-error.js","components/resource-unavailable.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js"],"names":["MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","requiredArgs","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","cloneObject","addSuffix","Boolean","toDate","roundingMethodFn","roundingMethod","String","Math","floor","ceil","round","unit","milliseconds","getTime","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","seconds","roundedMinutes","hours","days","months","years","formatDistanceToNowStrict","dirtyOptions","Date","now","CustomerActivityItem","props","adminAvatar","adminName","adminId","createdAt","message","other","type","ListItem","sx","px","py","Box","alignItems","display","Avatar","src","mr","Typography","color","variant","component","fontWeight","CustomerActivity","mounted","useMounted","useState","isLoading","activitiesState","setActivitiesState","getActivities","useCallback","a","customerApi","getCustomerActivities","result","current","data","console","error","useEffect","catch","gtm","push","event","displayLoading","displayError","displayUnavailable","disableLoadMore","flexDirection","height","Card","flexGrow","List","disablePadding","map","activity","divider","id","p","Skeleton","m","justifyContent","mt","Button","disabled","endIcon","Plus","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Refresh","QuestionMarkOutlined","className","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ResourceErrorRoot","styled","theme","backgroundColor","palette","neutral","padding","spacing","ResourceError","onReload","onClick","startIcon","fontSize","ResourceUnavailableRoot","ResourceUnavailable","onCreate","dirtyObject","assign"],"mappings":"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","file":"static/js/27.0a865960.chunk.js","sourcesContent":["import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Avatar, Box, ListItem, Typography } from '@material-ui/core';\n\nexport const CustomerActivityItem = (props) => {\n  const { adminAvatar, adminId, adminName, createdAt, message, type, ...other } = props;\n\n  return (\n    <ListItem\n      sx={{\n        px: 3,\n        py: 2.5\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex'\n        }}\n      >\n        <Avatar\n          src={adminAvatar}\n          sx={{ mr: 2 }}\n        />\n        <div>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n              component=\"span\"\n            >\n              {adminName}\n            </Typography>\n            {' '}\n            {message}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n            sx={{ fontWeight: 400 }}\n          >\n            {formatDistanceToNowStrict(createdAt)}\n          </Typography>\n        </div>\n      </Box>\n    </ListItem>\n  );\n};\n\nCustomerActivityItem.propTypes = {\n  adminAvatar: PropTypes.string.isRequired,\n  adminId: PropTypes.string.isRequired,\n  adminName: PropTypes.string.isRequired,\n  createdAt: PropTypes.instanceOf(Date).isRequired,\n  message: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Card, List, Skeleton } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerActivityItem } from '../components/customer/customer-activity-item';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceUnavailable } from '../components/resource-unavailable';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\nimport gtm from '../lib/gtm';\n\nexport const CustomerActivity = () => {\n  const mounted = useMounted();\n  const [activitiesState, setActivitiesState] = useState({ isLoading: true });\n\n  const getActivities = useCallback(async () => {\n    setActivitiesState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomerActivities();\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setActivitiesState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getActivities().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const displayLoading = activitiesState.isLoading;\n  const displayError = Boolean(!activitiesState.isLoading && activitiesState.error);\n  const displayUnavailable = Boolean(!activitiesState.isLoading\n    && !activitiesState.error\n    && !activitiesState.data?.length);\n  const disableLoadMore = Boolean(activitiesState.isLoading || activitiesState.error);\n\n  return (\n    <>\n      <Helmet>\n        <title>Customer: Activity | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        <Card\n          variant=\"outlined\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: 1\n          }}\n        >\n          <List disablePadding>\n            {activitiesState.data?.map((activity) => (\n              <CustomerActivityItem\n                divider\n                key={activity.id}\n                {...activity}\n              />\n            ))}\n          </List>\n          {displayLoading && (\n            <Box sx={{ p: 2 }}>\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n              <Skeleton height={42} />\n            </Box>\n          )}\n          {displayError && (\n            <ResourceError\n              error={activitiesState.error}\n              sx={{ m: 2 }}\n            />\n          )}\n          {displayUnavailable && <ResourceUnavailable sx={{ m: 2 }} />}\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 'auto',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              disabled={disableLoadMore}\n              endIcon={<ChevronDownIcon />}\n              variant=\"text\"\n            >\n              Load more\n            </Button>\n          </Box>\n        </Card>\n      </Box>\n    </>\n  );\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Refresh = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n      fillRule=\"evenodd\"\n    />\n  </svg>, 'Refresh'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const QuestionMarkOutlined = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>, 'QuestionMarkOutlined'\n);\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\n\nconst ResourceErrorRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceError = (props) => {\n  const { error, onReload, ...other } = props;\n\n  return (\n    <ResourceErrorRoot {...other}>\n      <ExclamationIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        {error || 'Error loading data, please try again.'}\n      </Typography>\n      {onReload && (\n        <Button\n          color=\"primary\"\n          onClick={onReload}\n          startIcon={<RefreshIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"text\"\n        >\n          Reload Data\n        </Button>\n      )}\n    </ResourceErrorRoot>\n  );\n};\n\nResourceError.propTypes = {\n  error: PropTypes.string,\n  onReload: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\n\nconst ResourceUnavailableRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceUnavailable = (props) => {\n  const { onCreate, ...other } = props;\n\n  return (\n    <ResourceUnavailableRoot {...other}>\n      <QuestionMarkIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        There are not objects here yet.\n      </Typography>\n      {onCreate && (\n        <Button\n          color=\"primary\"\n          onClick={onCreate}\n          startIcon={<PlusIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"contained\"\n        >\n          Create Object\n        </Button>\n      )}\n    </ResourceUnavailableRoot>\n  );\n};\n\nResourceUnavailable.propTypes = {\n  onCreate: PropTypes.func\n};\n","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}"],"sourceRoot":""}