{"version":3,"sources":["containers/foundation-colors.js","components/demo-preview.js"],"names":["sections","title","description","items","label","value","FoundationColors","useEffect","gtm","push","event","sx","backgroundColor","flexGrow","py","maxWidth","color","mb","variant","display","gap","gridAutoFlow","map","section","container","spacing","item","md","alignItems","xs","borderRadius","height","mr","width","DemoPreviewRoot","styled","overflow","DemoPreview","props","children","other","mt"],"mappings":"kIAAA,wIAMMA,EAAW,CACf,CACEC,MAAO,WACPC,YAAa,8IACbC,MAAO,CACL,CACED,YAAa,+BACbE,MAAO,cACPC,MAAO,eAET,CACEH,YAAa,mBACbE,MAAO,cACPC,MAAO,eAET,CACEH,YAAa,2BACbE,MAAO,cACPC,MAAO,eAET,CACEH,YAAa,iBACbE,MAAO,cACPC,MAAO,eAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,cACPC,MAAO,iBAIb,CACEJ,MAAO,SACPE,MAAO,CACL,CACEC,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,eACPC,MAAO,kBAIb,CACEJ,MAAO,OACPE,MAAO,CACL,CACEC,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,qBAMFC,EAAmB,WAK9B,OAJAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,8EAEF,cAAC,IAAD,CACEC,GAAI,CACFC,gBAAiB,qBACjBC,SAAU,EACVC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,CACEC,MAAM,cACNL,GAAI,CAAEM,GAAI,GACVC,QAAQ,KAHV,sBAOA,cAAC,IAAD,CACEP,GAAI,CACFQ,QAAS,OACTC,IAAK,EACLC,aAAc,OAJlB,SAOGrB,EAASsB,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CACErB,YAAaqB,EAAQrB,YAErBD,MAAOsB,EAAQtB,MAHjB,SAKE,cAAC,IAAD,CACEuB,WAAS,EACTC,QAAS,EAFX,SAIGF,EAAQpB,MAAMmB,KAAI,SAACI,GAAD,OACjB,eAAC,IAAD,CACEA,MAAI,EAEJC,GAAI,EACJhB,GAAI,CACFiB,WAAY,SACZT,QAAS,QAEXU,GAAI,GARN,UAUE,cAAC,IAAD,CACElB,GAAI,CACFC,gBAAiBc,EAAKrB,MACtByB,aAAc,EACdC,OAAQ,GACRC,GAAI,EACJC,MAAO,MAGX,gCACE,cAAC,IAAD,CACEjB,MAAM,cACNE,QAAQ,YAFV,SAIGQ,EAAKtB,QAER,cAAC,IAAD,CACEY,MAAM,gBACNE,QAAQ,QAFV,SAIGQ,EAAKxB,mBA5BLwB,EAAKtB,aAVXmB,EAAQtB,sB,8KC5HvBiC,EAAkBC,YAAO,MAAPA,EAAe,iBAAO,CAC5CC,SAAU,WAGCC,EAAc,SAACC,GAC1B,IAAQrC,EAA2CqC,EAA3CrC,MAAOC,EAAoCoC,EAApCpC,YAAaqC,EAAuBD,EAAvBC,SAAaC,EAAzC,YAAmDF,EAAnD,GAEA,OACE,eAACJ,EAAD,2BAAqBM,GAArB,cACE,gCACoB,kBAAVvC,EACN,cAAC,IAAD,CACEe,MAAM,cACNE,QAAQ,QAFV,SAIGjB,IAEDA,EACHC,GACC,cAAC,IAAD,CAAKS,GAAI,CAAE8B,GAAI,IAAf,SAC0B,kBAAhBvC,EACN,cAAC,IAAD,CACEc,MAAM,gBACNE,QAAQ,QAFV,SAIGhB,IAEDA,OAIV,cAAC,IAAD,CACES,GAAI,CAAE8B,GAAI,GACVvB,QAAQ,WAFV,SAIE,cAAC,IAAD,UACGqB","file":"static/js/47.cb2de70e.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\nimport { DemoPreview } from '../components/demo-preview';\nimport gtm from '../lib/gtm';\n\nconst sections = [\n  {\n    title: 'Neutrals',\n    description: 'The neutral colors are useful for dividing pages into sections with different backgrounds and borders, or used as text colors, for example.',\n    items: [\n      {\n        description: 'Secondary section background',\n        label: 'neutral-100',\n        value: 'neutral.100'\n      },\n      {\n        description: 'Used for Avatars',\n        label: 'neutral-200',\n        value: 'neutral.200'\n      },\n      {\n        description: 'Default state components',\n        label: 'neutral-300',\n        value: 'neutral.300'\n      },\n      {\n        description: 'Tertiary text.',\n        label: 'neutral-400',\n        value: 'neutral.400'\n      },\n      {\n        label: 'neutral-500',\n        value: 'neutral.500'\n      },\n      {\n        label: 'neutral-600',\n        value: 'neutral.600'\n      },\n      {\n        label: 'neutral-700',\n        value: 'neutral.700'\n      },\n      {\n        label: 'neutral-800',\n        value: 'neutral.800'\n      },\n      {\n        label: 'neutral-900',\n        value: 'neutral.900'\n      }\n    ]\n  },\n  {\n    title: 'Colors',\n    items: [\n      {\n        label: 'primary-main',\n        value: 'primary.main'\n      },\n      {\n        label: 'error-main',\n        value: 'error.main'\n      },\n      {\n        label: 'warning-main',\n        value: 'warning.main'\n      },\n      {\n        label: 'info-main',\n        value: 'info.main'\n      },\n      {\n        label: 'success-main',\n        value: 'success.main'\n      }\n    ]\n  },\n  {\n    title: 'Text',\n    items: [\n      {\n        label: 'text-primary',\n        value: 'text.primary'\n      },\n      {\n        label: 'text-secondary',\n        value: 'text.secondary'\n      }\n    ]\n  }\n];\n\nexport const FoundationColors = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Foundation: Colors | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 6 }}\n            variant=\"h4\"\n          >\n            Neutrals\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 5,\n              gridAutoFlow: 'row'\n            }}\n          >\n            {sections.map((section) => (\n              <DemoPreview\n                description={section.description}\n                key={section.title}\n                title={section.title}\n              >\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  {section.items.map((item) => (\n                    <Grid\n                      item\n                      key={item.label}\n                      md={6}\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                      xs={12}\n                    >\n                      <Box\n                        sx={{\n                          backgroundColor: item.value,\n                          borderRadius: 1,\n                          height: 64,\n                          mr: 3,\n                          width: 64\n                        }}\n                      />\n                      <div>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle1\"\n                        >\n                          {item.label}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {item.description}\n                        </Typography>\n                      </div>\n                    </Grid>\n                  ))}\n                </Grid>\n              </DemoPreview>\n            ))}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nconst DemoPreviewRoot = styled('div')((() => ({\n  overflow: 'auto'\n})));\n\nexport const DemoPreview = (props) => {\n  const { title, description, children, ...other } = props;\n\n  return (\n    <DemoPreviewRoot {...other}>\n      <div>\n        {typeof title === 'string' ? (\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {title}\n          </Typography>\n        ) : title}\n        {description && (\n          <Box sx={{ mt: 0.5 }}>\n            {typeof description === 'string' ? (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {description}\n              </Typography>\n            ) : description}\n          </Box>\n        )}\n      </div>\n      <Card\n        sx={{ mt: 2 }}\n        variant=\"outlined\"\n      >\n        <CardContent>\n          {children}\n        </CardContent>\n      </Card>\n    </DemoPreviewRoot>\n  );\n};\n\nDemoPreview.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n"],"sourceRoot":""}