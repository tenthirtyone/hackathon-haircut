{"version":3,"sources":["../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","components/customer/customer-info.js","components/customer/customer-latest-orders.js","components/customer/customer-note.js","icons/paper-clip.js","components/customer/customer-note-add.js","components/customer/customer-notes.js","components/customer/customer-properties.js","containers/customer-summary.js","icons/plus.js","icons/refresh.js","icons/question-mark-outlined.js","components/resource-error.js","components/resource-unavailable.js","components/property-list-item.js","components/property-list.js","icons/trash.js","icons/eye.js","components/action-list.js","components/action-list-item.js","components/order/order-summary.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","components/order/order-preview-item.js","components/order/order-preview-list.js","components/customer/customer-dialog.js","icons/dots-horizontal.js","components/resource-loading.js"],"names":["MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","requiredArgs","locale","defaultLocale","formatDistance","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","cloneObject","addSuffix","Boolean","toDate","roundingMethodFn","roundingMethod","String","Math","floor","ceil","round","unit","milliseconds","getTime","minutes","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","seconds","roundedMinutes","hours","days","months","years","formatDistanceToNowStrict","dirtyOptions","Date","now","CustomerInfo","props","customer","onEdit","other","useDialog","deleteDialogOpen","handleOpenDeleteDialog","handleCloseDeleteDialog","Card","variant","CardHeader","action","Button","color","onClick","title","Divider","Box","sx","alignItems","display","px","py","Avatar","alt","fullName","src","avatar","height","mr","width","IconButton","divider","label","value","email","phone","address","country","icon","EyeIcon","toast","error","TrashIcon","message","onCancel","onConfirm","open","CustomerLatestOrders","orders","Typography","mb","map","order","index","id","defaultProps","CustomerNote","content","createdAt","onDelete","senderAvatar","senderName","deletable","p","flex","ml","my","flexGrow","size","PaperClip","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","CustomerNoteAdd","onSend","submitDisabled","useState","setContent","InputBase","multiline","onChange","event","target","placeholder","fontSize","backgroundColor","disabled","CustomerNotes","notesProp","notes","setNotes","handleNoteDelete","noteId","prevNotes","filter","note","useEffect","gap","generateResourceId","senderId","CustomerProperties","isTaxExempt","numeral","storeCredit","format","status","CustomerSummary","mounted","useMounted","isLoading","customerState","setCustomerState","ordersState","setOrdersState","notesState","setNotesState","openInfoDialog","setOpenInfoDialog","getCustomer","useCallback","a","customerApi","result","current","data","console","getOrders","getCustomerOrders","getNotes","getCustomerNotes","catch","gtm","push","Grid","container","spacing","item","lg","xs","onClose","Plus","Refresh","QuestionMarkOutlined","className","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ResourceErrorRoot","styled","theme","palette","neutral","flexDirection","justifyContent","padding","ResourceError","onReload","mt","startIcon","ResourceUnavailableRoot","ResourceUnavailable","onCreate","PropertyListItem","align","children","component","disableGutters","disableTypography","primary","minWidth","secondary","PropertyList","disablePadding","Trash","Eye","ActionList","dense","ActionListItem","Icon","OrderSummary","price","txIn","dirtyObject","assign","statusVariants","OrderPreviewItem","expanded","setExpanded","find","sm","parseInt","timeStamp","hash","prev","transition","transform","in","OrderPreviewList","countryOptions","CustomerDialog","formik","useFormik","enableReinitialize","initialValues","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","helpers","success","resetForm","setStatus","setSubmitting","err","setErrors","TransitionProps","onExited","touched","errors","fullWidth","helperText","name","onBlur","handleBlur","handleChange","type","select","option","isSubmitting","handleSubmit","DotsHorizontal","ResourceLoadingRoot","ResourceLoading"],"mappings":"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","file":"static/js/16.a17342a1.chunk.js","sourcesContent":["import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 1000 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft); // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    var seconds = roundingMethodFn(milliseconds / 1000);\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale.formatDistance('xMinutes', roundedMinutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== 'month' ? locale.formatDistance('xYears', 1, localizeOptions) : locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import formatDistanceStrict from \"../formatDistanceStrict/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}","import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Avatar, Box, Button, Card, CardHeader, Divider, IconButton } from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { ExternalLink as ExternalLinkIcon } from '../../icons/external-link';\nimport { Eye as EyeIcon } from '../../icons/eye';\nimport { Trash as TrashIcon } from '../../icons/trash';\nimport { ActionList } from '../action-list';\nimport { ActionListItem } from '../action-list-item';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { PropertyList } from '../property-list';\nimport { PropertyListItem } from '../property-list-item';\n\nexport const CustomerInfo = (props) => {\n  const { customer, onEdit, ...other } = props;\n  const [deleteDialogOpen, handleOpenDeleteDialog, handleCloseDeleteDialog] = useDialog();\n\n  const handlePreview = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleDelete = () => {\n    handleCloseDeleteDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"outlined\"\n        {...other}\n      >\n        <CardHeader\n          action={(\n            <Button\n              color=\"primary\"\n              onClick={onEdit}\n              variant=\"text\"\n            >\n              Edit\n            </Button>\n          )}\n          title=\"Contact Info\"\n        />\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 3,\n            py: 1.5\n          }}\n        >\n          <Avatar\n            alt={customer.fullName}\n            src={customer.avatar}\n            sx={{\n              height: 64,\n              mr: 1,\n              width: 64\n            }}\n            variant=\"rounded\"\n          />\n          <IconButton color=\"inherit\">\n            <ExternalLinkIcon />\n          </IconButton>\n        </Box>\n        <PropertyList>\n          <PropertyListItem\n            divider\n            label=\"Full Name\"\n            value={customer.fullName}\n          />\n          <PropertyListItem\n            divider\n            label=\"Email address\"\n            value={customer.email}\n          />\n          <PropertyListItem\n            divider\n            label=\"Phone\"\n            value={customer.phone}\n          />\n          <PropertyListItem\n            divider\n            label=\"Full Address\"\n            value={customer.address}\n          />\n          <PropertyListItem\n            label=\"Location\"\n            value={customer.country}\n          />\n        </PropertyList>\n        <Divider />\n        <ActionList>\n          <ActionListItem\n            icon={EyeIcon}\n            onClick={handlePreview}\n            label=\"Preview\"\n          />\n          <ActionListItem\n            icon={TrashIcon}\n            label=\"Delete User Data\"\n            onClick={handleOpenDeleteDialog}\n          />\n        </ActionList>\n      </Card>\n      <ConfirmationDialog\n        message=\"Are you sure you want to delete the user data? This can't be undone.\"\n        onCancel={handleCloseDeleteDialog}\n        onConfirm={handleDelete}\n        open={deleteDialogOpen}\n        title=\"Delete user data\"\n        variant=\"error\"\n      />\n    </>\n  );\n};\n\nCustomerInfo.propTypes = {\n  onEdit: PropTypes.func,\n  customer: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { Card, Typography } from '@material-ui/core';\nimport { OrderPreviewItem } from '../order/order-preview-item';\nimport { OrderPreviewList } from '../order/order-preview-list';\nimport { ResourceUnavailable } from '../resource-unavailable';\n\nexport const CustomerLatestOrders = (props) => {\n  const { orders, ...other } = props;\n\n  return (\n    <div {...other}>\n      <Typography\n        color=\"textPrimary\"\n        variant=\"h6\"\n        sx={{ mb: 3 }}\n      >\n        Latest Orders\n      </Typography>\n      {orders.length\n        ? (\n          <Card variant=\"outlined\">\n            <OrderPreviewList>\n              {orders.map((order, index) => (\n                <OrderPreviewItem\n                  divider={orders.length > index + 1}\n                  key={order.id}\n                  order={order}\n                />\n              ))}\n            </OrderPreviewList>\n          </Card>\n        )\n        : <ResourceUnavailable />}\n    </div>\n  );\n};\n\nCustomerLatestOrders.defaultProps = {\n  orders: []\n};\n\nCustomerLatestOrders.propTypes = {\n  orders: PropTypes.array\n};\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Avatar, Box, Button, Card, Typography } from '@material-ui/core';\n\nexport const CustomerNote = (props) => {\n  const {\n    content,\n    createdAt,\n    id,\n    onDelete,\n    senderAvatar,\n    senderName,\n    deletable,\n    sx,\n    ...other\n  } = props;\n\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        p: 2,\n        ...sx\n      }}\n      variant=\"outlined\"\n      {...other}\n    >\n      <Avatar src={senderAvatar} />\n      <Box\n        sx={{\n          flex: 1,\n          ml: 2\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h6\"\n        >\n          {senderName}\n        </Typography>\n        <Typography\n          color=\"textPrimary\"\n          sx={{ my: 1 }}\n          variant=\"body2\"\n        >\n          {content}\n        </Typography>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n        >\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {`${formatDistanceToNowStrict(createdAt)} ago`}\n          </Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          {deletable && (\n            <Button\n              color=\"primary\"\n              onClick={() => onDelete?.(id)}\n              size=\"small\"\n              variant=\"text\"\n            >\n              Delete\n            </Button>\n          )}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nCustomerNote.propTypes = {\n  content: PropTypes.string.isRequired,\n  createdAt: PropTypes.instanceOf(Date).isRequired,\n  deletable: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  senderAvatar: PropTypes.string.isRequired,\n  senderName: PropTypes.string.isRequired,\n  sx: PropTypes.object\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const PaperClip = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PaperClip'\n);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, Divider, IconButton, InputBase, Typography } from '@material-ui/core';\nimport { ChevronDown as ChevronDownIcon } from '../../icons/chevron-down';\nimport { Eye as EyeIcon } from '../../icons/eye';\nimport { PaperClip as PaperClipIcon } from '../../icons/paper-clip';\n\nexport const CustomerNoteAdd = (props) => {\n  const { onSend, submitDisabled, ...other } = props;\n  const [content, setContent] = useState('');\n\n  const handleChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  const handleSend = () => {\n    onSend?.(content);\n    setContent('');\n  };\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...other}\n    >\n      <Box\n        sx={{\n          p: 2,\n          alignItems: 'center',\n          display: 'flex'\n        }}\n      >\n        <InputBase\n          multiline\n          onChange={handleChange}\n          placeholder=\"Comment text...\"\n          sx={{\n            flex: 1,\n            mr: 2\n          }}\n          value={content}\n        />\n        <IconButton size=\"small\">\n          <PaperClipIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          backgroundColor: 'neutral.100',\n          color: 'text.secondary',\n          display: 'flex',\n          p: 2\n        }}\n      >\n        <EyeIcon sx={{ color: 'inherit' }} />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"body2\"\n          sx={{ ml: 1 }}\n        >\n          Visible to all\n        </Typography>\n        <IconButton\n          color=\"primary\"\n          size=\"small\"\n          sx={{ color: 'inherit' }}\n        >\n          <ChevronDownIcon fontSize=\"small\" />\n        </IconButton>\n        <Box sx={{ flexGrow: 1 }} />\n        <Button\n          color=\"primary\"\n          disabled={content.length === 0 || submitDisabled}\n          onClick={handleSend}\n          variant=\"contained\"\n        >\n          Send\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nCustomerNoteAdd.defaultProps = {\n  submitDisabled: false\n};\n\nCustomerNoteAdd.propTypes = {\n  onSend: PropTypes.func,\n  submitDisabled: PropTypes.bool\n};\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { CustomerNote } from './customer-note';\nimport { CustomerNoteAdd } from './customer-note-add';\n\nexport const CustomerNotes = (props) => {\n  const { notes: notesProp, ...other } = props;\n  const [notes, setNotes] = useState(notesProp || []);\n\n  const handleNoteSend = (content) => {\n    setNotes((prevNotes) => [\n      {\n        id: generateResourceId(),\n        senderId: '1',\n        senderName: 'Chen Simmons',\n        senderAvatar: '/static/user-chen_simmons.png',\n        content,\n        createdAt: new Date()\n      },\n      ...prevNotes\n    ]);\n  };\n\n  const handleNoteDelete = (noteId) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== noteId));\n  };\n\n  useEffect(() => {\n    setNotes(notesProp);\n  }, [notesProp]);\n\n  return (\n    <Box {...other}>\n      <Typography\n        color=\"textPrimary\"\n        variant=\"h6\"\n        sx={{ mb: 3 }}\n      >\n        Team Notes\n      </Typography>\n      <Box\n        sx={{\n          display: 'grid',\n          gap: 3\n        }}\n      >\n        <CustomerNoteAdd onSend={handleNoteSend} />\n        {notes.map((note) => (\n          <CustomerNote\n            content={note.content}\n            createdAt={note.createdAt}\n            deletable={note.senderId === '1'} // NOTE: ID 1 is the logged in user\n            id={note.id}\n            key={note.id}\n            onDelete={handleNoteDelete}\n            senderAvatar={note.senderAvatar}\n            senderName={note.senderName}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nCustomerNotes.defaultProps = {\n  notes: []\n};\n\nCustomerNotes.propTypes = {\n  notes: PropTypes.array\n};\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Card, CardHeader, Divider } from '@material-ui/core';\nimport { PropertyList } from '../property-list';\nimport { PropertyListItem } from '../property-list-item';\n\nexport const CustomerProperties = (props) => {\n  const { customer, ...other } = props;\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...other}\n    >\n      <CardHeader title=\"Customer Properties\" />\n      <Divider />\n      <PropertyList>\n        <PropertyListItem\n          divider\n          label=\"Tax Exempt\"\n          value={customer.isTaxExempt ? 'Yes' : 'No'}\n        />\n        <PropertyListItem\n          divider\n          label=\"Store Credit\"\n          value={`${numeral(customer.storeCredit).format('$0,0.00')} USD`}\n        />\n        <PropertyListItem\n          divider\n          label=\"Status\"\n          value={customer.status}\n        />\n        <PropertyListItem\n          label=\"Signup\"\n          value={format(customer.createdAt, 'dd MM yyyy HH:mm')}\n        />\n      </PropertyList>\n    </Card>\n  );\n};\n\nCustomerProperties.propTypes = {\n  customer: PropTypes.object.isRequired\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Grid } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerDialog } from '../components/customer/customer-dialog';\nimport { CustomerInfo } from '../components/customer/customer-info';\nimport { CustomerLatestOrders } from '../components/customer/customer-latest-orders';\nimport { CustomerNotes } from '../components/customer/customer-notes';\nimport { CustomerProperties } from '../components/customer/customer-properties';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceLoading } from '../components/resource-loading';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nexport const CustomerSummary = () => {\n  const mounted = useMounted();\n  const [customerState, setCustomerState] = useState({ isLoading: true });\n  const [ordersState, setOrdersState] = useState({ isLoading: true });\n  const [notesState, setNotesState] = useState({ isLoading: true });\n  const [openInfoDialog, setOpenInfoDialog] = useState(false);\n\n  const getCustomer = useCallback(async () => {\n    setCustomerState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomer();\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setCustomerState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  const getOrders = useCallback(async () => {\n    setOrdersState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomerOrders();\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setOrdersState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  const getNotes = useCallback(async () => {\n    setNotesState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomerNotes();\n\n      if (mounted.current) {\n        setNotesState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setNotesState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getCustomer().catch(console.error);\n    getOrders().catch(console.error);\n    getNotes().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const renderContent = () => {\n    // Wait for all resources to load\n    if (customerState.isLoading || notesState.isLoading || ordersState.isLoading) {\n      return (\n        <ResourceLoading />\n      );\n    }\n\n    // If any resource has an error, display only 1 error message\n    if (customerState.error || notesState.error || ordersState.error) {\n      return (\n        <ResourceError />\n      );\n    }\n\n    return (\n      <>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            container\n            item\n            lg={4}\n            spacing={3}\n            sx={{ height: 'fit-content' }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <CustomerInfo\n                onEdit={() => setOpenInfoDialog(true)}\n                customer={customerState.data}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <CustomerProperties customer={customerState.data} />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            lg={8}\n            spacing={3}\n            sx={{ height: 'fit-content' }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <CustomerLatestOrders orders={ordersState.data} />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <CustomerNotes notes={notesState.data} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <CustomerDialog\n          customer={customerState.data}\n          onClose={() => setOpenInfoDialog(false)}\n          open={openInfoDialog}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Customer: Summary | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        {renderContent()}\n      </Box>\n    </>\n  );\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Refresh = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n      fillRule=\"evenodd\"\n    />\n  </svg>, 'Refresh'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const QuestionMarkOutlined = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>, 'QuestionMarkOutlined'\n);\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\n\nconst ResourceErrorRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceError = (props) => {\n  const { error, onReload, ...other } = props;\n\n  return (\n    <ResourceErrorRoot {...other}>\n      <ExclamationIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        {error || 'Error loading data, please try again.'}\n      </Typography>\n      {onReload && (\n        <Button\n          color=\"primary\"\n          onClick={onReload}\n          startIcon={<RefreshIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"text\"\n        >\n          Reload Data\n        </Button>\n      )}\n    </ResourceErrorRoot>\n  );\n};\n\nResourceError.propTypes = {\n  error: PropTypes.string,\n  onReload: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\n\nconst ResourceUnavailableRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceUnavailable = (props) => {\n  const { onCreate, ...other } = props;\n\n  return (\n    <ResourceUnavailableRoot {...other}>\n      <QuestionMarkIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        There are not objects here yet.\n      </Typography>\n      {onCreate && (\n        <Button\n          color=\"primary\"\n          onClick={onCreate}\n          startIcon={<PlusIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"contained\"\n        >\n          Create Object\n        </Button>\n      )}\n    </ResourceUnavailableRoot>\n  );\n};\n\nResourceUnavailable.propTypes = {\n  onCreate: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Box, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport const PropertyListItem = (props) => {\n  const { align, children, component, value, label, ...other } = props;\n\n  return (\n    <ListItem\n      component={component}\n      disableGutters\n      sx={{\n        px: 3,\n        py: 1.5\n      }}\n      {...other}\n    >\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            sx={{ minWidth: align === 'vertical' ? 'inherit' : 180 }}\n            variant=\"subtitle2\"\n          >\n            {label}\n          </Typography>\n        )}\n        secondary={(\n          <Box\n            sx={{\n              flex: 1,\n              mt: align === 'vertical' ? 0.5 : 0\n            }}\n          >\n            {children || (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {value}\n              </Typography>\n            )}\n          </Box>\n        )}\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: align === 'vertical' ? 'column' : 'row',\n          my: 0\n        }}\n      />\n    </ListItem>\n  );\n};\n\nPropertyListItem.defaultProps = {\n  align: 'vertical'\n};\n\nPropertyListItem.propTypes = {\n  align: PropTypes.string,\n  component: PropTypes.elementType,\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\n\nexport const PropertyList = (props) => {\n  const { children } = props;\n\n  return (\n    <List disablePadding>\n      {children}\n    </List>\n  );\n};\n\nPropertyList.propTypes = {\n  children: PropTypes.node\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Eye = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Eye'\n);\n","import { List } from '@material-ui/core';\n\nexport const ActionList = (props) => (\n  <List\n    dense\n    sx={{\n      backgroundColor: 'neutral.100',\n      width: '100%'\n    }}\n    {...props}\n  />\n);\n","import PropTypes from 'prop-types';\nimport { ListItemButton, ListItemIcon, ListItemText } from '@material-ui/core';\n\nexport const ActionListItem = (props) => {\n  const { icon: Icon, label, ...other } = props;\n\n  return (\n    <ListItemButton {...other}>\n      <ListItemIcon>\n        <Icon\n          fontSize=\"small\"\n          sx={{ color: 'text.secondary' }}\n        />\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItemButton>\n  );\n};\n\nActionListItem.propTypes = {\n  icon: PropTypes.elementType,\n  label: PropTypes.string.isRequired\n};\n","import PropTypes from \"prop-types\";\nimport numeral from \"numeral\";\nimport {\n  Avatar,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport { Scrollbar } from \"../scrollbar\";\n\nexport const OrderSummary = (props) => {\n  const { order, ...other } = props;\n\n  return (\n    <Scrollbar>\n      <Table sx={{ minWidth: 500 }} {...other}>\n        <TableBody>\n          <TableRow>\n            <TableCell>Amount ETH</TableCell>\n            <TableCell />\n            <TableCell />\n            <TableCell>{order.value / 1e18}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Spot Price (USD)</TableCell>\n            <TableCell />\n            <TableCell />\n            <TableCell>\n              {numeral(order.price / 1e18).format(`$0,0.00`)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>Incoming / Outgoing</TableCell>\n            <TableCell />\n            <TableCell />\n            <TableCell>{order.txIn ? \"Incoming\" : \"Outgoing\"}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                Total\n              </Typography>\n            </TableCell>\n            <TableCell />\n            <TableCell />\n            <TableCell>\n              <Typography color=\"textPrimary\" variant=\"subtitle2\">\n                {numeral(((order.value / 1e18) * order.price) / 1e18).format(\n                  `$0,0.00`\n                )}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Scrollbar>\n  );\n};\n\nOrderSummary.propTypes = {\n  error: PropTypes.object,\n  isLoading: PropTypes.bool,\n  order: PropTypes.object,\n};\n","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  IconButton,\n  Link,\n  ListItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { ChevronDown as ChevronDownIcon } from \"../../icons/chevron-down\";\nimport { Status } from \"../status\";\nimport { OrderSummary } from \"./order-summary\";\n\nconst statusVariants = [\n  {\n    color: \"info.main\",\n    label: \"Placed\",\n    value: \"placed\",\n  },\n  {\n    color: \"error.main\",\n    label: \"Processed\",\n    value: \"processed\",\n  },\n  {\n    color: \"warning.main\",\n    label: \"Delivered\",\n    value: \"delivered\",\n  },\n  {\n    color: \"success.main\",\n    label: \"Complete\",\n    value: \"complete\",\n  },\n];\n\nexport const OrderPreviewItem = (props) => {\n  const { order, ...other } = props;\n  const [expanded, setExpanded] = useState(false);\n  const statusVariant = statusVariants.find(\n    (variant) => variant.value === order.status\n  );\n\n  const handleExpandedChange = () => {\n    setExpanded((prev) => !prev);\n  };\n\n  return (\n    <ListItem\n      disableGutters\n      disablePadding\n      key={order.hash}\n      sx={{\n        width: \"100%\",\n        flexDirection: \"column\",\n        alignItems: \"stretch\",\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          display: {\n            sm: \"flex\",\n            xs: \"block\",\n          },\n          p: 2,\n        }}\n      >\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n          }}\n        >\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              mr: 2,\n              px: 1.5,\n              py: 0.5,\n            }}\n          >\n            <Typography color=\"textSecondary\" variant=\"h5\">\n              {format(new Date(parseInt(order.timeStamp, 10) * 1000), \"dd\")}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"caption\">\n              {format(new Date(parseInt(order.timeStamp, 10) * 1000), \"MMM yy\")}\n            </Typography>\n          </Box>\n          <div>{`#${order.hash}`}</div>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n            ml: {\n              sm: 0,\n              xs: 1.5,\n            },\n          }}\n        >\n          <Status color={\"#38b249\"} label={\"Complete\"} />\n          <IconButton onClick={handleExpandedChange} sx={{ ml: 3 }}>\n            <ChevronDownIcon\n              sx={{\n                transition: \"transform 150ms\",\n                transform: expanded ? \"rotate(180deg)\" : \"none\",\n              }}\n            />\n          </IconButton>\n        </Box>\n      </Box>\n      <Collapse in={expanded}>\n        <Divider />\n        <OrderSummary order={order} />\n      </Collapse>\n    </ListItem>\n  );\n};\n\nOrderPreviewItem.propTypes = {\n  order: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\n\nexport const OrderPreviewList = (props) => {\n  const { children, ...other } = props;\n\n  return (\n    <List\n      disablePadding\n      sx={{ width: '100%' }}\n      {...other}\n    >\n      {children}\n    </List>\n  );\n};\n\nOrderPreviewList.propTypes = {\n  children: PropTypes.node\n};\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  MenuItem\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nconst countryOptions = ['USA', 'Germany', 'Spain', 'Italy'];\n\nexport const CustomerDialog = (props) => {\n  const { customer, open, onClose, ...other } = props;\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      address: customer?.address || '',\n      email: customer?.email || '',\n      fullName: customer?.fullName || '',\n      country: customer?.country || '',\n      phone: customer?.phone || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      address: Yup.string().max(255),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Full name is required'),\n      country: Yup.string().oneOf(countryOptions),\n      phone: Yup.string().max(255)\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success(`Customer ${customer ? 'updated' : 'created'}`);\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      TransitionProps={{\n        onExited: () => formik.resetForm()\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        {customer ? 'Update Customer' : 'Create Customer'}\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.email && formik.errors.email)}\n              fullWidth\n              helperText={formik.touched.email && formik.errors.email}\n              label=\"Email address\"\n              name=\"email\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              required\n              type=\"email\"\n              value={formik.values.email}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n              fullWidth\n              helperText={formik.touched.fullName && formik.errors.fullName}\n              label=\"Full Name\"\n              name=\"fullName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              required\n              value={formik.values.fullName}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.phone && formik.errors.phone)}\n              fullWidth\n              helperText={formik.touched.phone && formik.errors.phone}\n              label=\"Phone number\"\n              name=\"phone\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.country && formik.errors.country)}\n              fullWidth\n              helperText={formik.touched.country && formik.errors.country}\n              label=\"Location\"\n              name=\"country\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              select\n              value={formik.values.country}\n            >\n              {countryOptions.map((option) => (\n                <MenuItem\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </InputField>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.address && formik.errors.address)}\n              fullWidth\n              helperText={formik.touched.address && formik.errors.address}\n              label=\"Full address\"\n              name=\"address\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"outlined\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          {customer ? 'Update' : 'Create'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCustomerDialog.defaultProps = {\n  open: false\n};\n\nCustomerDialog.propTypes = {\n  customer: PropTypes.object,\n  open: PropTypes.bool,\n  onClose: PropTypes.func\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n","import { Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { DotsHorizontal as DotsHorizontalIcon } from '../icons/dots-horizontal';\n\nconst ResourceLoadingRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceLoading = (props) => (\n  <ResourceLoadingRoot {...props}>\n    <DotsHorizontalIcon sx={{ color: 'text.secondary' }} />\n    <Typography\n      color=\"textSecondary\"\n      sx={{ mt: 2 }}\n      variant=\"body2\"\n    >\n      Loading resource data\n    </Typography>\n  </ResourceLoadingRoot>\n);\n"],"sourceRoot":""}