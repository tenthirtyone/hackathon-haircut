{"version":3,"sources":["components/invoices/invoice-pdf-preview.js","containers/invoice-preview.js","api/invoice.js","components/invoices/invoice-table.js","components/invoices/invoice-pdf.js"],"names":["InvoicePdfPreview","props","invoice","Paper","elevation","sx","p","Box","display","justifyContent","Typography","color","variant","id","align","textTransform","status","md","xs","flexDirection","mt","gutterBottom","textAlign","format","issueDate","dueDate","Card","my","note","InvoicePreview","mounted","useMounted","useState","isLoading","invoiceState","setInvoiceState","getInvoice","useCallback","a","invoiceApi","result","current","data","console","error","message","useEffect","catch","gtm","push","event","backgroundColor","flexGrow","Container","maxWidth","height","py","Skeleton","alignItems","mb","Button","component","RouterLink","startIcon","to","document","fileName","style","textDecoration","size","now","Date","invoices","currencySymbol","subDays","paymentMethod","totalAmount","createdAt","customerName","subMinutes","paymentAt","paymentStatus","subtotalAmount","taxAmount","transactionFees","transactionId","lineItems","currency","discountAmount","image","name","quantity","sku","unitAmount","isTaxable","options","throttle","wait","filters","sort","sortBy","page","query","view","queriedInvoices","filter","_invoice","toLowerCase","includes","filteredInvoices","applyFilters","sortedInvoices","applySort","paginatedInvoices","applyPagination","Promise","resolve","invoicesCount","length","InvoiceTable","minWidth","map","item","numeral","width","mr","styles","StyleSheet","create","padding","h4","fontSize","fontWeight","lineHeight","subtitle2","letterSpacing","body2","h6","marginBottom","header","details","marginTop","dates","notes","table","border","borderRadius","tableHeader","tableBody","tableRow","borderBottomWidth","borderColor","borderStyle","tableCell1","tableCellN","InvoicePDF","marginRight"],"mappings":"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","file":"static/js/25.ed732d0e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Box, Card, Paper, Typography } from '@material-ui/core';\nimport { InvoiceTable } from './invoice-table';\n\nexport const InvoicePdfPreview = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Paper\n      elevation={24}\n      sx={{ p: 3 }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h4\"\n        >\n          #\n          {invoice.id}\n        </Typography>\n        <Typography\n          align=\"right\"\n          color=\"error.main\"\n          sx={{ textTransform: 'uppercase' }}\n          variant=\"h4\"\n        >\n          {invoice.status}\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: {\n            md: 'space-between',\n            xs: 'flex-start'\n          },\n          flexDirection: {\n            md: 'row',\n            xs: 'column'\n          },\n          mt: 1.5\n        }}\n      >\n        <div>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle2\"\n          >\n            Invoice to\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Acme LTD GB54423345\n            <br />\n            340 Lemon St. #5554\n            <br />\n            Spring Valley, California\n            <br />\n            United States\n          </Typography>\n        </div>\n        <Box\n          sx={{\n            textAlign: {\n              md: 'right',\n              xs: 'left'\n            }\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle2\"\n          >\n            Invoice for\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Natalie Rusell\n            <br />\n            3845 Salty Street\n            <br />\n            Salt Lake City\n            <br />\n            United States\n          </Typography>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          mt: 6\n        }}\n      >\n        <Box>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle2\"\n          >\n            Invoice Date\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {format(invoice.issueDate, 'dd MMM yyyy')}\n          </Typography>\n        </Box>\n        <Box>\n          <Typography\n            align=\"right\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle2\"\n          >\n            Due Date\n          </Typography>\n          <Typography\n            align=\"right\"\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {format(invoice.dueDate, 'dd MMM yyyy')}\n          </Typography>\n        </Box>\n      </Box>\n      <Card\n        variant=\"outlined\"\n        sx={{ my: 4.5 }}\n      >\n        <InvoiceTable invoice={invoice} />\n      </Card>\n      <Typography\n        color=\"textPrimary\"\n        gutterBottom\n        variant=\"subtitle2\"\n      >\n        Notes\n      </Typography>\n      <Typography\n        color=\"textsecondary\"\n        variant=\"body2\"\n      >\n        “\n        {invoice.note}\n        ”\n      </Typography>\n    </Paper>\n  );\n};\n\nInvoicePdfPreview.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { Box, Button, Container, Skeleton, Typography } from '@material-ui/core';\nimport { invoiceApi } from '../api/invoice';\nimport { InvoicePdfPreview } from '../components/invoices/invoice-pdf-preview';\nimport { InvoicePDF } from '../components/invoices/invoice-pdf';\nimport { useMounted } from '../hooks/use-mounted';\nimport { ArrowLeft as ArrowLeftIcon } from '../icons/arrow-left';\nimport { Download as DownloadIcon } from '../icons/download';\nimport { ExclamationOutlined as ExclamationOutlinedIcon } from '../icons/exclamation-outlined';\nimport gtm from '../lib/gtm';\n\nexport const InvoicePreview = () => {\n  const mounted = useMounted();\n  const [invoiceState, setInvoiceState] = useState({ isLoading: true });\n\n  const getInvoice = useCallback(async () => {\n    setInvoiceState(() => ({ isLoading: true }));\n\n    try {\n      const result = await invoiceApi.getInvoice();\n\n      if (mounted.current) {\n        setInvoiceState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setInvoiceState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getInvoice().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const renderContent = () => {\n    if (invoiceState.isLoading) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Skeleton height={42} />\n          <Skeleton />\n          <Skeleton />\n        </Box>\n      );\n    }\n\n    if (invoiceState.error) {\n      return (\n        <Box sx={{ py: 4 }}>\n          <Box\n            sx={{\n              alignItems: 'center',\n              backgroundColor: 'background.default',\n              display: 'flex',\n              flexDirection: 'column',\n              p: 3\n            }}\n          >\n            <ExclamationOutlinedIcon />\n            <Typography\n              color=\"textSecondary\"\n              sx={{ mt: 2 }}\n              variant=\"body2\"\n            >\n              {invoiceState.error}\n            </Typography>\n          </Box>\n        </Box>\n      );\n    }\n\n    return (\n      <>\n        <Box sx={{ py: 4 }}>\n          <Box sx={{ mb: 2 }}>\n            <Button\n              color=\"primary\"\n              component={RouterLink}\n              startIcon={<ArrowLeftIcon />}\n              to=\"/dashboard/invoices\"\n              variant=\"text\"\n            >\n              Invoices\n            </Button>\n          </Box>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n            >\n              Invoice Preview\n            </Typography>\n            <Box sx={{ flexGrow: 1 }} />\n            <PDFDownloadLink\n              document={<InvoicePDF invoice={invoiceState.data} />}\n              fileName=\"invoice\"\n              style={{ textDecoration: 'none' }}\n            >\n              <Button\n                color=\"primary\"\n                startIcon={<DownloadIcon />}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Download\n              </Button>\n            </PDFDownloadLink>\n          </Box>\n        </Box>\n        <InvoicePdfPreview invoice={invoiceState.data} />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Invoice: Preview | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        <Container\n          maxWidth=\"lg\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n          }}\n        >\n          {renderContent()}\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import { subDays, subMinutes } from 'date-fns';\nimport { throttle } from '../config';\nimport { applyFilters } from '../utils/apply-filters';\nimport { applyPagination } from '../utils/apply-pagination';\nimport { applySort } from '../utils/apply-sort';\nimport { wait } from '../utils/wait';\n\nconst now = new Date();\n\nconst invoices = [\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 2),\n    id: 'DEV5437',\n    issueDate: subDays(now, 9),\n    paymentMethod: 'Credit Card',\n    status: 'ongoing',\n    totalAmount: 192.5\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 1),\n    id: 'DEV5436',\n    issueDate: subDays(now, 12),\n    paymentMethod: 'Credit Card',\n    status: 'ongoing',\n    totalAmount: 192\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 14),\n    id: 'DEV54375',\n    issueDate: subDays(now, 4),\n    paymentMethod: 'PayPal',\n    status: 'ongoing',\n    totalAmount: 60\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 22),\n    id: 'DEV5434',\n    issueDate: subDays(now, 12),\n    paymentMethod: 'Credit Card',\n    status: 'draft',\n    totalAmount: 631\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 32),\n    id: 'DEV5433',\n    issueDate: subDays(now, 19),\n    paymentMethod: 'PayPal',\n    status: 'paid',\n    totalAmount: 1200\n  },\n  {\n    currencySymbol: '$',\n    dueDate: subDays(now, 12),\n    id: 'DEV5432',\n    issueDate: subDays(now, 5),\n    paymentMethod: 'PayPal',\n    status: 'overdue',\n    totalAmount: 631\n  }\n];\n\nconst invoice = {\n  createdAt: subDays(now, 10),\n  currencySymbol: '$',\n  customerName: 'Natalie Rusell',\n  dueDate: subDays(subMinutes(now, 29), 2),\n  id: 'DEV5437',\n  issueDate: subDays(subMinutes(now, 45), 9),\n  note: '“Please confirm once paid.”',\n  paymentAt: subDays(subMinutes(now, 11), 5),\n  paymentMethod: 'Credit Card',\n  paymentStatus: 'Failed',\n  status: 'ongoing',\n  subtotalAmount: 160,\n  taxAmount: 32.5,\n  totalAmount: 192.5,\n  transactionFees: 0,\n  transactionId: 'tran_54febasdaoiuhqja1837hj',\n  lineItems: [\n    {\n      currency: 'USD',\n      currencySymbol: '$',\n      discountAmount: 0,\n      image: '/static/product-01.png',\n      name: 'Watch with Leather Strap',\n      quantity: 1,\n      sku: 'BBAK01-A',\n      subtotalAmount: 160,\n      taxAmount: 32.5,\n      totalAmount: 192.5,\n      unitAmount: 160,\n      isTaxable: true\n    }\n  ]\n};\n\nclass InvoiceApi {\n  async getInvoices(options) {\n    if (throttle) {\n      await wait(throttle);\n    }\n\n    const { filters, sort, sortBy, page, query, view } = options;\n\n    /*\n     NOTE: Query, filter, sort and pagination are operation meant to be executed on the server.\n     Since this does not connect to a real backend, we simulate these operations.\n     */\n\n    const queriedInvoices = invoices.filter((_invoice) => {\n      // If query exists, it looks only in customer id field\n      if (!!query && !_invoice.id?.toLowerCase().includes(query.toLowerCase())) {\n        return false;\n      }\n\n      // No need to look for any resource fields\n      if (typeof view === 'undefined' || view === 'all') {\n        return true;\n      }\n\n      // In this case, the view represents the resource status\n      return _invoice.status === view;\n    });\n    const filteredInvoices = applyFilters(queriedInvoices, filters);\n    const sortedInvoices = applySort(filteredInvoices, sort, sortBy);\n    const paginatedInvoices = applyPagination(sortedInvoices, page);\n\n    return Promise.resolve({\n      invoices: paginatedInvoices,\n      invoicesCount: filteredInvoices.length\n    });\n  }\n\n  async getInvoice() {\n    if (throttle) {\n      await wait(throttle);\n    }\n\n    return Promise.resolve(invoice);\n  }\n}\n\nexport const invoiceApi = new InvoiceApi();\n","import PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Scrollbar } from '../scrollbar';\n\nexport const InvoiceTable = (props) => {\n  const { invoice } = props;\n\n  return (\n    <div>\n      <Scrollbar>\n        <Table sx={{ minWidth: 500 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Item\n              </TableCell>\n              <TableCell>\n                Qty\n              </TableCell>\n              <TableCell>\n                Total\n              </TableCell>\n              <TableCell>\n                Tax\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {invoice.lineItems.map((item) => (\n              <TableRow key={item.name}>\n                <TableCell>\n                  <Box>\n                    <Typography\n                      color=\"inherit\"\n                      variant=\"body2\"\n                    >\n                      {item.name}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {`${item.currency}  ${numeral(item.unitAmount).format(`${item.currencySymbol}0,0.00`)}`}\n                    </Typography>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                  {item.quantity}\n                </TableCell>\n                <TableCell>\n                  {numeral(item.subtotalAmount).format(`${item.currencySymbol}0,0.00`)}\n                </TableCell>\n                <TableCell sx={{ width: 150 }}>\n                  {numeral(item.taxAmount).format(`${item.currencySymbol}0,0.00`)}\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{ mr: 1 }}\n                    variant=\"subtitle2\"\n                  >\n                    Tax\n                  </Typography>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"subtitle2\"\n                  >\n                    {numeral(invoice.taxAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                  </Typography>\n                </Box>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{ mr: 1 }}\n                    variant=\"subtitle2\"\n                  >\n                    Total\n                  </Typography>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h6\"\n                  >\n                    {numeral(invoice.totalAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                  </Typography>\n                </Box>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Scrollbar>\n    </div>\n  );\n};\n\nInvoiceTable.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport { Document, Page, View, Text, StyleSheet } from '@react-pdf/renderer';\n\nconst COL1_WIDTH = 60;\nconst COLN_WIDTH = (100 - COL1_WIDTH) / 3;\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    padding: 24\n  },\n  h4: {\n    fontSize: 24,\n    fontWeight: 600,\n    lineHeight: 1.5\n  },\n  subtitle2: {\n    fontSize: 12,\n    fontWeight: 500,\n    letterSpacing: 0,\n    lineHeight: 1.57\n  },\n  body2: {\n    fontSize: 10,\n    lineHeight: 1.47\n  },\n  h6: {\n    fontSize: 12,\n    fontWeight: 600,\n    lineHeight: 1.6\n  },\n  gutterBottom: {\n    marginBottom: 4\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  status: {\n    textTransform: 'uppercase',\n    color: 'rgba(236, 76, 71, 1)'\n  },\n  details: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 12\n  },\n  dates: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 36,\n    marginTop: 48\n  },\n  notes: {\n    marginTop: 32\n  },\n  table: {\n    display: 'flex',\n    width: 'auto',\n    border: '1px solid #e1e3ea',\n    borderRadius: 6\n  },\n  tableHeader: {\n    backgroundColor: 'rgba(243, 244, 247, 1)'\n  },\n  tableBody: {},\n  tableRow: {\n    borderBottomWidth: 1,\n    borderColor: '#EEEEEE',\n    borderStyle: 'solid',\n    flexDirection: 'row'\n  },\n  tableCell1: {\n    padding: 6,\n    width: `${COL1_WIDTH}%`,\n    justifyContent: 'center'\n  },\n  tableCellN: {\n    padding: 6,\n    width: `${COLN_WIDTH}%`,\n    justifyContent: 'center'\n\n  }\n});\n\nexport const InvoicePDF = (props) => {\n  const { invoice } = props;\n\n  return (\n    <Document>\n      <Page\n        size=\"A4\"\n        style={styles.page}\n      >\n        <View style={styles.header}>\n          <View>\n            <Text style={styles.h4}>\n              #\n              {invoice.id}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.h4, styles.status]}>\n              {invoice.status}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.details}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice to\n            </Text>\n            <Text style={styles.body2}>\n              Acme LTD GB54423345\n            </Text>\n            <Text style={styles.body2}>\n              340 Lemon St. #5554\n            </Text>\n            <Text style={styles.body2}>\n              Spring Valley, California\n            </Text>\n            <Text style={styles.body2}>\n              United States\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice for\n            </Text>\n            <Text style={styles.body2}>\n              Natalie Rusell\n            </Text>\n            <Text style={styles.body2}>\n              3845 Salty Street\n            </Text>\n            <Text style={styles.body2}>\n              Salt Lake City\n            </Text>\n            <Text style={styles.body2}>\n              United States\n            </Text>\n          </View>\n        </View>\n        <View style={styles.dates}>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Invoice Date\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.dueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n          <View>\n            <Text style={[styles.subtitle2, styles.gutterBottom]}>\n              Due Date\n            </Text>\n            <Text style={styles.body2}>\n              {format(invoice.issueDate, 'dd MMM yyyy')}\n            </Text>\n          </View>\n        </View>\n        <View>\n          <View style={styles.table}>\n            <View style={styles.tableHeader}>\n              <View style={styles.tableRow}>\n                <View style={[styles.h6, styles.tableCell1]}>\n                  <Text>\n                    Description\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Qty\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Total\n                  </Text>\n                </View>\n                <View style={[styles.h6, styles.tableCellN]}>\n                  <Text>\n                    Tax\n                  </Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.tableBody}>\n              {invoice.lineItems.map((item) => (\n                <View\n                  style={styles.tableRow}\n                  key={item.name}\n                >\n                  <View style={styles.tableCell1}>\n                    <Text style={styles.body2}>\n                      {item.name}\n                    </Text>\n                    <Text style={styles.body2}>\n                      {item.unitAmount}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {item.quantity}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {numeral(item.subtotalAmount).format(`${item.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                  <View style={styles.tableCellN}>\n                    <Text style={styles.body2}>\n                      {numeral(item.taxAmount).format(`${item.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              ))}\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <View style={{ flexDirection: 'row' }}>\n                    <Text style={[styles.body2, { marginRight: 8 }]}>\n                      Tax\n                    </Text>\n                    <Text style={styles.body2}>\n                      {numeral(invoice.taxAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.tableRow}>\n                <View style={styles.tableCell1} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN} />\n                <View style={styles.tableCellN}>\n                  <View style={{ flexDirection: 'row' }}>\n                    <Text style={[styles.body2, { marginRight: 8 }]}>\n                      Total\n                    </Text>\n                    <Text style={styles.subtitle2}>\n                      {numeral(invoice.totalAmount).format(`${invoice.currencySymbol}0,0.00`)}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n        </View>\n        <View style={styles.notes}>\n          <Text style={[styles.subtitle2, styles.gutterBottom]}>\n            Notes\n          </Text>\n          <Text style={styles.body2}>\n            {invoice.note}\n          </Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nInvoicePDF.propTypes = {\n  invoice: PropTypes.object.isRequired\n};\n"],"sourceRoot":""}