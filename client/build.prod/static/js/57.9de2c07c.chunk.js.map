{"version":3,"sources":["containers/organization-general.js"],"names":["companySizeOptions","OrganizationGeneral","formik","useFormik","initialValues","companyName","companySize","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","helpers","a","toast","success","setStatus","setSubmitting","err","console","error","setErrors","message","useEffect","gtm","push","event","sx","backgroundColor","variant","container","spacing","item","md","xs","color","handleSubmit","Boolean","touched","errors","fullWidth","helperText","label","name","onBlur","handleBlur","onChange","handleChange","value","select","mt","map","companySizeOption","disabled","isSubmitting","size","type"],"mappings":"kWAkBMA,EAAqB,CAAC,IAAK,OAAQ,QAAS,QAAS,OAE9CC,EAAsB,WACjC,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,YAAa,iBACbC,YAAa,OACbC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCL,YAAaI,MAAaE,IAAI,KAAKC,SAAS,iCAC5CN,YAAaG,MAEVE,IAAI,KACJE,MAAMb,GACNY,SAAS,sBAEdE,SAAS,WAAD,4BAAE,WAAOC,EAAQC,GAAf,SAAAC,EAAA,sDACR,IACEC,IAAMC,QAAQ,kBACdH,EAAQI,UAAU,CAAED,SAAS,IAC7BH,EAAQK,eAAc,GACtB,MAAOC,GACPC,QAAQC,MAAMF,GACdN,EAAQI,UAAU,CAAED,SAAS,IAC7BH,EAAQS,UAAU,CAAElB,OAAQe,EAAII,UAChCV,EAAQK,eAAc,GAThB,2CAAF,qDAAC,KAkBX,OAJAM,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAGD,qCACE,cAAC,IAAD,UACE,iFAEF,cAAC,IAAD,CAAKC,GAAI,CAAEC,gBAAiB,sBAA5B,SACE,cAAC,IAAD,CAAMC,QAAQ,WAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAAC,IAAD,CACEC,MAAI,EACJC,GAAI,EACJC,GAAI,GAHN,SAKE,cAAC,IAAD,CACEC,MAAM,cACNN,QAAQ,KAFV,wBAOF,cAAC,IAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,GAHN,SAKE,uBAAMxB,SAAUZ,EAAOsC,aAAvB,UACE,cAAC,IAAD,CACEhB,MAAOiB,QAAQvC,EAAOwC,QAAQrC,aACzBH,EAAOyC,OAAOtC,aACnBuC,WAAS,EACTC,WAAY3C,EAAOwC,QAAQrC,aAAeH,EAAOyC,OAAOtC,YACxDyC,MAAM,oBACNC,KAAK,cACLC,OAAQ9C,EAAO+C,WACfC,SAAUhD,EAAOiD,aACjBC,MAAOlD,EAAOa,OAAOV,cAEvB,cAAC,IAAD,CACEmB,MAAOiB,QAAQvC,EAAOwC,QAAQpC,aACzBJ,EAAOyC,OAAOrC,aACnBsC,WAAS,EACTC,WAAY3C,EAAOwC,QAAQpC,aAAeJ,EAAOyC,OAAOrC,YACxDwC,MAAM,eACNC,KAAK,cACLC,OAAQ9C,EAAO+C,WACfC,SAAUhD,EAAOiD,aACjBE,QAAM,EACNtB,GAAI,CAAEuB,GAAI,GACVF,MAAOlD,EAAOa,OAAOT,YAXvB,SAaGN,EAAmBuD,KAAI,SAACC,GAAD,OACtB,cAAC,IAAD,CAEEJ,MAAOI,EAFT,SAIGA,GAHIA,QAOVtD,EAAOyC,OAAOpC,QACb,cAAC,IAAD,CACEiB,OAAK,EACLO,GAAI,CAAEuB,GAAI,GAFZ,SAIGpD,EAAOyC,OAAOpC,SAGnB,cAAC,IAAD,CACEgC,MAAM,UACNkB,SAAUvD,EAAOwD,aACjBC,KAAK,QACL5B,GAAI,CAAEuB,GAAI,GACVM,KAAK,SACL3B,QAAQ,YANV","file":"static/js/57.9de2c07c.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { InputField } from '../components/input-field';\nimport gtm from '../lib/gtm';\n\nconst companySizeOptions = ['1', '2-10', '11-30', '31-50', '50+'];\n\nexport const OrganizationGeneral = () => {\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '2-10',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Organization name is required'),\n      companySize: Yup\n        .string()\n        .max(255)\n        .oneOf(companySizeOptions)\n        .required('Size is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Organization: General | Carpatin Dashboard</title>\n      </Helmet>\n      <Box sx={{ backgroundColor: 'background.default' }}>\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Grid\n              container\n              spacing={4}\n            >\n              <Grid\n                item\n                md={5}\n                xs={12}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  Settings\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                md={7}\n                xs={12}\n              >\n                <form onSubmit={formik.handleSubmit}>\n                  <InputField\n                    error={Boolean(formik.touched.companyName\n                      && formik.errors.companyName)}\n                    fullWidth\n                    helperText={formik.touched.companyName && formik.errors.companyName}\n                    label=\"Organization name\"\n                    name=\"companyName\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.companyName}\n                  />\n                  <InputField\n                    error={Boolean(formik.touched.companySize\n                      && formik.errors.companySize)}\n                    fullWidth\n                    helperText={formik.touched.companySize && formik.errors.companySize}\n                    label=\"Company size\"\n                    name=\"companySize\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    select\n                    sx={{ mt: 2 }}\n                    value={formik.values.companySize}\n                  >\n                    {companySizeOptions.map((companySizeOption) => (\n                      <MenuItem\n                        key={companySizeOption}\n                        value={companySizeOption}\n                      >\n                        {companySizeOption}\n                      </MenuItem>\n                    ))}\n                  </InputField>\n                  {formik.errors.submit && (\n                    <FormHelperText\n                      error\n                      sx={{ mt: 2 }}\n                    >\n                      {formik.errors.submit}\n                    </FormHelperText>\n                  )}\n                  <Button\n                    color=\"primary\"\n                    disabled={formik.isSubmitting}\n                    size=\"large\"\n                    sx={{ mt: 4 }}\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Save settings\n                  </Button>\n                </form>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Box>\n    </>\n  );\n};\n"],"sourceRoot":""}