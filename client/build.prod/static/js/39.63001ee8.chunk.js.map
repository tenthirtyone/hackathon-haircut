{"version":3,"sources":["components/stepper.js","components/wizard-business.js","icons/chip.js","icons/cloud.js","components/wizard-confirmation.js","components/wizard-notifications.js","components/wizard-profile.js","components/wizard.js","containers/components-onboarding.js","components/property-list-item.js","components/property-list.js","icons/check.js"],"names":["getTextColor","value","title","content","Stepper","props","steps","currentStep","orientation","mappedSteps","map","item","index","mapSteps","Timeline","sx","flexDirection","flexGrow","my","p","Box","display","flex","alignItems","TimelineItem","minHeight","TimelineDot","backgroundColor","borderColor","color","alignSelf","boxShadow","flexShrink","height","justifyContent","m","width","variant","borderRadius","TimelineContent","pr","Typography","length","TimelineConnector","ml","mr","defaultProps","businessOptions","icon","createSvgIcon","xmlns","className","viewBox","fill","d","fillRule","clipRule","OfficeBuildingIcon","WizardBusiness","initialBusiness","onNextStep","useState","business","setBusiness","error","setError","onSubmit","event","preventDefault","mb","py","option","Icon","Card","onClick","handleBusinessTypeChange","theme","palette","primary","main","divider","cursor","CardContent","Avatar","borderStyle","borderWidth","fontSize","Boolean","FormHelperText","Button","size","type","notificationOptions","name","label","WizardConfirmation","onPreviousStep","values","mt","fullName","website","companyName","Object","entries","notifications","filter","key","find","join","WizardNotifications","initialNotifications","setNotifications","handleNotificationsChange","prevNotifications","target","checked","CardHeader","subheader","Divider","List","disablePadding","ListItem","Switch","onChange","WizardProfile","initialValues","setValues","handleValuesChange","prevValues","gap","gridAutoFlow","fullWidth","InputProps","startAdornment","InputAdornment","position","Wizard","setCurrentStep","newCompanySignups","newOrders","publishErrors","handleNextStep","newValues","handlePreviousStep","getContent","Grid","container","spacing","md","xs","Container","maxWidth","ComponentsOnboarding","mdDown","useMediaQuery","breakpoints","down","useEffect","gtm","push","PropertyListItem","align","children","component","other","disableGutters","px","disableTypography","minWidth","secondary","PropertyList","Check"],"mappings":"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","file":"static/js/39.63001ee8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Box, Typography } from '@material-ui/core';\nimport {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem\n} from '@material-ui/lab';\nimport { Check as CheckIcon } from '../icons/check';\n\nconst mapSteps = (steps, currentStep) => steps.map((item, index) => {\n  if (currentStep > index) {\n    return { ...item, value: 'complete' };\n  }\n\n  if (currentStep === index) {\n    return { ...item, value: 'active' };\n  }\n\n  return { ...item, value: 'inactive' };\n});\n\nconst getDotStyles = (value) => {\n  if (value === 'complete') {\n    return {\n      backgroundColor: 'primary.main',\n      borderColor: 'primary.main'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      borderColor: 'primary.main',\n      color: 'primary.main'\n    };\n  }\n\n  return {\n    backgroundColor: 'inherit',\n    borderColor: 'neutral.300',\n    color: 'text.secondary'\n  };\n};\n\nconst getTextColor = (value) => {\n  if (value === 'complete') {\n    return {\n      title: 'textPrimary',\n      content: 'textSecondary'\n    };\n  }\n\n  if (value === 'active') {\n    return {\n      title: 'primary.main',\n      content: 'textSecondary'\n    };\n  }\n\n  return {\n    title: 'text.disabled',\n    content: 'text.disabled'\n  };\n};\n\nexport const Stepper = (props) => {\n  const { steps, currentStep, orientation } = props;\n  const mappedSteps = mapSteps(steps, currentStep);\n\n  return (\n    <Timeline\n      sx={{\n        flexDirection: orientation === 'vertical' ? 'column' : 'row',\n        flexGrow: 'inherit',\n        my: 0,\n        p: 0\n      }}\n    >\n      {mappedSteps.map((item, index) => (\n        <Box\n          key={item.title}\n          sx={{\n            display: 'flex',\n            flex: 1,\n            flexDirection: orientation === 'vertical' ? 'column' : 'row',\n            alignItems: orientation === 'vertical' ? 'inherit' : 'center'\n          }}\n        >\n          <TimelineItem\n            sx={{\n              alignItems: 'center',\n              minHeight: 'auto',\n              '&::before': {\n                display: 'none'\n              }\n            }}\n          >\n            <TimelineDot\n              sx={{\n                ...(getDotStyles(item.value)),\n                alignItems: 'center',\n                alignSelf: 'center',\n                boxShadow: 'none',\n                display: 'flex',\n                flexShrink: 0,\n                height: 36,\n                justifyContent: 'center',\n                m: 0,\n                width: 36\n              }}\n              variant={(item.value === 'complete')\n                ? 'filled'\n                : 'outlined'}\n            >\n              {(item.value === 'active')\n                ? (\n                  <Box\n                    sx={{\n                      backgroundColor: 'primary.main',\n                      borderRadius: '50%',\n                      height: 12,\n                      width: 12\n                    }}\n                  />\n                )\n                : (item.value === 'complete') && <CheckIcon />}\n            </TimelineDot>\n            <TimelineContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                pr: 1\n              }}\n            >\n              <Typography\n                color={getTextColor(item.value).title}\n                variant=\"overline\"\n              >\n                {item.title}\n              </Typography>\n              <Typography\n                color={getTextColor(item.value).content}\n                variant=\"body2\"\n              >\n                {item.content}\n              </Typography>\n            </TimelineContent>\n          </TimelineItem>\n          {mappedSteps.length > index + 1 && (\n            <TimelineConnector\n              sx={{\n                backgroundColor: item.value === 'complete' ? 'primary.main' : 'neutral.200',\n                height: orientation === 'vertical' ? 22 : 2,\n                width: orientation === 'vertical' ? 2 : 22,\n                my: orientation === 'vertical' ? 1 : 'inherit',\n                ml: orientation === 'vertical' ? 2.25 : 0,\n                mr: orientation === 'vertical' ? 0 : 1\n              }}\n            />\n          )}\n        </Box>\n      ))}\n    </Timeline>\n  );\n};\n\nStepper.defaultProps = {\n  orientation: 'vertical'\n};\n\nStepper.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n  steps: PropTypes.array.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  FormHelperText\n} from '@material-ui/core';\nimport { Chip as ChipIcon } from '../icons/chip';\nimport { Cloud as CloudIcon } from '../icons/cloud';\nimport { OfficeBuilding as OfficeBuildingIcon } from '../icons/office-building';\n\nconst businessOptions = [\n  {\n    content: 'Software as a service (SaaS) is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted.',\n    icon: ChipIcon,\n    value: 'Software as a service'\n  },\n  {\n    content: 'Infrastructure as a service (IaaS) is a form of cloud computing that provides virtualized computing resources over the internet.',\n    icon: CloudIcon,\n    value: 'Infrastructure as a Service'\n  },\n  {\n    content: 'Platform as a service (PaaS) is a deployment environment in the cloud, with resources that enable you to deliver cloud-based apps or even enterprise apps.',\n    icon: OfficeBuildingIcon,\n    value: 'Platform as a service'\n  }\n];\n\nexport const WizardBusiness = (props) => {\n  const { initialBusiness, onNextStep } = props;\n  const [business, setBusiness] = useState(initialBusiness);\n  const [error, setError] = useState(null);\n\n  const handleBusinessTypeChange = (value) => {\n    setBusiness(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!business) {\n      setError('Please select a business');\n      return;\n    }\n\n    onNextStep({ business });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            mb: 2,\n            py: 2\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 0.5 }}\n            variant=\"h6\"\n          >\n            Step 1. Business type\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Our architecture is ready for any type of business, just\n            let us know who are we talking to.\n          </Typography>\n        </Box>\n        <Box>\n          {businessOptions.map((option) => {\n            const { content, icon: Icon, value } = option;\n\n            return (\n              <Card\n                onClick={() => handleBusinessTypeChange(value)}\n                key={value}\n                sx={{\n                  boxShadow: (theme) => (business === value\n                    ? `0px 0px 0px 2px ${theme.palette.primary.main}`\n                    : `0px 0px 0px 1px ${theme.palette.divider}`),\n                  cursor: 'pointer',\n                  mb: 2\n                }}\n              >\n                <CardContent\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex'\n                  }}\n                >\n                  <Avatar\n                    variant=\"rounded\"\n                    sx={{\n                      backgroundColor: 'background.default',\n                      borderColor: 'divider',\n                      borderStyle: 'solid',\n                      borderWidth: 1,\n                      mr: 2\n                    }}\n                  >\n                    <Icon\n                      color=\"primary\"\n                      fontSize=\"large\"\n                    />\n                  </Avatar>\n                  <Box>\n                    <Typography\n                      color=\"textPrimary\"\n                      sx={{ mb: 1 }}\n                      variant=\"h6\"\n                    >\n                      {value}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body1\"\n                    >\n                      {content}\n                    </Typography>\n                  </Box>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </Box>\n        {Boolean(error) && (\n          <FormHelperText error>\n            {error}\n          </FormHelperText>\n        )}\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Next Step\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n};\n\nWizardBusiness.propTypes = {\n  initialBusiness: PropTypes.string.isRequired,\n  onNextStep: PropTypes.func.isRequired\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Chip = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-5 w-5\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M13 7H7v6h6V7z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Chip'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Cloud = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-5 w-5\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M5.5 16a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 16h-8z\" />\n  </svg>, 'Cloud'\n);\n","import PropTypes from 'prop-types';\nimport { Box, Button, Card, Typography } from '@material-ui/core';\nimport { PropertyList } from './property-list';\nimport { PropertyListItem } from './property-list-item';\n\nconst notificationOptions = [\n  {\n    name: 'newOrders',\n    label: 'New Orders'\n  },\n  {\n    name: 'newCompanySignups',\n    label: 'New Company Signups'\n  },\n  {\n    name: 'publishErrors',\n    label: 'Publish Errors'\n  }\n];\n\nexport const WizardConfirmation = (props) => {\n  const { onPreviousStep, values } = props;\n\n  return (\n    <div>\n      <Typography\n        color=\"textPrimary\"\n        sx={{\n          mb: 5,\n          mt: 2\n        }}\n        variant=\"h6\"\n      >\n        Step 4. Confirmation\n      </Typography>\n      <Card variant=\"outlined\">\n        <PropertyList>\n          <PropertyListItem\n            divider\n            label=\"Company Type\"\n            value={values.business}\n          />\n          <PropertyListItem\n            divider\n            label=\"Full Name\"\n            value={values.fullName}\n          />\n          <PropertyListItem\n            divider\n            label=\"Website\"\n            value={values.website}\n          />\n          <PropertyListItem\n            divider\n            label=\"Company Name\"\n            value={values.companyName}\n          />\n          <PropertyListItem\n            label=\"Email Notifications\"\n            value={Object\n              .entries(values.notifications)\n              .filter(([, value]) => value)\n              .map(([key]) => notificationOptions.find((option) => option.name === key).label)\n              .join(', ')}\n          />\n        </PropertyList>\n      </Card>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 3\n        }}\n      >\n        <Button\n          color=\"primary\"\n          onClick={onPreviousStep}\n          size=\"large\"\n          sx={{ mr: 2 }}\n          type=\"button\"\n          variant=\"text\"\n        >\n          Back\n        </Button>\n        <Button\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Confirm\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nWizardConfirmation.propTypes = {\n  onPreviousStep: PropTypes.func.isRequired,\n  values: PropTypes.object.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  Switch,\n  Typography\n} from '@material-ui/core';\n\nconst notificationOptions = [\n  {\n    name: 'newOrders',\n    label: 'New Orders'\n  },\n  {\n    name: 'newCompanySignups',\n    label: ' New Company Signups'\n  },\n  {\n    name: 'publishErrors',\n    label: 'Publish Errors'\n  }\n];\n\nexport const WizardNotifications = (props) => {\n  const { initialNotifications, onNextStep, onPreviousStep } = props;\n  const [notifications, setNotifications] = useState(initialNotifications);\n\n  const handleNotificationsChange = (event) => {\n    setNotifications((prevNotifications) => ({\n      ...prevNotifications,\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  return (\n    <div>\n      <form onSubmit={() => onNextStep({ notifications })}>\n        <Typography\n          color=\"textPrimary\"\n          sx={{\n            mb: 5,\n            mt: 2\n          }}\n          variant=\"h6\"\n        >\n          Step 3. Notifications\n        </Typography>\n        <Card variant=\"outlined\">\n          <CardHeader\n            subheader=\"Manage your alert notifications\"\n            title=\"Email Notifications\"\n          />\n          <Divider />\n          <List disablePadding>\n            {notificationOptions.map((option, index) => (\n              <ListItem\n                divider={index + 1 < notificationOptions.length}\n                key={option.name}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body2\"\n                >\n                  {option.label}\n                </Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Switch\n                  checked={notifications[option.name]}\n                  name={option.name}\n                  onChange={handleNotificationsChange}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Card>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            mt: 3\n          }}\n        >\n          <Button\n            color=\"primary\"\n            onClick={onPreviousStep}\n            size=\"large\"\n            sx={{ mr: 2 }}\n            type=\"button\"\n            variant=\"text\"\n          >\n            Back\n          </Button>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Next Step\n          </Button>\n        </Box>\n      </form>\n    </div>\n  );\n};\n\nWizardNotifications.propTypes = {\n  // @ts-ignore\n  initialNotifications: PropTypes.shape({\n    newCompanySignups: PropTypes.bool.isRequired,\n    newOrders: PropTypes.bool.isRequired,\n    publishErrors: PropTypes.bool.isRequired\n  }).isRequired,\n  onNextStep: PropTypes.func.isRequired,\n  onPreviousStep: PropTypes.func.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Button, InputAdornment, Typography } from '@material-ui/core';\nimport { InputField } from './input-field';\n\nexport const WizardProfile = (props) => {\n  const { initialValues, onPreviousStep, onNextStep } = props;\n  const [values, setValues] = useState(initialValues);\n\n  const handleValuesChange = (event) => {\n    setValues((prevValues) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onNextStep({\n      fullName: values.fullName,\n      website: `https://${values.website}`,\n      companyName: values.companyName\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: 'grid',\n            gap: 2,\n            gridAutoFlow: 'row'\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            sx={{ my: 2 }}\n            variant=\"h6\"\n          >\n            Step 2. Profile details\n          </Typography>\n          <InputField\n            fullWidth\n            label=\"Full name\"\n            name=\"fullName\"\n            onChange={handleValuesChange}\n          />\n          <InputField\n            fullWidth\n            label=\"Website\"\n            name=\"website\"\n            onChange={handleValuesChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  https://\n                </InputAdornment>\n              )\n            }}\n          />\n          <InputField\n            fullWidth\n            label=\"Company name\"\n            name=\"companyName\"\n            onChange={handleValuesChange}\n          />\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mb: 1 }}\n              variant=\"subtitle2\"\n            >\n              Photo\n            </Typography>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex'\n              }}\n            >\n              <Avatar\n                sx={{\n                  height: 58,\n                  mr: 2,\n                  width: 58\n                }}\n              />\n              <div>\n                <div>\n                  <Button\n                    color=\"primary\"\n                    size=\"small\"\n                    sx={{ mb: 1 }}\n                    type=\"button\"\n                    variant=\"outlined\"\n                  >\n                    Upload new picture\n                  </Button>\n                </div>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"caption\"\n                >\n                  Recommended dimensions: 200x200, maximum file size: 5MB\n                </Typography>\n              </div>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 3\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={onPreviousStep}\n                size=\"large\"\n                sx={{ mr: 2 }}\n                type=\"button\"\n                variant=\"text\"\n              >\n                Back\n              </Button>\n              <Button\n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Next Step\n              </Button>\n            </Box>\n          </div>\n        </Box>\n      </form>\n    </div>\n  );\n};\n\nWizardProfile.propTypes = {\n  initialValues: PropTypes.object.isRequired,\n  onNextStep: PropTypes.func.isRequired,\n  onPreviousStep: PropTypes.func.isRequired\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent, Container, Grid } from '@material-ui/core';\nimport { Stepper } from './stepper';\nimport { WizardBusiness } from './wizard-business';\nimport { WizardConfirmation } from './wizard-confirmation';\nimport { WizardNotifications } from './wizard-notifications';\nimport { WizardProfile } from './wizard-profile';\n\nconst steps = [\n  {\n    title: 'Step 1',\n    content: 'Business'\n  },\n  {\n    title: 'Step 2',\n    content: 'Profile'\n  },\n  {\n    title: 'Step 3',\n    content: 'Business'\n  },\n  {\n    title: 'Step 4',\n    content: 'Confirmation'\n  }\n];\n\nexport const Wizard = (props) => {\n  const { orientation } = props;\n  const [currentStep, setCurrentStep] = useState(0);\n  const [values, setValues] = useState({\n    business: '',\n    fullName: '',\n    website: '',\n    companyName: '',\n    notifications: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false\n    }\n  });\n\n  const handleNextStep = (newValues) => {\n    setValues((prevValues) => ({ ...prevValues, ...newValues }));\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const getContent = () => {\n    if (currentStep === 0) {\n      return (\n        <WizardBusiness\n          initialBusiness={values.business}\n          onNextStep={handleNextStep}\n        />\n      );\n    }\n\n    if (currentStep === 1) {\n      return (\n        <WizardProfile\n          initialValues={{\n            fullName: values.fullName,\n            website: values.website,\n            companyName: values.companyName\n          }}\n          onNextStep={handleNextStep}\n          onPreviousStep={handlePreviousStep}\n        />\n      );\n    }\n\n    if (currentStep === 2) {\n      return (\n        <WizardNotifications\n          onNextStep={handleNextStep}\n          onPreviousStep={handlePreviousStep}\n          initialNotifications={values.notifications}\n        />\n      );\n    }\n\n    return (\n      <WizardConfirmation\n        onPreviousStep={handlePreviousStep}\n        values={values}\n      />\n    );\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      {orientation === 'horizontal'\n        ? (\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={4}\n                xs={12}\n              >\n                <Stepper\n                  steps={steps}\n                  currentStep={currentStep}\n                />\n              </Grid>\n              <Grid\n                item\n                md={8}\n                xs={12}\n              >\n                {getContent()}\n              </Grid>\n            </Grid>\n          </CardContent>\n        )\n        : (\n          <CardContent>\n            <Stepper\n              currentStep={currentStep}\n              orientation=\"horizontal\"\n              steps={steps}\n            />\n            <Container\n              maxWidth=\"sm\"\n              sx={{ mt: 6 }}\n            >\n              {getContent()}\n            </Container>\n          </CardContent>\n        )}\n    </Card>\n  );\n};\n\nWizard.defaultProps = {\n  orientation: 'horizontal'\n};\n\nWizard.propTypes = {\n  orientation: PropTypes.oneOf(['vertical', 'horizontal'])\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Typography, useMediaQuery } from '@material-ui/core';\nimport { Wizard } from '../components/wizard';\nimport gtm from '../lib/gtm';\n\nexport const ComponentsOnboarding = () => {\n  const mdDown = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Components: Onboarding | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 6 }}\n            variant=\"h4\"\n          >\n            Onboarding\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 2 }}\n            variant=\"h6\"\n          >\n            Vertical Stepper\n          </Typography>\n          <Wizard />\n          {!mdDown && (\n            <>\n              <Typography\n                color=\"textPrimary\"\n                sx={{\n                  mb: 2,\n                  mt: 5\n                }}\n                variant=\"h6\"\n              >\n                Horizontal Stepper\n              </Typography>\n              <Wizard orientation=\"vertical\" />\n            </>\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport const PropertyListItem = (props) => {\n  const { align, children, component, value, label, ...other } = props;\n\n  return (\n    <ListItem\n      component={component}\n      disableGutters\n      sx={{\n        px: 3,\n        py: 1.5\n      }}\n      {...other}\n    >\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            sx={{ minWidth: align === 'vertical' ? 'inherit' : 180 }}\n            variant=\"subtitle2\"\n          >\n            {label}\n          </Typography>\n        )}\n        secondary={(\n          <Box\n            sx={{\n              flex: 1,\n              mt: align === 'vertical' ? 0.5 : 0\n            }}\n          >\n            {children || (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {value}\n              </Typography>\n            )}\n          </Box>\n        )}\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: align === 'vertical' ? 'column' : 'row',\n          my: 0\n        }}\n      />\n    </ListItem>\n  );\n};\n\nPropertyListItem.defaultProps = {\n  align: 'vertical'\n};\n\nPropertyListItem.propTypes = {\n  align: PropTypes.string,\n  component: PropTypes.elementType,\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\n\nexport const PropertyList = (props) => {\n  const { children } = props;\n\n  return (\n    <List disablePadding>\n      {children}\n    </List>\n  );\n};\n\nPropertyList.propTypes = {\n  children: PropTypes.node\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Check = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Check'\n);\n"],"sourceRoot":""}