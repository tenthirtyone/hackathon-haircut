{"version":3,"sources":["components/customer/customers-filter.js","components/customer/customer-menu.js","components/customer/customers-table.js","containers/customers.js","icons/plus.js","icons/refresh.js","icons/question-mark-outlined.js","components/resource-error.js","components/resource-unavailable.js","icons/dots-vertical.js","components/date-field.js","icons/adjustments.js","utils/filter-operators.js","components/bulk-actions-menu.js","components/pagination.js","hooks/use-selection.js","hooks/use-filters.js","components/filter-dialog-item.js","components/filter-dialog.js","icons/search.js","components/query.js","components/customer/customer-dialog.js","icons/star.js"],"names":["views","label","value","filterProperties","name","type","filterOperators","equalOperator","notEqualOperator","containsOperator","notContainsOperator","startsWithOperator","endsWithOperator","greaterThanOperator","lessThanOperator","isAfterOperator","isBeforeOperator","isBlankOperator","isPresentOperator","CustomersFilter","props","disabled","filters","onFiltersApply","onFiltersClear","onQueryChange","onViewChange","query","selectedCustomers","view","useState","openFilterDialog","setOpenFilterDialog","Box","sx","px","sm","Tabs","onChange","event","allowScrollButtonsMobile","variant","map","option","Tab","Divider","alignItems","display","gap","gridTemplateColumns","length","xs","justifyItems","p","onArchive","onDelete","selectedCount","order","Button","color","onClick","startIcon","size","onApply","onClear","onClose","open","operators","properties","defaultProps","CustomerMenu","navigate","useNavigate","usePopover","anchorRef","handleOpen","handleClose","IconButton","ref","fontSize","Menu","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","toast","error","columns","id","disablePadding","CustomersTable","customersProp","customers","customersCount","isLoading","onPageChange","onSelect","onSelectAll","onSortChange","page","sort","sortBy","setCustomers","useEffect","displayLoading","displayError","Boolean","displayUnavailable","flex","flexDirection","Table","minWidth","TableHead","TableRow","TableCell","padding","Checkbox","checked","indeterminate","column","TableSortLabel","active","direction","TableBody","customer","hover","selected","find","selectedCustomer","justifyContent","customerId","temp","customerIndex","findIndex","isFavorite","handleIsFavoriteChange","Avatar","src","avatar","height","mr","width","Link","component","RouterLink","to","underline","fullName","phone","email","format","createdAt","align","Skeleton","flexGrow","m","mt","rowsCount","Customers","mounted","useMounted","controller","setController","customersState","setCustomersState","useSelection","data","handleSelect","handleSelectAll","openCreateDialog","setOpenCreateDialog","getCustomers","useCallback","a","customerApi","result","console","message","catch","gtm","push","backgroundColor","Container","maxWidth","py","Typography","Card","newFilters","parsedFilters","filter","property","operator","newQuery","newView","newPage","isAsc","Plus","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Refresh","QuestionMarkOutlined","className","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ResourceErrorRoot","styled","theme","palette","neutral","spacing","ResourceError","onReload","other","ResourceUnavailableRoot","ResourceUnavailable","onCreate","DotsVertical","DateField","fullWidth","helperText","placeholder","renderInput","InputProps","rest","borderWidth","borderStyle","borderColor","borderRadius","boxShadow","transition","transitions","create","alpha","primary","main","lineHeight","disableUnderline","InputLabelProps","shrink","fontWeight","mb","position","transform","Adjustments","typesAccepted","BulkActionsMenu","PaginationRoot","Pagination","pagesCount","Math","ceil","isFirstPage","isLastPage","whiteSpace","mx","ml","rows","selectedRows","setSelectedRows","rowId","prevSelectedRows","target","selectedRow","row","blankFilter","FilterDialogItem","index","onAddFilter","onRemoveFilter","onPropertyChange","onOperatorChange","onValueChange","Grid","container","pb","item","select","includes","date","FilterDialog","initialFilters","setFilters","shouldApplyFilters","i","clearFilters","removeFilter","prevFilters","_","_index","addFilter","splice","handlePropertyChange","filterIndex","selectedPropertyName","selectedProperty","handleOperatorChange","selectedOperatorValue","selectedOperator","handleValueChange","useFilters","Dialog","PaperProps","DialogTitle","DialogContent","my","textAlign","Chip","DialogActions","Search","QueryRoot","border","divider","shape","Query","autoFocus","setAutoFocus","inputRef","useRef","tempValue","setTempValue","focus","InputBase","inputProps","opacity","onBlur","onFocus","onKeyUp","keyCode","countryOptions","CustomerDialog","formik","useFormik","enableReinitialize","initialValues","address","country","submit","validationSchema","Yup","max","required","oneOf","onSubmit","values","helpers","success","resetForm","setStatus","setSubmitting","err","setErrors","TransitionProps","onExited","touched","errors","handleBlur","handleChange","isSubmitting","handleSubmit","Star"],"mappings":"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","file":"static/js/19.225d9082.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Divider, Tab, Tabs } from '@material-ui/core';\nimport { Adjustments as AdjustmentsIcon } from '../../icons/adjustments';\nimport {\n  containsOperator,\n  endsWithOperator,\n  equalOperator,\n  greaterThanOperator,\n  isAfterOperator,\n  isBeforeOperator,\n  isBlankOperator,\n  isPresentOperator,\n  lessThanOperator,\n  notContainsOperator,\n  notEqualOperator,\n  startsWithOperator\n} from '../../utils/filter-operators';\nimport { BulkActionsMenu } from '../bulk-actions-menu';\nimport { Query } from '../query';\nimport { FilterDialog } from '../filter-dialog';\n\nconst views = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Returning',\n    value: 'isReturning'\n  },\n  {\n    label: 'Ordered recently',\n    value: 'orderedRecently'\n  }\n];\n\nconst filterProperties = [\n  {\n    label: 'Name',\n    name: 'fullName',\n    type: 'string'\n  },\n  {\n    label: 'Phone',\n    name: 'phone',\n    type: 'string'\n  },\n  {\n    label: 'Email',\n    name: 'email',\n    type: 'string'\n  },\n  {\n    label: 'Created',\n    name: 'createdAt',\n    type: 'date'\n  }\n];\n\nconst filterOperators = [\n  equalOperator,\n  notEqualOperator,\n  containsOperator,\n  notContainsOperator,\n  startsWithOperator,\n  endsWithOperator,\n  greaterThanOperator,\n  lessThanOperator,\n  isAfterOperator,\n  isBeforeOperator,\n  isBlankOperator,\n  isPresentOperator\n];\n\nexport const CustomersFilter = (props) => {\n  const {\n    disabled,\n    filters,\n    onFiltersApply,\n    onFiltersClear,\n    onQueryChange,\n    onViewChange,\n    query,\n    selectedCustomers,\n    view\n  } = props;\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  return (\n    <>\n      <div>\n        <Box\n          sx={{\n            px: {\n              sm: 3\n            }\n          }}\n        >\n          <Tabs\n            onChange={(event, value) => onViewChange?.(value)}\n            allowScrollButtonsMobile\n            value={view}\n            variant=\"scrollable\"\n          >\n            {views.map((option) => (\n              <Tab\n                disabled={disabled}\n                key={option.label}\n                label={option.label}\n                value={option.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'grid',\n            gap: 2,\n            gridTemplateColumns: {\n              sm: selectedCustomers.length > 0 ? 'auto 1fr auto' : '1fr auto',\n              xs: 'auto'\n            },\n            justifyItems: 'flex-start',\n            p: 3\n          }}\n        >\n          <BulkActionsMenu\n            disabled={disabled}\n            onArchive={() => { }}\n            onDelete={() => { }}\n            selectedCount={selectedCustomers.length}\n            sx={{\n              display: selectedCustomers.length > 0 ? 'flex' : 'none',\n              order: {\n                sm: 1,\n                xs: 2\n              }\n            }}\n          />\n          <Query\n            disabled={disabled}\n            onChange={onQueryChange}\n            sx={{\n              order: {\n                sm: 2,\n                xs: 1\n              }\n            }}\n            value={query}\n          />\n          <Button\n            color=\"primary\"\n            disabled={disabled}\n            onClick={() => setOpenFilterDialog(true)}\n            startIcon={<AdjustmentsIcon />}\n            size=\"large\"\n            sx={{ order: 3 }}\n            variant={filters.length ? 'contained' : 'text'}\n          >\n            Filter\n          </Button>\n        </Box>\n      </div>\n      <FilterDialog\n        onApply={onFiltersApply}\n        onClear={onFiltersClear}\n        onClose={() => setOpenFilterDialog(false)}\n        open={openFilterDialog}\n        operators={filterOperators}\n        properties={filterProperties}\n      />\n    </>\n  );\n};\n\nCustomersFilter.defaultProps = {\n  filters: [],\n  selectedCustomers: [],\n  view: 'all'\n};\n\nCustomersFilter.propTypes = {\n  disabled: PropTypes.bool,\n  filters: PropTypes.array,\n  onFiltersApply: PropTypes.func,\n  onFiltersClear: PropTypes.func,\n  onQueryChange: PropTypes.func,\n  onViewChange: PropTypes.func,\n  query: PropTypes.string,\n  selectedCustomers: PropTypes.array,\n  view: PropTypes.string\n};\n","import { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { usePopover } from '../../hooks/use-popover';\nimport { DotsVertical as DotsVerticalIcon } from '../../icons/dots-vertical';\n\nexport const CustomerMenu = (props) => {\n  const navigate = useNavigate();\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  const handleEdit = () => {\n    handleClose();\n    navigate('/dashboard/customers/1');\n  };\n\n  const handleReport = () => {\n    handleClose();\n    toast.error('This action is not available on demo');\n  };\n\n  const handleDelete = () => {\n    handleClose();\n    toast.error('This action is not available on demo');\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={handleOpen}\n        ref={anchorRef}\n        {...props}\n      >\n        <DotsVerticalIcon fontSize=\"small\" />\n      </IconButton>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n      >\n        <MenuItem onClick={handleEdit}>\n          Edit\n        </MenuItem>\n        <MenuItem onClick={handleReport}>\n          Report\n        </MenuItem>\n        <MenuItem onClick={handleDelete}>\n          Delete\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport Proptypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  Checkbox,\n  Divider,\n  IconButton,\n  Link,\n  Skeleton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel\n} from '@material-ui/core';\nimport { Star as StarIcon } from '../../icons/star';\nimport { Pagination } from '../pagination';\nimport { ResourceError } from '../resource-error';\nimport { ResourceUnavailable } from '../resource-unavailable';\nimport { Scrollbar } from '../scrollbar';\nimport { CustomerMenu } from './customer-menu';\n\nconst columns = [\n  {\n    id: 'fullName',\n    disablePadding: true,\n    label: 'Name'\n  },\n  {\n    id: 'phone',\n    label: 'Phone'\n  },\n  {\n    id: 'email',\n    label: 'Email'\n  },\n  {\n    id: 'createdAt',\n    label: 'Created'\n  }\n];\n\nexport const CustomersTable = (props) => {\n  const {\n    customers: customersProp,\n    customersCount,\n    error,\n    isLoading,\n    onPageChange,\n    onSelect,\n    onSelectAll,\n    onSortChange,\n    page,\n    selectedCustomers,\n    sort,\n    sortBy\n  } = props;\n  const [customers, setCustomers] = useState(customersProp);\n\n  useEffect(() => {\n    setCustomers(customersProp);\n  }, [customersProp]);\n\n  const handleIsFavoriteChange = (customerId, value) => {\n    const temp = [...customers];\n    const customerIndex = temp.findIndex((customer) => customer.id === customerId);\n    temp[customerIndex].isFavorite = value;\n    setCustomers(temp);\n  };\n\n  const displayLoading = isLoading;\n  const displayError = Boolean(!isLoading && error);\n  const displayUnavailable = Boolean(!isLoading && !error && !customers?.length);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column'\n      }}\n    >\n      <Scrollbar>\n        <Table sx={{ minWidth: 1000 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={customers?.length > 0\n                  && selectedCustomers.length === customers?.length}\n                  disabled={isLoading}\n                  indeterminate={selectedCustomers.length > 0\n                  && selectedCustomers.length < customers?.length}\n                  onChange={onSelectAll}\n                />\n              </TableCell>\n              <TableCell />\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  padding={column.disablePadding ? 'none' : 'normal'}\n                >\n                  <TableSortLabel\n                    active={sortBy === column.id}\n                    direction={sortBy === column.id ? sort : 'asc'}\n                    disabled={isLoading}\n                    onClick={(event) => onSortChange(event, column.id)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers?.map((customer) => (\n              <TableRow\n                hover\n                key={customer.id}\n                selected={!!selectedCustomers.find((selectedCustomer) => selectedCustomer\n                  === customer.id)}\n              >\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={!!selectedCustomers.find((selectedCustomer) => selectedCustomer\n                      === customer.id)}\n                    onChange={(event) => onSelect(event, customer.id)}\n                  />\n                </TableCell>\n                <TableCell padding=\"none\">\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <IconButton\n                      onClick={() => handleIsFavoriteChange(customer.id,\n                        !customer.isFavorite)}\n                      size=\"small\"\n                    >\n                      <StarIcon\n                        sx={{\n                          color: customer.isFavorite\n                            ? 'rgb(255, 180, 0)'\n                            : 'action.disabled'\n                        }}\n                      />\n                    </IconButton>\n                  </Box>\n                </TableCell>\n                <TableCell padding=\"none\">\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <Avatar\n                      src={customer.avatar}\n                      sx={{\n                        height: 36,\n                        mr: 1,\n                        width: 36\n                      }}\n                      variant=\"rounded\"\n                    />\n                    <Link\n                      color=\"inherit\"\n                      component={RouterLink}\n                      to=\"/dashboard/customers/1\"\n                      underline=\"none\"\n                      variant=\"subtitle2\"\n                    >\n                      {customer.fullName}\n                    </Link>\n                  </Box>\n                </TableCell>\n                <TableCell>\n                  {customer.phone}\n                </TableCell>\n                <TableCell>\n                  {customer.email}\n                </TableCell>\n                <TableCell>\n                  {format(customer.createdAt, 'dd/MM/yyyy HH:mm')}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <CustomerMenu />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Scrollbar>\n      {displayLoading && (\n        <Box sx={{ p: 2 }}>\n          <Skeleton height={42} />\n          <Skeleton height={42} />\n          <Skeleton height={42} />\n        </Box>\n      )}\n      {displayError && (\n        <ResourceError\n          error={error}\n          sx={{\n            flexGrow: 1,\n            m: 2\n          }}\n        />\n      )}\n      {displayUnavailable && (\n        <ResourceUnavailable\n          sx={{\n            flexGrow: 1,\n            m: 2\n          }}\n        />\n      )}\n      <Divider sx={{ mt: 'auto' }} />\n      <Pagination\n        disabled={isLoading}\n        onPageChange={onPageChange}\n        page={page}\n        rowsCount={customersCount}\n      />\n    </Box>\n  );\n};\n\nCustomersTable.defaultProps = {\n  customers: [],\n  customersCount: 0,\n  page: 1,\n  selectedCustomers: [],\n  sort: 'desc',\n  sortBy: 'createdAt'\n};\n\nCustomersTable.propTypes = {\n  customers: Proptypes.array,\n  customersCount: Proptypes.number,\n  error: Proptypes.string,\n  isLoading: Proptypes.bool,\n  onPageChange: Proptypes.func,\n  onSelect: Proptypes.func,\n  onSelectAll: Proptypes.func,\n  onSortChange: Proptypes.func,\n  page: Proptypes.number,\n  selectedCustomers: Proptypes.array,\n  sort: Proptypes.oneOf(['asc', 'desc']),\n  sortBy: Proptypes.string\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Button, Card, Container, Divider, Typography } from '@material-ui/core';\nimport { customerApi } from '../api/customer';\nimport { CustomerDialog } from '../components/customer/customer-dialog';\nimport { CustomersFilter } from '../components/customer/customers-filter';\nimport { CustomersTable } from '../components/customer/customers-table';\nimport { useMounted } from '../hooks/use-mounted';\nimport { useSelection } from '../hooks/use-selection';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport gtm from '../lib/gtm';\n\nexport const Customers = () => {\n  const mounted = useMounted();\n  const [controller, setController] = useState({\n    filters: [],\n    page: 0,\n    query: '',\n    sort: 'desc',\n    sortBy: 'createdAt',\n    view: 'all'\n  });\n  const [customersState, setCustomersState] = useState({ isLoading: true });\n  const [\n    selectedCustomers,\n    handleSelect,\n    handleSelectAll\n  ] = useSelection(customersState.data?.customers);\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\n\n  const getCustomers = useCallback(async () => {\n    setCustomersState(() => ({ isLoading: true }));\n\n    try {\n      const result = await customerApi.getCustomers({\n        filters: controller.filters,\n        page: controller.page,\n        query: controller.query,\n        sort: controller.sort,\n        sortBy: controller.sortBy,\n        view: controller.view\n      });\n\n      if (mounted.current) {\n        setCustomersState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setCustomersState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, [controller]);\n\n  useEffect(() => {\n    getCustomers().catch(console.error);\n  }, [controller]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const handleViewChange = (newView) => {\n    setController({\n      ...controller,\n      page: 0,\n      view: newView\n    });\n  };\n\n  const handleQueryChange = (newQuery) => {\n    setController({\n      ...controller,\n      page: 0,\n      query: newQuery\n    });\n  };\n\n  const handleFiltersApply = (newFilters) => {\n    const parsedFilters = newFilters.map((filter) => ({\n      property: filter.property.name,\n      value: filter.value,\n      operator: filter.operator.value\n    }));\n\n    setController({\n      ...controller,\n      page: 0,\n      filters: parsedFilters\n    });\n  };\n\n  const handleFiltersClear = () => {\n    setController({\n      ...controller,\n      page: 0,\n      filters: []\n    });\n  };\n\n  const handlePageChange = (newPage) => {\n    setController({\n      ...controller,\n      page: newPage - 1\n    });\n  };\n\n  const handleSortChange = (event, property) => {\n    const isAsc = controller.sortBy === property && controller.sort === 'asc';\n\n    setController({\n      ...controller,\n      page: 0,\n      sort: isAsc ? 'desc' : 'asc',\n      sortBy: property\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Customer: List | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        <Container\n          maxWidth=\"lg\"\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n          }}\n        >\n          <Box sx={{ py: 4 }}>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex'\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h4\"\n              >\n                Customers\n              </Typography>\n              <Box sx={{ flexGrow: 1 }} />\n              <Button\n                color=\"primary\"\n                onClick={() => setOpenCreateDialog(true)}\n                size=\"large\"\n                startIcon={<PlusIcon fontSize=\"small\" />}\n                variant=\"contained\"\n              >\n                Add\n              </Button>\n            </Box>\n          </Box>\n          <Card\n            variant=\"outlined\"\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              flexGrow: 1\n            }}\n          >\n            <CustomersFilter\n              disabled={customersState.isLoading}\n              filters={controller.filters}\n              onFiltersApply={handleFiltersApply}\n              onFiltersClear={handleFiltersClear}\n              onQueryChange={handleQueryChange}\n              onViewChange={handleViewChange}\n              query={controller.query}\n              selectedCustomers={selectedCustomers}\n              view={controller.view}\n            />\n            <Divider />\n            <CustomersTable\n              customers={customersState.data?.customers}\n              customersCount={customersState.data?.customersCount}\n              error={customersState.error}\n              isLoading={customersState.isLoading}\n              onPageChange={handlePageChange}\n              onSelect={handleSelect}\n              onSelectAll={handleSelectAll}\n              onSortChange={handleSortChange}\n              page={controller.page + 1}\n              selectedCustomers={selectedCustomers}\n              sort={controller.sort}\n              sortBy={controller.sortBy}\n            />\n          </Card>\n        </Container>\n      </Box>\n      <CustomerDialog\n        onClose={() => setOpenCreateDialog(false)}\n        open={openCreateDialog}\n      />\n    </>\n  );\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Refresh = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n      fillRule=\"evenodd\"\n    />\n  </svg>, 'Refresh'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const QuestionMarkOutlined = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>, 'QuestionMarkOutlined'\n);\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\n\nconst ResourceErrorRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceError = (props) => {\n  const { error, onReload, ...other } = props;\n\n  return (\n    <ResourceErrorRoot {...other}>\n      <ExclamationIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        {error || 'Error loading data, please try again.'}\n      </Typography>\n      {onReload && (\n        <Button\n          color=\"primary\"\n          onClick={onReload}\n          startIcon={<RefreshIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"text\"\n        >\n          Reload Data\n        </Button>\n      )}\n    </ResourceErrorRoot>\n  );\n};\n\nResourceError.propTypes = {\n  error: PropTypes.string,\n  onReload: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\n\nconst ResourceUnavailableRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceUnavailable = (props) => {\n  const { onCreate, ...other } = props;\n\n  return (\n    <ResourceUnavailableRoot {...other}>\n      <QuestionMarkIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        There are not objects here yet.\n      </Typography>\n      {onCreate && (\n        <Button\n          color=\"primary\"\n          onClick={onCreate}\n          startIcon={<PlusIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"contained\"\n        >\n          Create Object\n        </Button>\n      )}\n    </ResourceUnavailableRoot>\n  );\n};\n\nResourceUnavailable.propTypes = {\n  onCreate: PropTypes.func\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const DotsVertical = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n  </svg>, 'DotsVertical'\n);\n","import PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\nimport { alpha } from '@material-ui/core/styles';\nimport DatePicker from '@material-ui/lab/DatePicker';\n\nexport const DateField = (props) => {\n  const {\n    error,\n    fullWidth,\n    helperText,\n    label,\n    onChange,\n    placeholder,\n    value,\n    name,\n    ...other\n  } = props;\n\n  return (\n    <DatePicker\n      onChange={onChange}\n      renderInput={({ InputProps, ...rest }) => (\n        <TextField\n          {...rest}\n          name={name}\n          error={error}\n          fullWidth={fullWidth}\n          helperText={helperText}\n          label={label}\n          placeholder={placeholder}\n          sx={{\n            '& .MuiFilledInput-root': {\n              backgroundColor: 'background.paper',\n              borderWidth: 1,\n              borderStyle: 'solid',\n              borderColor: 'neutral.300',\n              borderRadius: 1,\n              boxShadow: '0px 1px 2px 0px rgba(9, 30, 66, 0.08)',\n              px: 1.5,\n              py: 0.75,\n              transition: (theme) => theme.transitions.create([\n                'border-color',\n                'box-shadow'\n              ]),\n              '&:hover': {\n                backgroundColor: 'background.paper'\n              },\n              '&.Mui-focused': {\n                backgroundColor: 'background.paper',\n                boxShadow: (theme) => `${alpha(theme.palette.primary.main,\n                  0.25)} 0 0 0 0.2rem`\n              },\n              '& .MuiFilledInput-input': {\n                fontSize: 14,\n                height: 'unset',\n                lineHeight: 1.6,\n                p: 0\n              },\n              '&.Mui-disabled': {\n                backgroundColor: 'action.disabledBackground',\n                boxShadow: 'none',\n                borderColor: alpha('#D6DBE1', 0.5)\n              }\n            }\n          }}\n          variant=\"filled\"\n          InputProps={{\n            disableUnderline: true,\n            ...InputProps\n          }}\n          InputLabelProps={{\n            shrink: true,\n            sx: {\n              color: 'text.primary',\n              fontSize: 14,\n              fontWeight: 500,\n              mb: 0.5,\n              position: 'relative',\n              transform: 'none'\n            }\n          }}\n        />\n      )}\n      value={value}\n      {...other}\n    />\n  );\n};\n\nDateField.propTypes = {\n  error: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  helperText: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.instanceOf(Date)\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Adjustments = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Adjustments'\n);\n","export const equalOperator = {\n  label: 'equal',\n  typesAccepted: ['number', 'string'],\n  value: 'equal'\n};\n\nexport const notEqualOperator = {\n  label: 'not equal',\n  typesAccepted: ['number', 'string'],\n  value: 'notEqual'\n};\n\nexport const containsOperator = {\n  label: 'contains',\n  typesAccepted: ['string'],\n  value: 'contains'\n};\n\nexport const notContainsOperator = {\n  label: 'not contains',\n  typesAccepted: ['string'],\n  value: 'notContains'\n};\n\nexport const startsWithOperator = {\n  label: 'starts with',\n  typesAccepted: ['string'],\n  value: 'startsWith'\n};\n\nexport const endsWithOperator = {\n  label: 'ends with',\n  typesAccepted: ['string'],\n  value: 'endsWith'\n};\n\nexport const greaterThanOperator = {\n  label: 'greater than',\n  typesAccepted: ['number'],\n  value: 'greaterThan'\n};\n\nexport const lessThanOperator = {\n  label: 'less than',\n  typesAccepted: ['number'],\n  value: 'lessThan'\n};\n\nexport const isAfterOperator = {\n  label: 'is after',\n  typesAccepted: ['date'],\n  value: 'isAfter'\n};\n\nexport const isBeforeOperator = {\n  label: 'is before',\n  typesAccepted: ['date'],\n  value: 'isBefore'\n};\n\nexport const isBlankOperator = {\n  label: 'is blank',\n  typesAccepted: ['blank'],\n  value: 'isBlank'\n};\n\nexport const isPresentOperator = {\n  label: 'is present',\n  typesAccepted: ['blank'],\n  value: 'isPresent'\n};\n","import PropTypes from 'prop-types';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\nimport { usePopover } from '../hooks/use-popover';\nimport { ChevronDown as ChevronDownIcon } from '../icons/chevron-down';\n\nexport const BulkActionsMenu = (props) => {\n  const { disabled, onArchive, onDelete, selectedCount, ...other } = props;\n  const [anchorRef, open, handleOpen, handleClose] = usePopover();\n\n  const handleArchive = () => {\n    onArchive?.();\n    handleClose();\n  };\n\n  const handleDelete = () => {\n    onDelete?.();\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleOpen}\n        ref={anchorRef}\n        size=\"large\"\n        startIcon={<ChevronDownIcon />}\n        variant=\"outlined\"\n        {...other}\n      >\n        Bulk Actions\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n      >\n        <MenuItem onClick={handleArchive}>\n          {`Archive Selected (${selectedCount})`}\n        </MenuItem>\n        <MenuItem onClick={handleDelete}>\n          {`Delete Selected (${selectedCount})`}\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nBulkActionsMenu.propTypes = {\n  disabled: PropTypes.bool,\n  onArchive: PropTypes.func,\n  onDelete: PropTypes.func,\n  selectedCount: PropTypes.number\n};\n","import PropTypes from 'prop-types';\nimport { Box, IconButton, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { ChevronLeft as ChevronLeftIcon } from '../icons/chevron-left';\nimport { ChevronRight as ChevronRightIcon } from '../icons/chevron-right';\n\nconst PaginationRoot = styled('div')((({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  padding: theme.spacing(2)\n})));\n\nexport const Pagination = (props) => {\n  const { disabled, onPageChange, page, rowsCount, ...other } = props;\n  // NOTE: Usually, this should be received from the server\n  const pageSize = 10;\n  const pagesCount = Math.ceil(rowsCount / pageSize);\n  const isFirstPage = page === 1;\n  const isLastPage = page >= pagesCount;\n\n  const handlePreviousPage = () => {\n    onPageChange?.(page - 1);\n  };\n\n  const handleNextPage = () => {\n    onPageChange?.(page + 1);\n  };\n\n  return (\n    <PaginationRoot {...other}>\n      {pagesCount > 0 && (\n        <Typography\n          color=\"textSecondary\"\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n          variant=\"body2\"\n          whiteSpace=\"nowrap\"\n        >\n          Page\n          {' '}\n          <Typography\n            color=\"textPrimary\"\n            component=\"span\"\n            sx={{ mx: 1 }}\n            variant=\"subtitle2\"\n          >\n            {page}\n          </Typography>\n          of\n          {' '}\n          <Typography\n            color=\"textPrimary\"\n            component=\"span\"\n            sx={{ ml: 1 }}\n            variant=\"subtitle2\"\n          >\n            {pagesCount}\n          </Typography>\n        </Typography>\n      )}\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton\n        disabled={isFirstPage || disabled}\n        onClick={handlePreviousPage}\n      >\n        <ChevronLeftIcon />\n      </IconButton>\n      <IconButton\n        disabled={isLastPage || disabled}\n        onClick={handleNextPage}\n      >\n        <ChevronRightIcon />\n      </IconButton>\n    </PaginationRoot>\n  );\n};\n\nPagination.defaultProps = {\n  disabled: false,\n  page: 1,\n  rowsCount: 1\n};\n\nPagination.propTypes = {\n  disabled: PropTypes.bool,\n  onPageChange: PropTypes.func,\n  page: PropTypes.number,\n  rowsCount: PropTypes.number\n};\n","import { useState } from 'react';\n\nexport const useSelection = (rows) => {\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleSelect = (event, rowId) => {\n    setSelectedRows((prevSelectedRows) => {\n      if (event.target.checked) {\n        return [...prevSelectedRows, rowId];\n      }\n\n      return prevSelectedRows.filter((selectedRow) => selectedRow !== rowId);\n    });\n  };\n\n  const handleClearSelected = () => {\n    setSelectedRows([]);\n  };\n\n  const handleSelectAll = (event) => {\n    if (event.target.checked) {\n      setSelectedRows(rows.map((row) => row.id));\n      return;\n    }\n\n    handleClearSelected();\n  };\n\n  return [selectedRows, handleSelect, handleSelectAll];\n};\n","import { useState } from 'react';\n\nconst blankFilter = {\n  property: {\n    name: '',\n    type: ''\n  },\n  operator: {\n    value: '',\n    typesAccepted: []\n  },\n  value: ''\n};\n\nexport const useFilters = (properties, operators, initialFilters = []) => {\n  const [filters, setFilters] = useState(() => (initialFilters?.length\n    ? initialFilters\n    : [blankFilter]));\n\n  let shouldApplyFilters = true;\n\n  for (let i = 0; i < filters.length; i++) {\n    if (!filters[i].property.name\n      || !filters[i].operator.value\n      || (!filters[i].operator.typesAccepted.includes('blank')\n        && !filters[i].value)) {\n      shouldApplyFilters = false;\n      break;\n    }\n  }\n\n  const addFilter = (index) => {\n    if (!shouldApplyFilters) {\n      return;\n    }\n\n    const temp = [...filters];\n    temp.splice(index, 0, blankFilter);\n    setFilters(temp);\n  };\n\n  const clearFilters = () => {\n    setFilters([blankFilter]);\n  };\n\n  const removeFilter = (index) => {\n    if (filters.length === 1) {\n      clearFilters();\n      return;\n    }\n\n    setFilters((prevFilters) => prevFilters.filter((_, _index) => _index !== index));\n  };\n\n  const handlePropertyChange = (filterIndex, selectedPropertyName) => {\n    const temp = [...filters];\n    const selectedProperty = properties.find((property) => property.name === selectedPropertyName);\n\n    temp[filterIndex] = {\n      property: selectedProperty,\n      operator: {\n        value: '',\n        typesAccepted: []\n      },\n      value: ''\n    };\n\n    setFilters(temp);\n  };\n\n  const handleOperatorChange = (filterIndex, selectedOperatorValue) => {\n    const temp = [...filters];\n    const selectedOperator = operators.find((operator) => operator.value === selectedOperatorValue);\n\n    temp[filterIndex] = {\n      ...temp[filterIndex],\n      operator: selectedOperator\n    };\n\n    setFilters(temp);\n  };\n\n  const handleValueChange = (filterIndex, value) => {\n    const temp = [...filters];\n\n    temp[filterIndex] = {\n      ...temp[filterIndex],\n      value\n    };\n\n    setFilters(temp);\n  };\n\n  return {\n    addFilter,\n    clearFilters,\n    filters,\n    handlePropertyChange,\n    handleOperatorChange,\n    handleValueChange,\n    removeFilter,\n    shouldApplyFilters\n  };\n};\n","import PropTypes from 'prop-types';\nimport { Button, Grid, MenuItem, Typography } from '@material-ui/core';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { DateField } from './date-field';\nimport { InputField } from './input-field';\n\nexport const FilterDialogItem = (props) => {\n  const {\n    properties,\n    filter,\n    index,\n    onAddFilter,\n    onRemoveFilter,\n    onPropertyChange,\n    onOperatorChange,\n    onValueChange,\n    operators\n  } = props;\n\n  return (\n    <div>\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mb: 1 }}\n        variant=\"caption\"\n      >\n        Where\n      </Typography>\n      <Grid\n        container\n        spacing={2}\n        sx={{ pb: 1 }}\n      >\n        <Grid\n          item\n          xs={6}\n        >\n          <InputField\n            fullWidth\n            onChange={(event) => onPropertyChange(index, event.target.value)}\n            select\n            value={filter.property.name}\n          >\n            {properties.map((property) => (\n              <MenuItem\n                key={property.name}\n                value={property.name}\n              >\n                {property.label}\n              </MenuItem>\n            ))}\n          </InputField>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n        >\n          <InputField\n            fullWidth\n            value={filter.operator.value}\n            select\n            onChange={(event) => onOperatorChange(index, event.target.value)}\n          >\n            {operators\n              .filter((operator) => (operator.typesAccepted.includes(filter.property.type)\n                || operator.typesAccepted.includes('blank')))\n              .map((operator) => (\n                <MenuItem\n                  key={operator.value}\n                  value={operator.value}\n                >\n                  {operator.label}\n                </MenuItem>\n              ))}\n          </InputField>\n        </Grid>\n        {!filter.operator.typesAccepted.includes('blank')\n        && (filter.operator.typesAccepted.includes('date')\n          ? (\n            <Grid\n              item\n              xs={12}\n            >\n              <DateField\n                fullWidth\n                onChange={(date) => onValueChange(index, date)}\n                value={filter.value}\n              />\n            </Grid>\n          )\n          : (\n            <Grid\n              item\n              xs={12}\n            >\n              <InputField\n                fullWidth\n                onChange={(event) => onValueChange(index, event.target.value)}\n                value={filter.value}\n              />\n            </Grid>\n          ))}\n      </Grid>\n      <Button\n        color=\"primary\"\n        onClick={() => onAddFilter(index + 1)}\n        size=\"small\"\n        startIcon={<PlusIcon />}\n        sx={{ mr: 2 }}\n        variant=\"text\"\n      >\n        Add Filter\n      </Button>\n      <Button\n        onClick={() => onRemoveFilter(index)}\n        size=\"small\"\n        sx={{ color: 'text.secondary' }}\n        variant=\"text\"\n      >\n        Remove\n      </Button>\n    </div>\n  );\n};\n\nFilterDialogItem.propTypes = {\n  properties: PropTypes.array,\n  filter: PropTypes.object,\n  index: PropTypes.number,\n  onAddFilter: PropTypes.func,\n  onRemoveFilter: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onOperatorChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  operators: PropTypes.array\n};\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography\n} from '@material-ui/core';\nimport { useFilters } from '../hooks/use-filters';\nimport { X as XIcon } from '../icons/x';\nimport { FilterDialogItem } from './filter-dialog-item';\n\nexport const FilterDialog = (props) => {\n  const { open, onClose, operators, properties, onApply, onClear, ...other } = props;\n  const {\n    addFilter,\n    clearFilters,\n    filters,\n    handleOperatorChange,\n    handlePropertyChange,\n    handleValueChange,\n    removeFilter\n  } = useFilters(properties, operators);\n\n  const handleFiltersClear = () => {\n    clearFilters();\n    onClear?.();\n    onClose?.();\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          maxWidth: 500,\n          width: '100%'\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle\n        sx={{\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          display: 'flex'\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"inherit\"\n        >\n          Filter\n        </Typography>\n        <IconButton\n          onClick={onClose}\n          size=\"small\"\n        >\n          <XIcon\n            fontSize=\"small\"\n            sx={{ color: 'text.primary' }}\n          />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        {filters.map((filter, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={index}>\n            <FilterDialogItem\n              filter={filter}\n              index={index}\n              onAddFilter={addFilter}\n              onRemoveFilter={removeFilter}\n              onOperatorChange={handleOperatorChange}\n              onPropertyChange={handlePropertyChange}\n              onValueChange={handleValueChange}\n              operators={operators}\n              properties={properties}\n            />\n            {filters.length > index + 1 && (\n              <Divider\n                sx={{\n                  my: 2,\n                  '& .MuiDivider-wrapper': {\n                    p: 0\n                  }\n                }}\n                textAlign=\"left\"\n              >\n                <Chip\n                  color=\"primary\"\n                  label=\"AND\"\n                  size=\"small\"\n                />\n              </Divider>\n            )}\n          </Fragment>\n        ))}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"error\"\n          onClick={handleFiltersClear}\n          variant=\"text\"\n        >\n          Reset\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => {\n            onApply?.(filters);\n            onClose?.();\n          }}\n          variant=\"contained\"\n        >\n          Filter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nFilterDialog.defaultProps = {\n  open: false\n};\n\nFilterDialog.propTypes = {\n  onApply: PropTypes.func,\n  onClear: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  operators: PropTypes.array.isRequired,\n  properties: PropTypes.array.isRequired\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n","import { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputBase } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Search as SearchIcon } from '../icons/search';\n\nconst QueryRoot = styled('div')((({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: 'background.paper',\n  border: `1px solid ${theme.palette.divider}`,\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  height: 42,\n  width: '100%'\n})));\n\nexport const Query = (props) => {\n  const { disabled, onChange, value, ...other } = props;\n  const [autoFocus, setAutoFocus] = useState(false);\n  const inputRef = useRef(null);\n  const [tempValue, setTempValue] = useState('');\n\n  useEffect(() => {\n    setTempValue(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (!disabled && autoFocus && inputRef?.current) {\n      inputRef.current.focus();\n    }\n  }, [disabled]);\n\n  const handleChange = (event) => {\n    setTempValue(event.target.value);\n  };\n\n  const handleKeyup = (event) => {\n    if (event.keyCode === 13 && onChange) {\n      onChange(tempValue);\n    }\n  };\n\n  const handleFocus = () => {\n    setAutoFocus(true);\n  };\n\n  const handleBlur = (event) => {\n    /*\n     There is a situation where an input goes from not disabled to disabled and DOM emits a blur\n     event, with event as undefined. This means, that sometimes we'll receive an React Synthetic\n     event and sometimes undefined because when DOM triggers the event, React is unaware of it,\n     or it simply does not emit the event. To bypass this behaviour, we store a local variable\n     that acts as autofocus.\n     */\n\n    if (event) {\n      setAutoFocus(false);\n    }\n  };\n\n  return (\n    <QueryRoot {...other}>\n      <SearchIcon\n        sx={{\n          color: 'text.secondary',\n          ml: 2,\n          mr: 1\n        }}\n        fontSize=\"small\"\n      />\n      <InputBase\n        disabled={disabled}\n        inputProps={{\n          ref: inputRef,\n          sx: {\n            p: 0.75,\n            '&::placeholder': {\n              color: 'text.secondary',\n              opacity: 1\n            }\n          }\n        }}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onKeyUp={handleKeyup}\n        placeholder=\"Search...\"\n        sx={{ flex: 1 }}\n        value={tempValue}\n      />\n    </QueryRoot>\n  );\n};\n\nQuery.defaultProps = {\n  value: ''\n};\n\nQuery.propTypes = {\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  MenuItem\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nconst countryOptions = ['USA', 'Germany', 'Spain', 'Italy'];\n\nexport const CustomerDialog = (props) => {\n  const { customer, open, onClose, ...other } = props;\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      address: customer?.address || '',\n      email: customer?.email || '',\n      fullName: customer?.fullName || '',\n      country: customer?.country || '',\n      phone: customer?.phone || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      address: Yup.string().max(255),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Full name is required'),\n      country: Yup.string().oneOf(countryOptions),\n      phone: Yup.string().max(255)\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success(`Customer ${customer ? 'updated' : 'created'}`);\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      TransitionProps={{\n        onExited: () => formik.resetForm()\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        {customer ? 'Update Customer' : 'Create Customer'}\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.email && formik.errors.email)}\n              fullWidth\n              helperText={formik.touched.email && formik.errors.email}\n              label=\"Email address\"\n              name=\"email\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              required\n              type=\"email\"\n              value={formik.values.email}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n              fullWidth\n              helperText={formik.touched.fullName && formik.errors.fullName}\n              label=\"Full Name\"\n              name=\"fullName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              required\n              value={formik.values.fullName}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.phone && formik.errors.phone)}\n              fullWidth\n              helperText={formik.touched.phone && formik.errors.phone}\n              label=\"Phone number\"\n              name=\"phone\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.country && formik.errors.country)}\n              fullWidth\n              helperText={formik.touched.country && formik.errors.country}\n              label=\"Location\"\n              name=\"country\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              select\n              value={formik.values.country}\n            >\n              {countryOptions.map((option) => (\n                <MenuItem\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </InputField>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.address && formik.errors.address)}\n              fullWidth\n              helperText={formik.touched.address && formik.errors.address}\n              label=\"Full address\"\n              name=\"address\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.address}\n            />\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"outlined\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          disabled={formik.isSubmitting}\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          {customer ? 'Update' : 'Create'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nCustomerDialog.defaultProps = {\n  open: false\n};\n\nCustomerDialog.propTypes = {\n  customer: PropTypes.object,\n  open: PropTypes.bool,\n  onClose: PropTypes.func\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Star = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n  </svg>, 'Star'\n);\n"],"sourceRoot":""}