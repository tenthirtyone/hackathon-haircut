{"version":3,"sources":["containers/account-notifications.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/FormControlLabel/formControlLabelClasses.js","../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js"],"names":["notifications","id","name","label","AccountNotifications","formik","useFormik","initialValues","newCompanySignups","newOrders","publishErrors","unsubscribeAll","validationSchema","Yup","shape","onSubmit","useEffect","gtm","push","event","variant","subheader","title","map","notification","index","primary","checked","values","color","onChange","handleChange","length","sx","alignItems","display","flexDirection","sm","xs","pt","mb","flexGrow","control","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","overridesResolver","props","styles","_extends","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","children","_jsxs","clsx","as","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","capitalize","labelPlacement","theme","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","disabled","palette","text","FormControlLabel","componentsProps","disabledProp","muiFormControl","useFormControl","controlProps","forEach","key","slots","typography"],"mappings":"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","file":"static/js/43.bb2d7bd1.chunk.js","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n  Typography\n} from '@material-ui/core';\nimport gtm from '../lib/gtm';\n\nconst notifications = [\n  {\n    id: '1',\n    name: 'newOrders',\n    label: 'New Orders'\n  },\n  {\n    id: '2',\n    name: 'newCompanySignups',\n    label: 'New Company Signups'\n  },\n  {\n    id: '3',\n    name: 'publishErrors',\n    label: 'Publish Errors'\n  }\n];\n\nexport const AccountNotifications = () => {\n  const formik = useFormik({\n    initialValues: {\n      newCompanySignups: true,\n      newOrders: false,\n      publishErrors: false,\n      unsubscribeAll: false\n    },\n    validationSchema: Yup.object().shape({\n      newCompanySignups: Yup.boolean(),\n      newOrders: Yup.boolean(),\n      publishErrors: Yup.boolean(),\n      unsubscribeAll: Yup.boolean()\n    }),\n    onSubmit: () => { }\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Account: Notifications | Carpatin Dashboard</title>\n      </Helmet>\n      <Card variant=\"outlined\">\n        <CardHeader\n          subheader=\"Manage your alert notifications\"\n          title=\"Email Notifications\"\n        />\n        <Divider />\n        <List>\n          {notifications.map((notification, index) => (\n            <Fragment key={notification.id}>\n              <ListItem key={notification.id}>\n                <ListItemText primary={notification.label} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    checked={formik.values[notification.name]}\n                    color=\"primary\"\n                    name={notification.name}\n                    onChange={formik.handleChange}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n              {notifications.length > index + 1 && <Divider />}\n            </Fragment>\n          ))}\n        </List>\n      </Card>\n      <Box\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: {\n            sm: 'row',\n            xs: 'column'\n          },\n          pt: 3\n        }}\n      >\n        <Box>\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1 }}\n            variant=\"h6\"\n          >\n            Unsubscribe Notifications\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            Keep in mind that security notifications cannot be turned off\n          </Typography>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <FormControlLabel\n          control={(\n            <Switch\n              checked={formik.values.unsubscribeAll}\n              color=\"primary\"\n              name=\"unsubscribeAll\"\n              onChange={formik.handleChange}\n            />\n          )}\n          label=\"Unsubscribe\"\n        />\n      </Box>\n    </>\n  );\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClasses, generateUtilityClass } from '@material-ui/unstyled';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(styleProps.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, styleProps.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, styleProps.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, styleProps.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const styleProps = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"sourceRoot":""}