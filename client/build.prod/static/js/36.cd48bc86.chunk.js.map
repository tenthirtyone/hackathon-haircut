{"version":3,"sources":["components/images-uploader-dialog.js","components/images-uploader.js","containers/components-image-uploader.js","icons/trash.js","icons/upload.js","components/image-dropzone.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/Checkbox/checkboxClasses.js","../node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["ImagesUploaderDialog","props","onCancel","onSaveImages","open","selectedImagesProp","selectedImages","other","useState","images","setImages","setSelectedImages","useEffect","Dialog","onClose","PaperProps","sx","width","DialogTitle","DialogContent","Typography","color","mb","variant","Box","display","gap","gridTemplateColumns","length","md","sm","xs","borderRadius","maxWidth","onDrop","newFiles","prevImages","URL","createObjectURL","height","accept","map","image","isSelected","includes","alignItems","justifyContent","boxShadow","theme","palette","primary","main","position","backgroundColor","bottom","content","left","right","top","alt","src","style","Checkbox","checked","onClick","prevSelectedImages","filter","selectedImage","handleSelectImage","IconButton","_image","handleDeleteImage","DialogActions","Button","defaultProps","ImagesUploader","useDialog","uploadDialogOpen","handleOpenUploadDialog","handleCloseUploadDialog","Card","CardContent","borderColor","borderStyle","borderWidth","cursor","flexDirection","flexWrap","minHeight","outline","py","Avatar","align","newSelectedImage","ComponentsImageUploader","gtm","push","event","flexGrow","Container","Trash","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Upload","ImageDropzone","maxFiles","maxSize","minSize","useDropzone","getRootProps","getInputProps","isDragActive","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","styleProps","root","indeterminate","capitalize","_extends","text","secondary","disableRipple","alpha","action","active","hoverOpacity","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","undefined"],"mappings":"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","file":"static/js/36.cd48bc86.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography\n} from '@material-ui/core';\nimport { Trash as TrashIcon } from '../icons/trash';\nimport { ImageDropzone } from './image-dropzone';\n\nexport const ImagesUploaderDialog = (props) => {\n  const { onCancel, onSaveImages, open, selectedImages: selectedImagesProp, ...other } = props;\n  const [images, setImages] = useState([\n    '/static/product-07.png',\n    '/static/product-08.png',\n    '/static/product-09.png',\n    '/static/product-10.png'\n  ]);\n  const [selectedImages, setSelectedImages] = useState(selectedImagesProp);\n\n  const handleDeleteImage = (image) => {\n    setImages((prevImages) => prevImages\n      .filter((_image) => _image !== image));\n  };\n\n  const handleSelectImage = (image) => {\n    if (selectedImages.includes(image)) {\n      setSelectedImages((prevSelectedImages) => prevSelectedImages\n        .filter((selectedImage) => selectedImage !== image));\n      return;\n    }\n    setSelectedImages((prevSelectedImages) => [...prevSelectedImages, image]);\n  };\n\n  const handleDrop = (newFiles) => {\n    setImages((prevImages) => [...prevImages, URL.createObjectURL(newFiles[0])]);\n  };\n\n  useEffect(() => {\n    setSelectedImages(selectedImagesProp);\n  }, [selectedImagesProp]);\n\n  return (\n    <Dialog\n      onClose={onCancel}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        Select image\n      </DialogTitle>\n      <DialogContent>\n        <Typography\n          color=\"textSecondary\"\n          sx={{ mb: 3 }}\n          variant=\"body2\"\n        >\n          You can only choose images as variant media\n        </Typography>\n        <Box\n          sx={{\n            display: 'grid',\n            gap: 2,\n            gridTemplateColumns: !selectedImages.length ? '1fr' : ({\n              md: 'repeat(4, 1fr)',\n              sm: 'repeat(3, 1fr)',\n              xs: 'repeat(2, 1fr)'\n            }),\n            '& img': {\n              borderRadius: 1,\n              maxWidth: '100%'\n            }\n          }}\n        >\n          <ImageDropzone\n            onDrop={handleDrop}\n            sx={{ height: '100%' }}\n            accept=\"image/jpeg, image/png\"\n          />\n          {images.map((image) => {\n            const isSelected = selectedImages.includes(image);\n\n            return (\n              <Box\n                key={image}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Box\n                  sx={{\n                    borderRadius: 1,\n                    boxShadow: (theme) => isSelected\n                      && `0px 0px 0px 2px ${theme.palette.primary.main}`,\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    position: 'relative',\n                    width: '100%',\n                    height: '100%',\n                    '&::before': {\n                      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                      borderRadius: 1,\n                      bottom: 0,\n                      content: '\"\"',\n                      display: isSelected ? 'block' : 'none',\n                      left: 0,\n                      position: 'absolute',\n                      right: 0,\n                      top: 0\n                    },\n                    '&:hover': {\n                      boxShadow: (theme) => (!isSelected\n                        ? `0px 0px 0px 1px ${theme.palette.primary.main}`\n                        : `0px 0px 0px 2px ${theme.palette.primary.main}`),\n                      '&::before': {\n                        display: 'block'\n                      },\n                      '& span, button': {\n                        display: 'inline-flex'\n                      }\n                    }\n                  }}\n                >\n                  <img\n                    alt=\"\"\n                    src={image}\n                    style={{ maxWidth: '100%' }}\n                  />\n                  <Checkbox\n                    checked={isSelected}\n                    onClick={() => handleSelectImage(image)}\n                    sx={{\n                      display: 'none',\n                      left: 8,\n                      position: 'absolute',\n                      top: 8\n                    }}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    onClick={() => handleDeleteImage(image)}\n                    sx={{\n                      bottom: 8,\n                      color: 'text.secondary',\n                      display: 'none',\n                      position: 'absolute',\n                      right: 8\n                    }}\n                  >\n                    <TrashIcon />\n                  </IconButton>\n                </Box>\n              </Box>\n            );\n          })}\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onCancel}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => onSaveImages(selectedImages)}\n          variant=\"contained\"\n        >\n          Add selected\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nImagesUploaderDialog.defaultProps = {\n  open: false\n};\n\nImagesUploaderDialog.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onSaveImages: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  selectedImages: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n","import { useState } from 'react';\nimport { Avatar, Box, Button, Card, CardContent, IconButton, Typography } from '@material-ui/core';\nimport { useDialog } from '../hooks/use-dialog';\nimport { ImagesUploaderDialog } from './images-uploader-dialog';\nimport { Upload as UploadIcon } from '../icons/upload';\nimport { Trash as TrashIcon } from '../icons/trash';\n\nexport const ImagesUploader = () => {\n  const [uploadDialogOpen, handleOpenUploadDialog, handleCloseUploadDialog] = useDialog();\n  const [selectedImages, setSelectedImages] = useState([\n    '/static/product-09.png',\n    '/static/product-10.png'\n  ]);\n\n  const handleDeleteImage = (image) => {\n    setSelectedImages((prevSelectedImages) => prevSelectedImages\n      .filter((selectedImage) => selectedImage !== image));\n  };\n\n  const handleSaveImages = (newSelectedImage) => {\n    setSelectedImages(newSelectedImage);\n    handleCloseUploadDialog();\n  };\n\n  return (\n    <>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 1.25 }}\n            variant=\"subtitle2\"\n          >\n            Image\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 2,\n              gridTemplateColumns: !selectedImages.length ? '1fr' : ({\n                md: 'repeat(auto-fill, 140px)',\n                sm: 'repeat(4, 1fr)',\n                xs: 'repeat(2, 1fr)'\n              }),\n              '& img': {\n                borderRadius: 1,\n                maxWidth: '100%'\n              }\n            }}\n          >\n            <Box\n              onClick={handleOpenUploadDialog}\n              sx={{\n                alignItems: 'center',\n                borderColor: 'neutral.200',\n                borderRadius: 1,\n                borderStyle: 'dashed',\n                borderWidth: 1,\n                cursor: 'pointer',\n                display: 'flex',\n                flexDirection: 'column',\n                flexWrap: 'wrap',\n                height: '100%',\n                minHeight: 140,\n                justifyContent: 'center',\n                outline: 'none',\n                py: 2,\n                '&:hover': {\n                  backgroundColor: 'action.hover',\n                  borderColor: 'primary.main'\n                }\n              }}\n            >\n              <Avatar\n                sx={{\n                  backgroundColor: 'rgba(238, 240, 242, 1)',\n                  color: 'text.secondary',\n                  height: 36,\n                  width: 36\n                }}\n              >\n                <UploadIcon />\n              </Avatar>\n              <Button\n                color=\"primary\"\n                variant=\"text\"\n              >\n                Upload\n              </Button>\n              <Typography\n                align=\"center\"\n                sx={{ color: 'text.secondary' }}\n                variant=\"caption\"\n              >\n                Select images\n              </Typography>\n            </Box>\n            {selectedImages.map((image) => (\n              <Box\n                key={image}\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    borderRadius: 1,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    position: 'relative',\n                    '&::before': {\n                      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                      borderRadius: 1,\n                      bottom: 0,\n                      content: '\"\"',\n                      display: 'none',\n                      left: 0,\n                      position: 'absolute',\n                      right: 0,\n                      top: 0\n                    },\n                    '&:hover': {\n                      boxShadow: (theme) => `0px 0px 0px 1px ${theme.palette.primary.main}`,\n                      '&::before': {\n                        display: 'block'\n                      },\n                      '& button': {\n                        display: 'inline-flex'\n                      }\n                    }\n                  }}\n                >\n                  <img\n                    alt=\"\"\n                    src={image}\n                  />\n                  <IconButton\n                    color=\"primary\"\n                    onClick={() => handleDeleteImage(image)}\n                    sx={{\n                      bottom: 8,\n                      color: 'text.secondary',\n                      display: 'none',\n                      position: 'absolute',\n                      right: 8\n                    }}\n                  >\n                    <TrashIcon />\n                  </IconButton>\n                </Box>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n      <ImagesUploaderDialog\n        onCancel={handleCloseUploadDialog}\n        onSaveImages={handleSaveImages}\n        open={uploadDialogOpen}\n        selectedImages={selectedImages}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Typography } from '@material-ui/core';\nimport { ImagesUploader } from '../components/images-uploader';\nimport gtm from '../lib/gtm';\n\nexport const ComponentsImageUploader = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Components: Image Uploader| Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 6 }}\n            variant=\"h4\"\n          >\n            Image Uploader\n          </Typography>\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mb: 2 }}\n              variant=\"body1\"\n            >\n              Multiple image selector. Click the Browse button below.\n            </Typography>\n            <ImagesUploader />\n          </div>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n","import PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { Avatar, Box, Button, Typography } from '@material-ui/core';\nimport { Upload as UploadIcon } from '../icons/upload';\n\nexport const ImageDropzone = (props) => {\n  const { accept, maxFiles, maxSize, minSize, onDrop, sx } = props;\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        borderColor: 'neutral.200',\n        borderRadius: 1,\n        borderStyle: 'dashed',\n        borderWidth: 1,\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        outline: 'none',\n        width: '100%',\n        py: 2,\n        ...(isDragActive && {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        }),\n        '&:hover': {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        },\n        ...sx\n      }}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <Avatar\n        sx={{\n          backgroundColor: 'rgba(238, 240, 242, 1)',\n          color: 'text.secondary',\n          height: 36,\n          width: 36\n        }}\n      >\n        <UploadIcon />\n      </Avatar>\n      <Button\n        color=\"primary\"\n        variant=\"text\"\n      >\n        Upload\n      </Button>\n      <Typography\n        align=\"center\"\n        sx={{ color: 'text.secondary' }}\n        variant=\"caption\"\n      >\n        Select images\n      </Typography>\n    </Box>\n  );\n};\n\nImageDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  onDrop: PropTypes.func,\n  sx: PropTypes.object\n};\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styleProps.indeterminate && styles.indeterminate, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary,\n  '&:hover': _extends({}, !styleProps.disableRipple && {\n    backgroundColor: alpha(styleProps.color === 'default' ? theme.palette.action.active : theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n  }, {\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  })\n}, styleProps.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[styleProps.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const styleProps = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size !== 'medium' ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size !== 'medium' ? size : indeterminateIcon.props.fontSize\n    }),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"sourceRoot":""}