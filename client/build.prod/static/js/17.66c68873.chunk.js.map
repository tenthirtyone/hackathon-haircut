{"version":3,"sources":["components/product/product-info.js","components/product/product-info-dialog.js","components/product/product-status.js","components/product/product-variant-dialog.js","components/product/product-variants.js","containers/product-summary.js","icons/plus.js","icons/refresh.js","icons/question-mark-outlined.js","components/resource-error.js","components/resource-unavailable.js","components/property-list-item.js","components/property-list.js","icons/trash.js","icons/eye.js","components/action-list.js","components/action-list-item.js","icons/duplicate.js","icons/upload.js","components/status-select.js","components/autocomplete-field.js","components/image-dropzone.js","icons/dots-horizontal.js","components/resource-loading.js"],"names":["ProductInfo","props","onEdit","product","other","align","useMediaQuery","theme","breakpoints","down","Card","variant","CardHeader","action","Button","color","onClick","title","Divider","label","value","brand","id","name","format","createdAt","composition","join","tags","updatedAt","compositionOptions","tagOptions","ProductInfoDialog","open","onClose","formik","useFormik","initialValues","chargeTax","description","displayName","sku","submit","validationSchema","Yup","shape","max","required","onSubmit","values","helpers","a","toast","success","setStatus","setSubmitting","err","console","error","setErrors","message","Dialog","PaperProps","sx","width","TransitionProps","onExited","resetForm","DialogTitle","DialogContent","Grid","container","spacing","item","md","xs","disabled","Boolean","touched","errors","fullWidth","helperText","onBlur","handleBlur","onChange","handleChange","multiline","rows","filterSelectedOptions","multiple","event","setFieldValue","options","placeholder","alignItems","display","Checkbox","checked","target","Typography","FormHelperText","DialogActions","handleSubmit","defaultProps","statusOptions","ProductStatus","useDialog","duplicateDialogOpen","handleOpenDuplicateDialog","handleCloseDuplicateDialog","useState","status","CardContent","mt","icon","EyeIcon","DuplicateIcon","onCancel","onConfirm","currencyOptions","ProductVariantDialog","onVariantsChange","mode","enableReinitialize","currency","image","price","oneOf","map","option","select","minWidth","MenuItem","type","maxWidth","InputProps","startAdornment","InputAdornment","position","find","mb","Box","borderRadius","boxShadow","palette","primary","main","opacity","alt","src","IconButton","left","top","fontSize","onDrop","files","URL","createObjectURL","minHeight","ProductVariants","variantsProp","variants","variantDialogOpen","handleOpenVariantDialog","handleCloseVariantDialog","deleteDialogOpen","handleOpenDeleteDialog","handleCloseDeleteDialog","setVariants","selectedVariant","setSelectedVariant","useEffect","displayUnavailable","length","Table","TableHead","TableRow","TableCell","TableBody","Avatar","border","divider","height","mr","cursor","flexItem","orientation","mx","onCreate","m","temp","generateResourceId","Date","findIndex","_variant","prevVariants","filter","ProductSummary","mounted","useMounted","isLoading","productState","setProductState","openInfoDialog","setOpenInfoDialog","getProduct","useCallback","productApi","result","current","data","catch","gtm","push","backgroundColor","flexGrow","lg","order","renderContent","Plus","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Refresh","QuestionMarkOutlined","className","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ResourceErrorRoot","styled","neutral","flexDirection","justifyContent","padding","ResourceError","onReload","startIcon","ResourceUnavailableRoot","ResourceUnavailable","PropertyListItem","children","component","disableGutters","px","py","disableTypography","secondary","flex","my","PropertyList","disablePadding","Trash","Eye","ActionList","dense","ActionListItem","Icon","Duplicate","Upload","StatusSelect","AutocompleteField","renderInput","rest","borderWidth","borderStyle","borderColor","p","transition","transitions","create","alpha","lineHeight","disableUnderline","InputLabelProps","shrink","fontWeight","transform","ChipProps","ImageDropzone","accept","maxFiles","maxSize","minSize","useDropzone","getRootProps","getInputProps","isDragActive","flexWrap","outline","DotsHorizontal","ResourceLoadingRoot","ResourceLoading"],"mappings":"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","file":"static/js/17.66c68873.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Button, Card, CardHeader, Divider, useMediaQuery } from '@material-ui/core';\nimport { PropertyList } from '../property-list';\nimport { PropertyListItem } from '../property-list-item';\n\nexport const ProductInfo = (props) => {\n  const { onEdit, product, ...other } = props;\n  const mdDown = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  const align = mdDown ? 'vertical' : 'horizontal';\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <Button\n            color=\"primary\"\n            onClick={onEdit}\n            variant=\"text\"\n          >\n            Edit\n          </Button>\n        )}\n        title=\"General Information\"\n      />\n      <Divider />\n      <PropertyList>\n        <PropertyListItem\n          align={align}\n          label=\"Brand Name\"\n          value={product.brand}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"ID\"\n          value={product.id}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Display Name\"\n          value={product.name}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Description\"\n          value=\"Our premium line of watches with a minimalist and timeless look. Designed in the UK and perfect for everyday use. This is our black on black leather. The stainless steel case has a brushed matt black finish with a subtle reflective dial. The hands and numbers are in a shiny gun metal finish.\"\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Created\"\n          value={format(product.createdAt, 'MMM dd, yyyy')}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Composition\"\n          value={product.composition.join(', ')}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Tags\"\n          value={product.tags.join(', ')}\n        />\n        <PropertyListItem\n          align={align}\n          label=\"Updated\"\n          value={format(product.updatedAt, 'MMM dd, yyyy')}\n        />\n      </PropertyList>\n    </Card>\n  );\n};\n\nProductInfo.propTypes = {\n  onEdit: PropTypes.func,\n  product: PropTypes.object.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { AutocompleteField } from '../autocomplete-field';\nimport { InputField } from '../input-field';\n\nconst compositionOptions = ['Leather', 'Metal'];\nconst tagOptions = ['Watch', 'Style'];\n\nexport const ProductInfoDialog = (props) => {\n  const { open, onClose, product } = props;\n  const formik = useFormik({\n    initialValues: {\n      brand: product?.brand || '',\n      chargeTax: product?.chargeTax || true,\n      description: product?.description || '',\n      displayName: product?.displayName || '',\n      composition: product?.composition || [],\n      sku: product?.sku || '',\n      submit: null,\n      tags: product?.tags || []\n    },\n    validationSchema: Yup.object().shape({\n      brand: Yup.string().max(255).required('Brand is required'),\n      chargeTax: Yup.boolean(),\n      description: Yup.string().max(500).required('Description is required'),\n      displayName: Yup.string().max(255).required('Display name is required'),\n      composition: Yup.array(),\n      sku: Yup.string().max(255).required('SKU is required'),\n      tags: Yup.array()\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Product updated');\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n        onClose?.();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      TransitionProps={{\n        onExited: () => formik.resetForm()\n      }}\n    >\n      <DialogTitle>\n        Edit Product\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <InputField\n              disabled\n              error={Boolean(formik.touched.brand && formik.errors.brand)}\n              fullWidth\n              helperText={formik.touched.brand && formik.errors.brand}\n              label=\"Brand name\"\n              name=\"brand\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.brand}\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <InputField\n              disabled\n              error={Boolean(formik.touched.sku && formik.errors.sku)}\n              fullWidth\n              helperText={formik.touched.sku && formik.errors.sku}\n              label=\"SKU\"\n              name=\"sku\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.sku}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.displayName && formik.errors.displayName)}\n              fullWidth\n              helperText={formik.touched.displayName && formik.errors.displayName}\n              label=\"Display name\"\n              name=\"displayName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.displayName}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.description && formik.errors.description)}\n              fullWidth\n              helperText={formik.touched.description && formik.errors.description}\n              label=\"Description\"\n              multiline\n              name=\"description\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              rows={4}\n              value={formik.values.description}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <AutocompleteField\n              error={Boolean(formik.touched.composition\n                && formik.errors.composition)}\n              filterSelectedOptions\n              helperText={formik.touched.composition && formik.errors.composition}\n              label=\"Composition\"\n              multiple\n              onChange={(event, value) => {\n                formik.setFieldValue('composition',\n                  value);\n              }}\n              options={compositionOptions}\n              placeholder=\"Feature\"\n              value={formik.values.composition}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <AutocompleteField\n              error={Boolean(formik.touched.tags && formik.errors.tags)}\n              filterSelectedOptions\n              helperText={formik.touched.tags && formik.errors.tags}\n              label=\"Tags\"\n              multiple\n              onChange={(event, value) => { formik.setFieldValue('tags', value); }}\n              options={tagOptions}\n              placeholder=\"Tag\"\n              value={formik.values.tags}\n            />\n          </Grid>\n          <Grid\n            item\n            md={6}\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n            xs={12}\n          >\n            <Checkbox\n              checked={formik.values.chargeTax}\n              onChange={(event) => {\n                formik.setFieldValue('chargeTax',\n                  event.target.checked);\n              }}\n            />\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              Charge tax on this product\n            </Typography>\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          Save Changes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nProductInfoDialog.defaultProps = {\n  open: false\n};\n\nProductInfoDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  product: PropTypes.object\n};\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardContent, CardHeader, Divider } from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { Duplicate as DuplicateIcon } from '../../icons/duplicate';\nimport { Eye as EyeIcon } from '../../icons/eye';\nimport { ActionList } from '../action-list';\nimport { ActionListItem } from '../action-list-item';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { StatusSelect } from '../status-select';\n\nconst statusOptions = [\n  {\n    color: 'info.main',\n    label: 'Draft',\n    value: 'draft'\n  },\n  {\n    color: 'success.main',\n    label: 'Published',\n    value: 'published'\n  }\n];\n\nexport const ProductStatus = (props) => {\n  const { product, ...other } = props;\n  const [duplicateDialogOpen, handleOpenDuplicateDialog, handleCloseDuplicateDialog] = useDialog();\n  const [status, setStatus] = useState(product.status);\n\n  const handleStatusChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleSaveChanges = () => {\n    toast.success('Changes saved');\n  };\n\n  const handlePreview = () => {\n    toast.error('This action is not available on demo');\n  };\n\n  const handleDuplicate = () => {\n    handleCloseDuplicateDialog();\n    toast.error('This action is not available on demo');\n  };\n\n  return (\n    <>\n      <Card\n        variant=\"outlined\"\n        {...other}\n      >\n        <CardHeader\n          title=\"Product Status\"\n          variant=\"outlined\"\n        />\n        <Divider />\n        <CardContent>\n          <StatusSelect\n            onChange={handleStatusChange}\n            options={statusOptions}\n            value={status}\n          />\n          <Button\n            color=\"primary\"\n            onClick={handleSaveChanges}\n            sx={{ mt: 2 }}\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardContent>\n        <Divider />\n        <ActionList>\n          <ActionListItem\n            icon={EyeIcon}\n            label=\"Preview\"\n            onClick={handlePreview}\n          />\n          <ActionListItem\n            icon={DuplicateIcon}\n            label=\"Duplicate\"\n            onClick={handleOpenDuplicateDialog}\n          />\n        </ActionList>\n      </Card>\n      <ConfirmationDialog\n        message=\"Are you sure you want to duplicate this product? This can't be undone.\"\n        onCancel={handleCloseDuplicateDialog}\n        onConfirm={handleDuplicate}\n        open={duplicateDialogOpen}\n        title=\"Duplicate Product\"\n        variant=\"warning\"\n      />\n    </>\n  );\n};\n\nProductStatus.propTypes = {\n  product: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { Trash as TrashIcon } from '../../icons/trash';\nimport { InputField } from '../input-field';\nimport { ImageDropzone } from '../image-dropzone';\n\nconst currencyOptions = [\n  {\n    label: 'EUR',\n    value: 'eur'\n  },\n  {\n    label: 'USD',\n    value: 'usd'\n  }\n];\n\nexport const ProductVariantDialog = (props) => {\n  const { open, onClose, onExited, onVariantsChange, variant, ...other } = props;\n  const mode = variant ? 'update' : 'add';\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      currency: variant?.currency || 'eur',\n      description: variant?.description || '',\n      image: variant?.image || '',\n      name: variant?.name || '',\n      price: variant?.price || 0,\n      sku: variant?.sku || '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      currency: Yup\n        .string()\n        .oneOf(currencyOptions.map((option) => option.value))\n        .required('Currency is required'),\n      description: Yup.string().max(1024).required('Description name is required'),\n      image: Yup.string(),\n      name: Yup.string().max(255).required('Variant name is required'),\n      price: Yup.number().required('Price is required'),\n      sku: Yup.string().max(255).required('Sku is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success(mode === 'update' ? 'Variant updated' : 'Variant saved');\n        onVariantsChange?.({ ...variant, ...values }, mode);\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n        onClose?.();\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        sx: {\n          width: '100%'\n        }\n      }}\n      TransitionProps={{\n        onExited: () => {\n          onExited?.();\n          formik.resetForm();\n        }\n      }}\n      {...other}\n    >\n      <DialogTitle>\n        {mode === 'update' ? 'Update Variant' : 'Add Variant'}\n      </DialogTitle>\n      <DialogContent>\n        <Grid\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.name && formik.errors.name)}\n              fullWidth\n              helperText={formik.touched.name && formik.errors.name}\n              label=\"Name\"\n              name=\"name\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"e.g Green\"\n              value={formik.values.name}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.sku && formik.errors.sku)}\n              fullWidth\n              helperText={formik.touched.sku && formik.errors.sku}\n              label=\"SKU\"\n              name=\"sku\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"D-293TX\"\n              value={formik.values.sku}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.description && formik.errors.description)}\n              fullWidth\n              helperText={formik.touched.description && formik.errors.description}\n              label=\"Description\"\n              multiline\n              name=\"description\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              placeholder=\"Product description\"\n              rows={4}\n              value={formik.values.description}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.currency && formik.errors.currency)}\n              helperText={formik.touched.currency && formik.errors.currency}\n              label=\"Currency\"\n              name=\"currency\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              select\n              sx={{ minWidth: 236 }}\n              value={formik.values.currency}\n            >\n              {currencyOptions.map((option) => (\n                <MenuItem\n                  key={option.value}\n                  value={option.value}\n                >\n                  {option.label}\n                </MenuItem>\n              ))}\n            </InputField>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <InputField\n              error={Boolean(formik.touched.price && formik.errors.price)}\n              helperText={formik.touched.price && formik.errors.price}\n              label=\"Price\"\n              name=\"price\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              type=\"number\"\n              sx={{ maxWidth: 236 }}\n              value={formik.values.price}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    {currencyOptions\n                      .find((option) => option.value === formik.values.currency).label}\n                  </InputAdornment>\n                )\n              }}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              sx={{ mb: 1.25 }}\n              variant=\"subtitle2\"\n            >\n              Image\n            </Typography>\n            {formik.values.image\n              ? (\n                <Box\n                  sx={{\n                    borderRadius: 1,\n                    boxShadow: '0 0 0 1px rgba(24, 33, 77, 0.23)',\n                    display: 'flex',\n                    position: 'relative',\n                    width: 'fit-content',\n                    '& img': {\n                      borderRadius: 1,\n                      display: 'block',\n                      maxWidth: 126\n                    },\n                    '&:hover': {\n                      boxShadow: (theme) => `0 0 0 1px ${theme.palette.primary.main}`,\n                      '& > button': {\n                        display: 'block'\n                      },\n                      '& img': {\n                        opacity: 0.3\n                      }\n                    }\n                  }}\n                >\n                  <img\n                    alt={formik.values.name}\n                    src={formik.values.image}\n                  />\n                  <IconButton\n                    color=\"error\"\n                    onClick={() => formik.setFieldValue('image', '')}\n                    sx={{\n                      display: 'none',\n                      left: 0,\n                      position: 'absolute',\n                      top: 0\n                    }}\n                  >\n                    <TrashIcon fontSize=\"small\" />\n                  </IconButton>\n                </Box>\n              ) : (\n                <ImageDropzone\n                  onDrop={(files) => formik.setFieldValue('image', URL.createObjectURL(files[0]))}\n                  sx={{\n                    minHeight: 126,\n                    maxWidth: 126\n                  }}\n                />\n              )}\n          </Grid>\n          {formik.errors.submit && (\n            <Grid\n              item\n              xs={12}\n            >\n              <FormHelperText error>\n                {formik.errors.submit}\n              </FormHelperText>\n            </Grid>\n          )}\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onClose}\n          variant=\"text\"\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => { formik.handleSubmit(); }}\n          variant=\"contained\"\n        >\n          {mode === 'update' ? 'Update Variant' : 'Add Variant'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nProductVariantDialog.defaultProps = {\n  open: false\n};\n\nProductVariantDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onExited: PropTypes.func,\n  onVariantsChange: PropTypes.func,\n  variant: PropTypes.object\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { useDialog } from '../../hooks/use-dialog';\nimport { CustomCube as CubeIcon } from '../../icons/custom-cube';\nimport { generateResourceId } from '../../utils/generate-resource-id';\nimport { ConfirmationDialog } from '../confirmation-dialog';\nimport { ResourceUnavailable } from '../resource-unavailable';\nimport { Scrollbar } from '../scrollbar';\nimport { ProductVariantDialog } from './product-variant-dialog';\n\nexport const ProductVariants = (props) => {\n  const { variants: variantsProp, ...other } = props;\n  const [variantDialogOpen, handleOpenVariantDialog, handleCloseVariantDialog] = useDialog();\n  const [deleteDialogOpen, handleOpenDeleteDialog, handleCloseDeleteDialog] = useDialog();\n  const [variants, setVariants] = useState(variantsProp);\n  const [selectedVariant, setSelectedVariant] = useState(null);\n\n  const handleExitedDialog = () => {\n    if (selectedVariant) {\n      setSelectedVariant(null);\n    }\n  };\n\n  const handleDeleteVariant = () => {\n    setVariants((prevVariants) => prevVariants\n      .filter((variant) => variant.id !== selectedVariant.id));\n    setSelectedVariant(null);\n    handleCloseDeleteDialog();\n  };\n\n  const handleVariantsChange = (variant, mode) => {\n    let temp = [...variants];\n\n    if (mode === 'add') {\n      temp = [\n        ...temp,\n        {\n          ...variant,\n          id: generateResourceId(),\n          createdAt: new Date()\n        }\n      ];\n    } else {\n      const index = variants.findIndex((_variant) => _variant.id === variant.id);\n      temp[index] = variant;\n    }\n\n    setVariants(temp);\n  };\n\n  useEffect(() => {\n    setVariants(variantsProp);\n  }, [variantsProp]);\n\n  const displayUnavailable = variants.length === 0;\n\n  return (\n    <>\n      <Card\n        variant=\"outlined\"\n        {...other}\n      >\n        <CardHeader\n          action={(\n            <Button\n              color=\"primary\"\n              onClick={handleOpenVariantDialog}\n              variant=\"text\"\n            >\n              Add\n            </Button>\n          )}\n          title=\"Variants\"\n        />\n        <Divider />\n        <Scrollbar>\n          <Table sx={{ minWidth: 600 }}>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Variant\n                </TableCell>\n                <TableCell>\n                  SKU\n                </TableCell>\n                <TableCell>\n                  Created\n                </TableCell>\n                <TableCell>\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {variants.map((variant) => (\n                <TableRow key={variant.id}>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={variant.image}\n                        sx={{\n                          border: (theme) => `1px solid ${theme.palette.divider}`,\n                          height: 48,\n                          mr: 2,\n                          width: 48\n                        }}\n                        variant=\"rounded\"\n                      >\n                        <CubeIcon />\n                      </Avatar>\n                      <div>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"body2\"\n                        >\n                          {variant.name}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {variant.price}\n                        </Typography>\n                      </div>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {variant.sku}\n                  </TableCell>\n                  <TableCell>\n                    {format(variant.createdAt, 'MMM dd yyyy')}\n                  </TableCell>\n                  <TableCell sx={{ width: 135 }}>\n                    <Box sx={{ display: 'flex' }}>\n                      <Typography\n                        color=\"primary\"\n                        sx={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          setSelectedVariant(variant);\n                          handleOpenVariantDialog();\n                        }}\n                        variant=\"subtitle2\"\n                      >\n                        Edit\n                      </Typography>\n                      <Divider\n                        flexItem\n                        orientation=\"vertical\"\n                        sx={{ mx: 2 }}\n                      />\n                      <Typography\n                        color=\"primary\"\n                        onClick={() => {\n                          setSelectedVariant(variant);\n                          handleOpenDeleteDialog();\n                        }}\n                        sx={{ cursor: 'pointer' }}\n                        variant=\"subtitle2\"\n                      >\n                        Delete\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Scrollbar>\n        {displayUnavailable && (\n          <ResourceUnavailable\n            onCreate={handleOpenVariantDialog}\n            sx={{ m: 2 }}\n          />\n        )}\n      </Card>\n      <ProductVariantDialog\n        onClose={handleCloseVariantDialog}\n        onExited={handleExitedDialog}\n        onVariantsChange={handleVariantsChange}\n        open={variantDialogOpen}\n        variant={selectedVariant}\n      />\n      <ConfirmationDialog\n        message=\"Are you sure you want to delete this variant? This can't be undone.\"\n        onCancel={handleCloseDeleteDialog}\n        onConfirm={handleDeleteVariant}\n        open={deleteDialogOpen}\n        title=\"Delete variant\"\n        variant=\"error\"\n      />\n    </>\n  );\n};\n\nProductVariants.propTypes = {\n  variants: PropTypes.array.isRequired\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Grid } from '@material-ui/core';\nimport { productApi } from '../api/product';\nimport { ProductInfo } from '../components/product/product-info';\nimport { ProductInfoDialog } from '../components/product/product-info-dialog';\nimport { ProductStatus } from '../components/product/product-status';\nimport { ProductVariants } from '../components/product/product-variants';\nimport { ResourceError } from '../components/resource-error';\nimport { ResourceLoading } from '../components/resource-loading';\nimport { useMounted } from '../hooks/use-mounted';\nimport gtm from '../lib/gtm';\n\nexport const ProductSummary = () => {\n  const mounted = useMounted();\n  const [productState, setProductState] = useState({ isLoading: true });\n  const [openInfoDialog, setOpenInfoDialog] = useState(false);\n\n  const getProduct = useCallback(async () => {\n    setProductState(() => ({ isLoading: true }));\n\n    try {\n      const result = await productApi.getProduct();\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          data: result\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n\n      if (mounted.current) {\n        setProductState(() => ({\n          isLoading: false,\n          error: err.message\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getProduct().catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const renderContent = () => {\n    if (productState.isLoading) {\n      return <ResourceLoading />;\n    }\n\n    if (productState.error) {\n      return <ResourceError />;\n    }\n\n    return (\n      <>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            container\n            item\n            lg={8}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductInfo\n                onEdit={() => setOpenInfoDialog(true)}\n                product={productState.data}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductVariants variants={productState.data?.variants} />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            lg={4}\n            spacing={3}\n            sx={{\n              height: 'fit-content',\n              order: {\n                md: 2,\n                xs: 1\n              }\n            }}\n            xs={12}\n          >\n            <Grid\n              item\n              xs={12}\n            >\n              <ProductStatus product={productState.data} />\n            </Grid>\n          </Grid>\n        </Grid>\n        <ProductInfoDialog\n          onClose={() => setOpenInfoDialog(false)}\n          open={openInfoDialog}\n          product={productState.data}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Product: Summary | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1\n        }}\n      >\n        {renderContent()}\n      </Box>\n    </>\n  );\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Refresh = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n      fillRule=\"evenodd\"\n    />\n  </svg>, 'Refresh'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const QuestionMarkOutlined = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-6 w-6\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>, 'QuestionMarkOutlined'\n);\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { ExclamationOutlined as ExclamationIcon } from '../icons/exclamation-outlined';\nimport { Refresh as RefreshIcon } from '../icons/refresh';\n\nconst ResourceErrorRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceError = (props) => {\n  const { error, onReload, ...other } = props;\n\n  return (\n    <ResourceErrorRoot {...other}>\n      <ExclamationIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        {error || 'Error loading data, please try again.'}\n      </Typography>\n      {onReload && (\n        <Button\n          color=\"primary\"\n          onClick={onReload}\n          startIcon={<RefreshIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"text\"\n        >\n          Reload Data\n        </Button>\n      )}\n    </ResourceErrorRoot>\n  );\n};\n\nResourceError.propTypes = {\n  error: PropTypes.string,\n  onReload: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Button, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { Plus as PlusIcon } from '../icons/plus';\nimport { QuestionMarkOutlined as QuestionMarkIcon } from '../icons/question-mark-outlined';\n\nconst ResourceUnavailableRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceUnavailable = (props) => {\n  const { onCreate, ...other } = props;\n\n  return (\n    <ResourceUnavailableRoot {...other}>\n      <QuestionMarkIcon sx={{ color: 'text.secondary' }} />\n      <Typography\n        color=\"textSecondary\"\n        sx={{ mt: 2 }}\n        variant=\"body2\"\n      >\n        There are not objects here yet.\n      </Typography>\n      {onCreate && (\n        <Button\n          color=\"primary\"\n          onClick={onCreate}\n          startIcon={<PlusIcon fontSize=\"small\" />}\n          sx={{ mt: 2 }}\n          variant=\"contained\"\n        >\n          Create Object\n        </Button>\n      )}\n    </ResourceUnavailableRoot>\n  );\n};\n\nResourceUnavailable.propTypes = {\n  onCreate: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport { Box, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport const PropertyListItem = (props) => {\n  const { align, children, component, value, label, ...other } = props;\n\n  return (\n    <ListItem\n      component={component}\n      disableGutters\n      sx={{\n        px: 3,\n        py: 1.5\n      }}\n      {...other}\n    >\n      <ListItemText\n        disableTypography\n        primary={(\n          <Typography\n            color=\"textPrimary\"\n            sx={{ minWidth: align === 'vertical' ? 'inherit' : 180 }}\n            variant=\"subtitle2\"\n          >\n            {label}\n          </Typography>\n        )}\n        secondary={(\n          <Box\n            sx={{\n              flex: 1,\n              mt: align === 'vertical' ? 0.5 : 0\n            }}\n          >\n            {children || (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {value}\n              </Typography>\n            )}\n          </Box>\n        )}\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: align === 'vertical' ? 'column' : 'row',\n          my: 0\n        }}\n      />\n    </ListItem>\n  );\n};\n\nPropertyListItem.defaultProps = {\n  align: 'vertical'\n};\n\nPropertyListItem.propTypes = {\n  align: PropTypes.string,\n  component: PropTypes.elementType,\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\n\nexport const PropertyList = (props) => {\n  const { children } = props;\n\n  return (\n    <List disablePadding>\n      {children}\n    </List>\n  );\n};\n\nPropertyList.propTypes = {\n  children: PropTypes.node\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Eye = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Eye'\n);\n","import { List } from '@material-ui/core';\n\nexport const ActionList = (props) => (\n  <List\n    dense\n    sx={{\n      backgroundColor: 'neutral.100',\n      width: '100%'\n    }}\n    {...props}\n  />\n);\n","import PropTypes from 'prop-types';\nimport { ListItemButton, ListItemIcon, ListItemText } from '@material-ui/core';\n\nexport const ActionListItem = (props) => {\n  const { icon: Icon, label, ...other } = props;\n\n  return (\n    <ListItemButton {...other}>\n      <ListItemIcon>\n        <Icon\n          fontSize=\"small\"\n          sx={{ color: 'text.secondary' }}\n        />\n      </ListItemIcon>\n      <ListItemText primary={label} />\n    </ListItemButton>\n  );\n};\n\nActionListItem.propTypes = {\n  icon: PropTypes.elementType,\n  label: PropTypes.string.isRequired\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n","import PropTypes from 'prop-types';\nimport { MenuItem } from '@material-ui/core';\nimport { InputField } from './input-field';\nimport { StatusBadge } from './status-badge';\n\nexport const StatusSelect = (props) => {\n  const { options, ...other } = props;\n\n  return (\n    <InputField\n      fullWidth\n      select\n      {...other}\n    >\n      {options.map((option) => (\n        <MenuItem\n          key={option.value}\n          sx={{\n            alignItems: 'center',\n            display: 'flex'\n          }}\n          value={option.value}\n        >\n          <StatusBadge\n            color={option.color}\n            sx={{\n              backgroundColor: option.color,\n              mr: 1\n            }}\n          />\n          {option.label}\n        </MenuItem>\n      ))}\n    </InputField>\n  );\n};\n\nStatusSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n  })).isRequired\n};\n","import PropTypes from 'prop-types';\nimport { Autocomplete, TextField } from '@material-ui/core';\nimport { alpha } from '@material-ui/core/styles';\n\nexport const AutocompleteField = (props) => {\n  const { error, helperText, label, options, placeholder, ...other } = props;\n\n  return (\n    <Autocomplete\n      options={options}\n      sx={{\n        '& .MuiFilledInput-root .MuiFilledInput-input': {\n          px: 1.5,\n          py: 0.75\n        }\n      }}\n      renderInput={({ InputProps, ...rest }) => (\n        <TextField\n          {...rest}\n          error={error}\n          helperText={helperText}\n          label={label}\n          placeholder={placeholder}\n          sx={{\n            '& .MuiFilledInput-root': {\n              backgroundColor: 'background.paper',\n              borderWidth: 1,\n              borderStyle: 'solid',\n              borderColor: 'neutral.300',\n              borderRadius: 1,\n              boxShadow: '0px 1px 2px 0px rgba(9, 30, 66, 0.08)',\n              '&.MuiAutocomplete-inputRoot': {\n                p: 0\n              },\n              transition: (theme) => theme.transitions.create([\n                'border-color',\n                'box-shadow'\n              ]),\n              '&:hover': {\n                backgroundColor: 'background.paper'\n              },\n              '&.Mui-focused': {\n                backgroundColor: 'background.paper',\n                boxShadow: (theme) => `${alpha(theme.palette.primary.main,\n                  0.25)} 0 0 0 0.2rem`\n              },\n              '& .MuiFilledInput-input': {\n                fontSize: 14,\n                height: 'unset',\n                lineHeight: 1.6,\n                px: 1.5,\n                py: 0.75\n              },\n              '&.Mui-disabled': {\n                backgroundColor: 'action.disabledBackground',\n                boxShadow: 'none',\n                borderColor: alpha('#D6DBE1', 0.5)\n              },\n              ':not(.MuiInputBase-adornedStart)': {\n                p: 0\n              }\n            }\n          }}\n          variant=\"filled\"\n          // eslint-disable-next-line react/jsx-no-duplicate-props\n          InputProps={{\n            disableUnderline: true,\n            ...InputProps\n          }}\n          InputLabelProps={{\n            shrink: true,\n            sx: {\n              color: 'text.primary',\n              fontSize: 14,\n              fontWeight: 500,\n              mb: 0.5,\n              position: 'relative',\n              transform: 'none'\n            }\n          }}\n        />\n      )}\n      ChipProps={{ variant: 'outlined' }}\n      {...other}\n    />\n  );\n};\n\nAutocompleteField.propTypes = {\n  error: PropTypes.bool,\n  helperText: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  placeholder: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { Avatar, Box, Button, Typography } from '@material-ui/core';\nimport { Upload as UploadIcon } from '../icons/upload';\n\nexport const ImageDropzone = (props) => {\n  const { accept, maxFiles, maxSize, minSize, onDrop, sx } = props;\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        borderColor: 'neutral.200',\n        borderRadius: 1,\n        borderStyle: 'dashed',\n        borderWidth: 1,\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        outline: 'none',\n        width: '100%',\n        py: 2,\n        ...(isDragActive && {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        }),\n        '&:hover': {\n          borderColor: 'primary.main',\n          backgroundColor: 'action.hover'\n        },\n        ...sx\n      }}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      <Avatar\n        sx={{\n          backgroundColor: 'rgba(238, 240, 242, 1)',\n          color: 'text.secondary',\n          height: 36,\n          width: 36\n        }}\n      >\n        <UploadIcon />\n      </Avatar>\n      <Button\n        color=\"primary\"\n        variant=\"text\"\n      >\n        Upload\n      </Button>\n      <Typography\n        align=\"center\"\n        sx={{ color: 'text.secondary' }}\n        variant=\"caption\"\n      >\n        Select images\n      </Typography>\n    </Box>\n  );\n};\n\nImageDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  onDrop: PropTypes.func,\n  sx: PropTypes.object\n};\n","import { createSvgIcon } from '@material-ui/core/utils';\n\nexport const DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n","import { Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport { DotsHorizontal as DotsHorizontalIcon } from '../icons/dots-horizontal';\n\nconst ResourceLoadingRoot = styled('div')(({ theme }) => ({\n  alignItems: 'center',\n  backgroundColor: theme.palette.neutral[100],\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(3)\n}));\n\nexport const ResourceLoading = (props) => (\n  <ResourceLoadingRoot {...props}>\n    <DotsHorizontalIcon sx={{ color: 'text.secondary' }} />\n    <Typography\n      color=\"textSecondary\"\n      sx={{ mt: 2 }}\n      variant=\"body2\"\n    >\n      Loading resource data\n    </Typography>\n  </ResourceLoadingRoot>\n);\n"],"sourceRoot":""}