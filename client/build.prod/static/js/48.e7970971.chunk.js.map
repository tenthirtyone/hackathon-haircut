{"version":3,"sources":["containers/foundation-typography.js","components/demo-preview.js"],"names":["items","description","fontSize","value","FoundationTypography","theme","useTheme","useEffect","gtm","push","event","sx","backgroundColor","flexGrow","py","maxWidth","color","mb","variant","display","gap","gridAutoFlow","title","href","target","alignItems","justifyContent","minHeight","minWidth","mr","container","spacing","map","item","md","pr","xs","flexWrap","textTransform","whiteSpace","typography","lineHeight","DemoPreviewRoot","styled","overflow","DemoPreview","props","children","other","mt"],"mappings":"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","file":"static/js/48.e7970971.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Card, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { DemoPreview } from '../components/demo-preview';\nimport gtm from '../lib/gtm';\n\nconst items = [\n  {\n    description: 'Heading text',\n    fontSize: '48px',\n    value: 'h1'\n  },\n  {\n    description: 'Heading text',\n    fontSize: '36px',\n    value: 'h2'\n  },\n  {\n    description: 'Heading text',\n    fontSize: '32px',\n    value: 'h3'\n  },\n  {\n    description: 'Page headers',\n    fontSize: '24px',\n    value: 'h4'\n  },\n  {\n    description: 'Section headings',\n    fontSize: '18px',\n    value: 'h5'\n  },\n  {\n    description: 'Card Headers',\n    fontSize: '16px',\n    value: 'h6'\n  },\n  {\n    description: 'Components and section headings',\n    fontSize: '16px',\n    value: 'body1'\n  },\n  {\n    description: 'Heavily used in most components',\n    fontSize: '14px',\n    value: 'body2'\n  },\n  {\n    description: 'Components',\n    fontSize: '16px',\n    value: 'subtitle1'\n  },\n  {\n    description: 'Labels',\n    fontSize: '14px',\n    value: 'subtitle2'\n  },\n  {\n    description: 'Helper text',\n    fontSize: '12px',\n    value: 'caption'\n  },\n  {\n    description: 'Subtitles',\n    fontSize: '12px',\n    value: 'overline'\n  }\n];\n\nexport const FoundationTypography = () => {\n  const theme = useTheme();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Foundation: Typography | Carpatin Dashboard</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          flexGrow: 1,\n          py: 4\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography\n            color=\"textPrimary\"\n            sx={{ mb: 6 }}\n            variant=\"h4\"\n          >\n            Typography\n          </Typography>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 5,\n              gridAutoFlow: 'row'\n            }}\n          >\n            <DemoPreview\n              title={(\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Carpatin uses\n                  {' '}\n                  <Link\n                    color=\"primary\"\n                    href=\"https://fonts.google.com/specimen/Inter\"\n                    target=\"_blank\"\n                    variant=\"inherit\"\n                  >\n                    Inter\n                  </Link>\n                  {' '}\n                  for text and display instances.\n                </Typography>\n              )}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex'\n                }}\n              >\n                <Card\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    minHeight: 100,\n                    minWidth: 120,\n                    mr: 3\n                  }}\n                  variant=\"outlined\"\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h3\"\n                  >\n                    Abc\n                  </Typography>\n                </Card>\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"subtitle1\"\n                  >\n                    Main font\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Components, headings, body and UI text\n                  </Typography>\n                </div>\n              </Box>\n            </DemoPreview>\n            <DemoPreview title=\"Text sizes\">\n              <Grid\n                container\n                spacing={3}\n              >\n                {items.map((item) => (\n                  <Grid\n                    item\n                    key={item.value}\n                    md={6}\n                    sx={{\n                      alignItems: 'center',\n                      display: 'flex',\n                      pr: 3\n                    }}\n                    xs={12}\n                  >\n                    <Card\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        minHeight: 100,\n                        minWidth: 120,\n                        mr: 3\n                      }}\n                      variant=\"outlined\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant={item.value}\n                      >\n                        Abc\n                      </Typography>\n                    </Card>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        flexGrow: 1,\n                        flexWrap: 'wrap'\n                      }}\n                    >\n                      <Box sx={{ mr: 'auto' }}>\n                        <Typography\n                          color=\"textPrimary\"\n                          sx={{ textTransform: 'capitalize' }}\n                          variant=\"subtitle1\"\n                        >\n                          {item.value}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {item.description}\n                        </Typography>\n                      </Box>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                        whiteSpace=\"nowrap\"\n                      >\n                        {item.fontSize}\n                        {' '}\n                        /\n                        {' '}\n                        {theme.typography[item.value].lineHeight}\n                      </Typography>\n                    </Box>\n                  </Grid>\n                ))}\n              </Grid>\n            </DemoPreview>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Box, Card, CardContent, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nconst DemoPreviewRoot = styled('div')((() => ({\n  overflow: 'auto'\n})));\n\nexport const DemoPreview = (props) => {\n  const { title, description, children, ...other } = props;\n\n  return (\n    <DemoPreviewRoot {...other}>\n      <div>\n        {typeof title === 'string' ? (\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {title}\n          </Typography>\n        ) : title}\n        {description && (\n          <Box sx={{ mt: 0.5 }}>\n            {typeof description === 'string' ? (\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {description}\n              </Typography>\n            ) : description}\n          </Box>\n        )}\n      </div>\n      <Card\n        sx={{ mt: 2 }}\n        variant=\"outlined\"\n      >\n        <CardContent>\n          {children}\n        </CardContent>\n      </Card>\n    </DemoPreviewRoot>\n  );\n};\n\nDemoPreview.propTypes = {\n  children: PropTypes.node.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n"],"sourceRoot":""}