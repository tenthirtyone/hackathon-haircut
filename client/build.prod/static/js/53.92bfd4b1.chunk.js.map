{"version":3,"sources":["components/account/account-details.js","components/account/account-change-password.js","components/account/account-2fa.js","containers/account-general.js"],"names":["companySizeOptions","AccountDetails","props","formik","useFormik","initialValues","companyName","companySize","email","fullName","jobTitle","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","helpers","a","toast","success","resetForm","setStatus","setSubmitting","err","console","error","setErrors","message","Card","variant","CardContent","Grid","container","spacing","item","md","xs","Typography","color","handleSubmit","Box","sx","alignItems","display","pb","Avatar","src","height","mr","width","Button","size","type","Boolean","touched","errors","fullWidth","helperText","label","name","onBlur","handleBlur","onChange","handleChange","value","select","map","companySizeOption","MenuItem","FormHelperText","AccountChangePassword","newPassword","password","min","Account2FA","onClick","AccountGeneral","useEffect","gtm","push","event","backgroundColor","my"],"mappings":"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","file":"static/js/53.92bfd4b1.chunk.js","sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Typography\n} from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nconst companySizeOptions = ['1-10', '11-30', '31-50', '50+'];\n\nexport const AccountDetails = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      companyName: 'ACME Corp LLC.',\n      companySize: '1-10',\n      email: 'chen.simmons@acmecorp.com',\n      fullName: 'Chen Simmons',\n      jobTitle: 'Operation',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      companyName: Yup.string().max(255).required('Company name is required'),\n      companySize: Yup\n        .string()\n        .max(255)\n        .oneOf(companySizeOptions)\n        .required('Company size is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      fullName: Yup.string().max(255).required('Full Name is required'),\n      jobTitle: Yup.string().max(255).required('Job name is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Settings saved');\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Settings\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <form onSubmit={formik.handleSubmit}>\n              <div>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    pb: 3\n                  }}\n                >\n                  <Avatar\n                    src=\"/static/user-chen_simmons.png\"\n                    sx={{\n                      height: 64,\n                      mr: 2,\n                      width: 64\n                    }}\n                  />\n                  <div>\n                    <Grid\n                      container\n                      spacing={1}\n                      sx={{ pb: 1 }}\n                    >\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"outlined\"\n                        >\n                          Upload new picture\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          color=\"primary\"\n                          size=\"small\"\n                          type=\"button\"\n                          variant=\"text\"\n                        >\n                          Delete\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Recommended dimensions: 200x200, maximum file size: 5MB\n                    </Typography>\n                  </div>\n                </Box>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.fullName && formik.errors.fullName)}\n                      fullWidth\n                      helperText={formik.touched.fullName && formik.errors.fullName}\n                      label=\"Full Name\"\n                      name=\"fullName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.fullName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.email && formik.errors.email)}\n                      fullWidth\n                      helperText={formik.touched.email && formik.errors.email}\n                      label=\"Email address\"\n                      name=\"email\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      type=\"email\"\n                      value={formik.values.email}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.jobTitle && formik.errors.jobTitle)}\n                      fullWidth\n                      helperText={formik.touched.jobTitle && formik.errors.jobTitle}\n                      label=\"Job title\"\n                      name=\"jobTitle\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.jobTitle}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.companyName\n                        && formik.errors.companyName)}\n                      fullWidth\n                      helperText={formik.touched.companyName && formik.errors.companyName}\n                      label=\"Company name\"\n                      name=\"companyName\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      value={formik.values.companyName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <InputField\n                      error={Boolean(formik.touched.companySize\n                        && formik.errors.companySize)}\n                      fullWidth\n                      helperText={formik.touched.companySize && formik.errors.companySize}\n                      label=\"Company size\"\n                      name=\"companySize\"\n                      onBlur={formik.handleBlur}\n                      onChange={formik.handleChange}\n                      select\n                      value={formik.values.companySize}\n                    >\n                      {companySizeOptions.map((companySizeOption) => (\n                        <MenuItem\n                          key={companySizeOption}\n                          value={companySizeOption}\n                        >\n                          {companySizeOption}\n                        </MenuItem>\n                      ))}\n                    </InputField>\n                  </Grid>\n                  {formik.errors.submit && (\n                    <Grid\n                      item\n                      xs={12}\n                    >\n                      <FormHelperText error>\n                        {formik.errors.submit}\n                      </FormHelperText>\n                    </Grid>\n                  )}\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <Button\n                      color=\"primary\"\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Save settings\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </form>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { Button, Card, CardContent, FormHelperText, Grid, Typography } from '@material-ui/core';\nimport { InputField } from '../input-field';\n\nexport const AccountChangePassword = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      newPassword: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      newPassword: Yup.string().min(7).max(255).required('New password is required'),\n      password: Yup.string().min(7).max(255).required('Old password is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        toast.success('Password changed');\n        helpers.resetForm();\n        helpers.setStatus({ success: true });\n        helpers.setSubmitting(false);\n      } catch (err) {\n        console.error(err);\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      {...props}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Change password\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <form onSubmit={formik.handleSubmit}>\n              <Grid\n                container\n                spacing={2}\n              >\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <InputField\n                    error={Boolean(formik.touched.password && formik.errors.password)}\n                    fullWidth\n                    helperText={formik.touched.password && formik.errors.password}\n                    label=\"Old password\"\n                    name=\"password\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    type=\"password\"\n                    value={formik.values.password}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <InputField\n                    error={Boolean(formik.touched.newPassword\n                      && formik.errors.newPassword)}\n                    fullWidth\n                    helperText={formik.touched.newPassword && formik.errors.newPassword}\n                    label=\"New password\"\n                    name=\"newPassword\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    type=\"password\"\n                    value={formik.values.newPassword}\n                  />\n                </Grid>\n                {formik.errors.submit && (\n                  <Grid\n                    item\n                    xs={12}\n                  >\n                    <FormHelperText error>\n                      {formik.errors.submit}\n                    </FormHelperText>\n                  </Grid>\n                )}\n                <Grid\n                  item\n                  xs={12}\n                >\n                  <Button\n                    color=\"primary\"\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Change password\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import toast from 'react-hot-toast';\nimport { Button, Card, CardContent, Grid, Typography } from '@material-ui/core';\n\nexport const Account2FA = () => {\n  const handleActivate = () => {\n    toast.success('Two-factor authentication activated');\n  };\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Grid\n          container\n          spacing={4}\n        >\n          <Grid\n            item\n            md={5}\n            xs={12}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h6\"\n            >\n              Two-factor authentication (2FA)\n            </Typography>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              Enhanced security for your mention account\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={7}\n            xs={12}\n          >\n            <Button\n              color=\"primary\"\n              onClick={handleActivate}\n              size=\"large\"\n              variant=\"outlined\"\n            >\n              Activate\n            </Button>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box } from '@material-ui/core';\nimport { AccountDetails } from '../components/account/account-details';\nimport { AccountChangePassword } from '../components/account/account-change-password';\nimport { Account2FA } from '../components/account/account-2fa';\nimport gtm from '../lib/gtm';\n\nexport const AccountGeneral = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Account: General | Carpatin Dashboard</title>\n      </Helmet>\n      <Box sx={{ backgroundColor: 'background.default' }}>\n        <AccountDetails />\n        <AccountChangePassword sx={{ my: 3 }} />\n        <Account2FA />\n      </Box>\n    </>\n  );\n};\n"],"sourceRoot":""}